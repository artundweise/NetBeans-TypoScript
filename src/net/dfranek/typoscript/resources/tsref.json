{"cObj":{"extendsType":""},"array":{"extendsType":""},"int":{"extendsType":""},"intList":{"extendsType":""},"double":{"extendsType":""},"boolean":{"extendsType":""},"string":{"extendsType":""},"ADMPANEL":{"extendsType":""},"ARR_languages_strings":{"extendsType":"","properties":{"default":{"type":"string","defaultValue":"","description":""},"en":{"type":"string","defaultValue":"","description":""},"dk":{"type":"string","defaultValue":"","description":""},"de":{"type":"string","defaultValue":"","description":""},"no":{"type":"string","defaultValue":"","description":""},"it":{"type":"string","defaultValue":"","description":""},"fr":{"type":"string","defaultValue":"","description":""},"nl":{"type":"string","defaultValue":"","description":""},"cz":{"type":"string","defaultValue":"","description":""},"pl":{"type":"string","defaultValue":"","description":""},"si":{"type":"string","defaultValue":"","description":""},"fi":{"type":"string","defaultValue":"","description":""},"tr":{"type":"string","defaultValue":"","description":""},"se":{"type":"string","defaultValue":"","description":""},"pt":{"type":"string","defaultValue":"","description":""},"ru":{"type":"string","defaultValue":"","description":""},"ro":{"type":"string","defaultValue":"","description":""},"ch":{"type":"string","defaultValue":"","description":""},"sk":{"type":"string","defaultValue":"","description":""},"lt":{"type":"string","defaultValue":"","description":""},"is":{"type":"string","defaultValue":"","description":""},"hr":{"type":"string","defaultValue":"","description":""},"hu":{"type":"string","defaultValue":"","description":""},"gl":{"type":"string","defaultValue":"","description":""},"th":{"type":"string","defaultValue":"","description":""},"gr":{"type":"string","defaultValue":"","description":""},"hk":{"type":"string","defaultValue":"","description":""},"eu":{"type":"string","defaultValue":"","description":""},"bg":{"type":"string","defaultValue":"","description":""},"br":{"type":"string","defaultValue":"","description":""},"et":{"type":"string","defaultValue":"","description":""},"ar":{"type":"string","defaultValue":"","description":""},"he":{"type":"string","defaultValue":"","description":""},"ua":{"type":"string","defaultValue":"","description":""},"lv":{"type":"string","defaultValue":"","description":""},"jp":{"type":"string","defaultValue":"","description":""},"vn":{"type":"string","defaultValue":"","description":""},"ca":{"type":"string","defaultValue":"","description":""},"ba":{"type":"string","defaultValue":"","description":""},"kr":{"type":"string","defaultValue":"","description":""},"eo":{"type":"string","defaultValue":"","description":""},"my":{"type":"string","defaultValue":"","description":""},"hi":{"type":"string","defaultValue":"","description":""}}},"CARRAY":{"extendsType":"stdWrap","properties":{"1":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects). The order by which you specific the objects is not important as the array will be sorted before it's parsed!<br \/>\n<br \/>\n"},"2":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects). The order by which you specific the objects is not important as the array will be sorted before it's parsed!<br \/>\n<br \/>\n"},"3":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects). The order by which you specific the objects is not important as the array will be sorted before it's parsed!<br \/>\n<br \/>\n"},"4":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects). The order by which you specific the objects is not important as the array will be sorted before it's parsed!<br \/>\n<br \/>\n"}}},"CARRAY+TDParams":{"extendsType":"CARRAY","properties":{"TDParams":{"type":"string","defaultValue":"\n","description":"<TD>-params<br \/>\n      NOTE: This applies ONLY if \"CARRAY +TDParams\" is set to be data type<br \/>\nThis property is used only in some cases where CARRAY is used. Please look out for a note about that in the various cases.<br \/>\n"}}},"CASE":{"extendsType":"cObjArray","properties":{"default":{"type":"cObj","defaultValue":"","description":"The default object, if not defined, nothing is returned in the default case.<br \/>\n"},"if":{"type":"if","defaultValue":"","description":"if \"if\" returns false nothing is returned<br \/>\n<br \/>\n"},"key":{"type":"stdWrap","defaultValue":"","description":"If the value of this key is defined, that object will be returned, otherwise the default-object will be returned.<br \/>\n<pre>key = helloWorld<br \/>\nhelloWorld = <a href=\"\/index.php\/TSref\/TEXT\" title=\"TSref\/TEXT\">TEXT<\/a><br \/>\n<br \/>\nhelloWorld.value = this item will be returned<br \/>\n<\/pre><br \/>\n"},"setCurrent":{"type":"stdWrap","defaultValue":"","description":"Sets the \"current\"-value.<br \/>\n<br \/>\n"},"stdWrap":{"type":"stdWrap","defaultValue":"","description":"stdwrap properties, applied on the returned object.<br \/>\n"}}},"CLEARGIF":{"extendsType":"","properties":{"height":{"type":"stdWrap","defaultValue":"1","description":"<img>-data:height \/stdWrap<br \/>\n"},"width":{"type":"stdWrap","defaultValue":"1","description":"<img>-data:width \/stdWrap<br \/>\n"},"wrap":{"type":"stdWrap","defaultValue":"\u00a0| <BR>","description":"wrap\/stdWrap<br \/>\n"}}},"cObjArray":{"extendsType":"","properties":{"1":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects).<br \/>\n"},"2":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects).<br \/>\n"},"3":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects).<br \/>\n"},"4":{"type":"cObj","defaultValue":"","description":"This is a numerical \"array\" of content-objects (cObjects).<br \/>\n"}}},"COBJ_ARRAY":{"extendsType":"cObjArray","properties":{"if":{"type":"if","defaultValue":"\n","description":"if \"if\" returns false the COA is NOT rendered"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"wrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap\/stdWrap<br \/>\n"}}},"COA":{"extendsType":"COBJ_ARRAY"},"COA_INT":{"extendsType":"COBJ_ARRAY","properties":{"includeLibs":{"type":"stdWrap","defaultValue":"\n","description":"list of resources\/stdWrap<br \/>\n(This property is used only if the object is COA_INT!, See introduction.)<br \/>\nThis is a comma-separated list of resources that are included as PHP-scripts (with include_once() function) if this script is included.<br \/>\nThis is possible to do because any include-files will be known before the scripts are included. That's not the case with the regular PHP_SCRIPT cObject."}}},"COLUMNS":{"extendsType":"","properties":{"TDparams":{"type":"stdWrap","defaultValue":"valign=top","description":"<TD>-params\/stdWrap<br \/>\n"},"1":{"type":"cObj","defaultValue":"\n","description":"This is the content-object for each column!!"},"2":{"type":"cObj","defaultValue":"\n","description":"This is the content-object for each column!!"},"3":{"type":"cObj","defaultValue":"\n","description":"This is the content-object for each column!!"},"4":{"type":"cObj","defaultValue":"\n","description":"This is the content-object for each column!!"},"after":{"type":"cObj","defaultValue":"\n","description":"This is a cObject placed after the columns-table!!"},"gapBgCol":{"type":"stdWrap","defaultValue":"\n","description":"HTML-color \/stdWrap<br \/>\nbackground-color for the gap-tablecells"},"gapLineCol":{"type":"stdWrap","defaultValue":"black","description":"HTML-color \/stdWrap<br \/>\n      Line color"},"gapLineThickness":{"type":"stdWrap","defaultValue":"\n","description":"int \/stdWrap<br \/>\n      lineThickness of the dividerline in the gap between cells<br \/>\n0 = no line"},"gapWidth":{"type":"stdWrap","defaultValue":"\n","description":"int \/stdWrap<br \/>\n      Width of the gap between columns.<br \/>\n0 = no gap"},"if":{"type":"if","defaultValue":"\n","description":"if \"if\" returns false the columns are not rendered!"},"rows":{"type":"stdWrap","defaultValue":"2","description":"int (Range: 2-20)\/stdWrap<br \/>\n      The number of rows \u00a0in the columns."},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"tableParams":{"type":"stdWrap","defaultValue":"border=0 cellspacing=0 cellpadding=0","description":"<TABLE>-params\/stdWrap<br \/>\n"},"totalWidth":{"type":"stdWrap","defaultValue":"\n","description":"int\/stdWrap<br \/>\n\t\t\tThe total-width of the columns+gaps"}}},"CONFIG":{"extendsType":"","properties":{"ATagParams":{"type":"string","defaultValue":"\n","description":"<A>-params<br \/>\n      Additional parameters to all links in TYPO3 (excluding menu-links)<br \/>\n<br \/>\nExample:<br \/>\nTo blur links, insert:<br \/>\nonFocus=\"blurLink(this)\""},"MP_defaults":{"type":"string","defaultValue":"\n","description":"Allows you to set a list of page id numbers which will always have a certain \"&MP=...\" parameter added.<br \/>\n<br \/>\nSyntax:<br \/>\n[id],[id],... : [MP-var] | [id],[id],... : [MP-var] | ...<br \/>\n<br \/>\nExample:<br \/>\nconfig.MP_defaults = 36,37,48 : 2-207<br \/>\n<br \/>\nThis will by default add \"&MP=2-207\" to all links pointing to pages 36,37 and 48"},"MP_disableTypolinkClosestMPvalue":{"type":"boolean","defaultValue":"\n","description":"If set, the typolink function will not try to find the closest MP value for the id."},"MP_mapRootPoints":{"type":"string","defaultValue":"\n","description":"list of PIDs\/string<br \/>\n      Defines a list of ID numbers from which the MP-vars are automatically calculated for the branch.<br \/>\nThe result is used just like MP_defaults are used to find MP-vars if none has been specified prior to the call to t3lib_tstemplate::linkData().<br \/>\nYou can specify \"root\" as a special keyword in the list of IDs and that will create a map-tree for the whole site (but this may be VERY processing intensive if there are many pages!).<br \/>\nThe order of IDs specified may have a significance; Any ID in a branch which is processed already (by a previous ID root point) will not be processed again."},"USERNAME_substToken":{"type":"string","defaultValue":"<!--###USERNAME###-->","description":"The is the token used on the page, which should be substituted with the current username IF a front-end user is logged in! If no login, the substitution will not happen."},"USERUID_substToken":{"type":"string","defaultValue":"\n","description":"The is the token used on the page, which should be substituted with the current users UID IF a front-end user is logged in! If no login, the substitution will not happen.<br \/>\nThis value has no default value and only if you specify a value for this token will a substitution process take place."},"absRefPrefix":{"type":"string","defaultValue":"\n","description":"If this value is set, then all relative links in TypoScript are prepended with this string. Used to convert relative paths to absolute paths.<br \/>\n<br \/>\nNote: This values is automatically set to the dirname of the index.php script in case simulateStaticDocuments is set to \"PATH_INFO\".<br \/>\nIf you're working on a server where you have both internal and external access, you might to yourself a favour and set the absRefPrefix to the url and path of you site, eg. http:\/\/www.typo3.org\/. If you do not, you risk to render pages to cache from the internal network and thereby prefix image-references and links with a non-accessible path from outside."},"additionalHeaders":{"type":"string","defaultValue":"\n","description":"strings divided by \"|\"<br \/>\n      This is additional headers. You separate each header by a vertical line \"|\". \u00a0Normally TYPO3 does not send any headers with the Header()-function in PHP.<br \/>\n<br \/>\nExamples:<br \/>\nContent-type: text\/vnd.wap.wml<br \/>\n(this will sent a content-header for a WAP-site)<br \/>\n<br \/>\nContent-type: image\/gif | Expires: Mon, 26 Jul 1997 05:00:00 GMT<br \/>\n(this will sent a content-header for a GIF-file and a Expires header)<br \/>\n<br \/>\nLocation: www.typo3.org<br \/>\n(This redirects the page to www.typo3.org)"},"admPanel":{"type":"ADMPANEL","defaultValue":"\n","description":"boolean \/ ADMPANEL properties<br \/>\n      If set, the admin panel appears in the bottom of pages.<br \/>\n<br \/>\nNOTE: In addition the panel must be enabled for the user as well, using the TSconfig for the user! See adminguide documentation.<br \/>\n<br \/>\nSEE: Admin Panel section"},"baseURL":{"type":"string","defaultValue":"\n","description":"This writes the <base> tag in the header of the document. Set this to the value that is expected to be the URL, and append a \"\/\" to the end of the string.<br \/>\n<br \/>\nExample:<br \/>\nconfig.baseURL = http:\/\/typo3.org\/sub_dir\/"},"beLoginLinkIPList":{"type":"string","defaultValue":"\n","description":"[IP-number]<br \/>\n      If set and REMOTE_ADDR matches one of the listed IP-numbers (Wild-card, *, allowed) then a link to the typo3\/ login scrip with redirect pointing back to the page is shown.<br \/>\n<br \/>\nNOTE: beLoginLinkIPList_login and\/or beLoginLinkIPList_logout (see below) must be defined if the link should show up!"},"beLoginLinkIPList_login":{"type":"string","defaultValue":"\n","description":"HTML code wrapped with the login link, see 'beLoginLinkIPList'<br \/>\n<br \/>\nExample:<br \/>\n<HR><B>LOGING<\/B>"},"beLoginLinkIPList_logout":{"type":"string","defaultValue":"\n","description":"HTML code wrapped with the logout link, see above"},"cache":{"type":"array","defaultValue":"","description":"The maximum cache lifetime of a page can not only be determined the start and stop times of content elements on the page itself, but also by arbitrary records on any other page. However, the page has to be configured so that TYPO3 knows, which records' start and stop times to include. Otherwise, the cache entry will be used although a start\/stop date already passed by.<br \/>\n<br \/>\nTo include records of type <tablename> on page <pid> into the cache lifetime calculation of page <page-id>, add the following TypoScript:<br \/>\nconfig.cache.<page-id> = <tablename>:<pid><br \/>\n<br \/>\nThus, if you want to include the fe_users records on page 2 in the cache lifetime calculation for page 10, add the following TypoScript:<br \/>\nconfig.cache.10 = fe_users:2<br \/>\n<br \/>\nMultiple record sources can be added as comma-separated list, e.g.<br \/>\nconfig.cache.10 = fe_users:2,tt_news:11<br \/>\n<br \/>\nIn order to consider records for the cache lifetime of all pages, use the *all* keyword:<br \/>\nconfig.cache.all = fe_users:2"},"cache_clearAtMidnight":{"type":"boolean","defaultValue":"false","description":"With this setting the cache always expires at midnight of the day, the page is scheduled to expire."},"cache_period":{"type":"int","defaultValue":"86400 (=24H)","description":"int, seconds<br \/>\n      The number of second a page may remain in cache.<br \/>\nThis value is overridden by the value set in the page-record (field=\"cache_timeout\") if this value is greater than zero."},"compensateFieldWidth":{"type":"double","defaultValue":"\n","description":"this floating point value will be used by the FORMS cObject to compensate the length of the formfields text and input.<br \/>\nThis feature is useful, if the page-option \"smallFormFields\" is set. In that case Netscape renders formfields much longer than IE. If you want the two browsers to display the same size formfields, use a value of approx \"0.6\" for netscape-browsers.<br \/>\n<br \/>\nExample:<br \/>\n[browser = netscape]<br \/>\n\u00a0 config.compensateFieldWidth = 0.6<br \/>\n[global]<br \/>\n<br \/>\nThis option may be overridden in the FORMS-cObject."},"content_from_pid_allowOutsideDomain":{"type":"boolean","defaultValue":"\n","description":"Using the \"Show content from this page instead\" feature allows you to insert content from the current domain only. Setting this option will allow content included from anywhere in the page tree!"},"debug":{"type":"boolean","defaultValue":"\n","description":"If set any debug-information in the TypoScript code is output. Currently this applies only to the menu-objects"},"defaultGetVars":{"type":"array","defaultValue":"\n","description":"Allows to set default values for GET parameters. Default value is taken only if the GET parameter isn't defined. Array notation is done with dots, e.g.:<br \/>\n<br \/>\ntest[var1] will be written as text.var1<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nconfig.defaultgetVars {<br \/>\n    test.var1.var2.p3 = 15<br \/>\n    L = 3<br \/>\n}<br \/>\n\t\t\t"},"disableAllHeaderCode":{"type":"boolean","defaultValue":"false","description":"If this is set, none of the features of the PAGE-object is processed and the content of the page will be the result of the cObject array (1,2,3,4...) of the PAGE-object. \u00a0This means that the result of the cObject should include everything from the <HTML> .... to the <\/HTML> tag !!<br \/>\nUse this feature in templates supplying other content-types than HTML. That could be an image or a WAP-page!"},"disableCharsetHeader":{"type":"boolean","defaultValue":"\n","description":"By default a header \"content-type:text\/html; charset...\" is sent. This option will disable that."},"disablePageExternalUrl":{"type":"boolean","defaultValue":"\n","description":"If set, pages with doktype \"External Url\" will not trigger jumpUrl in TSFE. This may help you to have external urls open inside you framesets."},"disablePrefixComment":{"type":"boolean","defaultValue":"\n","description":"If set, the stdWrap property \"prefixComment\" will be disabled, thus preventing any revealing and spaceconsuming comments in the HTML source code."},"disablePreviewNotification":{"type":"boolean","defaultValue":"\n","description":"Disables the \"preview\" notification box completely"},"doctype":{"type":"string","defaultValue":"Default is a DOCTYPE like this:\n<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.0 Transitional\/\/EN\">\n","description":"If set, then a document type declaration (and an XML prologue) will be generated. The value can either be a complete doctype or one of the following keywords:<br \/>\n<br \/>\n\"xhtml_trans\" for XHTML 1.0 Transitional doctype.<br \/>\n\"xhtml_frames\" for XHTML 1.0 Frameset doctype.<br \/>\n\"xhtml_strict\" for XHTML 1.0 Strict doctype.<br \/>\n\"xhtml_basic\" for XHTML basic doctype.<br \/>\n\"xhtml_11\" for XHTML 1.1 doctype.<br \/>\n\"xhtml+rdf_10\" for XHTML+RDFa 1.0 doctype.<br \/>\n\"xhtml_2\" for XHTML 2 doctype.<br \/>\n\"html5\" for HTML5<br \/>\n\"none\" for NO doctype at all.<br \/>\n<br \/>\nNote that the keywords also change the way TYPO3 generates some of the XHTML tags to ensure valid XML. If you set doctype to a string, then you must also set config.xhtmlDoctype (see below).<br \/>\n<br \/>\nSee \"config.htmlTag_setParams\" and \"config.htmlTag_langKey\" for more details on the effect on the html tag.<br \/>\n"},"doctypeSwitch":{"type":"boolean","defaultValue":"\n","description":"If set, the order of <?xml...> and <!DOCTYPE...> will be reversed. This is needed for MSIE to be standards compliant with XHTML.<br \/>\n<br \/>\nBackground:<br \/>\nBy default TYPO3 outputs the XML\/DOCTYPE in compliance with the standards of XHTML. However a browser like MSIE will still run in \"quirks-mode\" unless the <?xml> and <DOCTYPE> tags are ordered opposite. But this breaks CSS validation...<br \/>\nWith this option designers can decide for themselves what they want then.<br \/>\n<br \/>\nIf you want to check the compatibility-mode of your webbrowser you can do so with a simple JavaScript that can be inserted on a TYPO3 page like this:<br \/>\n<br \/>\npage.headerData.1 = TEXT<br \/>\npage.headerData.1.value = <script>alert(document.compatMode);<\/script><br \/>\n<br \/>\nIf your browser has detected the DOCTYPE correctly it will report \"CSS1Compat\"<br \/>\nIf you are not running in compliance mode you will get some other message. MSIE will report \"BackCompat\" for instance - this means it runs in quirks-mode, supporting all the old \"browser-bugs\"."},"enableContentLengthHeader":{"type":"boolean","defaultValue":"\n","description":"If set, a header \"content-length: [bytes of content]\" is sent.<br \/>\n<br \/>\nIf a PHP_SCRIPT_EXT object is detected on the page or if the Backend user is logged in, this is disabled. The reason is that the content length header cannot include the lenght of these objects and the content-length will cut of the lenght of the document in some browsers."},"extTarget":{"type":"string","defaultValue":"_top","description":"default external target. Used by typolink if no extTarget is set"},"fileTarget":{"type":"string","defaultValue":"\n\t\t\t","description":"Default file link target. Used by typolink if no fileTarget is set. "},"forceTypeValue":{"type":"int","defaultValue":"\n","description":"Force the &type value of all TYPO3 generated links to a specific value (except if overruled by local forceTypeValue values).<br \/>\nUseful if you run a template with special content at - say &type=95 - but still wants to keep your targets neutral. Then you set your targets to blank and this value to the type value you wish."},"frameReloadIfNotInFrameset":{"type":"boolean","defaultValue":"\n","description":"If set, then the current page will check if the page object name (eg. \"page\" or \"frameset\") exists as \"parent.[name]\" (eg. \"parent.page\") and if not the page will be reloaded in top frame. This secures that links from search engines to pages inside a frameset will load the frameset.<br \/>\nWorks only with type-values different from zero."},"ftu":{"type":"boolean","defaultValue":"false","description":"If set, the \"&ftu=....\" GET-fallback identification is inserted.<br \/>\n\"&ftu=[hash]\" is always inserted in the links on the first page a user hits. If it turns out in the next hit that the user has cookies enabled, this variable is not set anymore as the cookies does the job. If no cookies is accepted the \"ftu\" remains set for all links on the site and thereby we can still track the user.<br \/>\n<br \/>\nYou should not set this feature if grabber-spiders like Teleport are going to grab your site!<br \/>\nYou should not set this feature if you want search-engines to index your site (in conjunction with the simulateStaticDocuments feature!)<br \/>\n<br \/>\nYou can also ignore this feature if you're certain, website users will use cookies.<br \/>\n\u00a0\"ftu\" means fe_typo_user (\"fe\" is \"frontend\")."},"headerComment ":{"type":"string","defaultValue":"\n","description":"The content is added before the \"TYPO3 Content Management Framework\" comment in the <head> section of the page. Use this to insert a note like that \"Programmed by My-Agency\" ..."},"htmlTag_dir":{"type":"string","defaultValue":"\n","description":"Sets text direction for whole document (useful for display of Arabic, Hebrew pages).<br \/>\n<br \/>\nBasically the value becomes the attribute value of \"dir\" for the <html> tag.<br \/>\n<br \/>\nValues:<br \/>\nrtl = Right-To-Left (for Arabic \/ Hebrew)<br \/>\nltr = Left-To-Right (Default for other languages)<br \/>\n<br \/>\nExample:<br \/>\nconfig.htmlTag_dir = rtl"},"htmlTag_langKey":{"type":"string","defaultValue":"en","description":"Allows you to set the language value for the attributes \"xml:lang\" and \"lang\" in the <html> tag (when using \"config.doctype = xhtml*\").<br \/>\n<br \/>\nThe values must follow the format specified in IETF RFC 3066<br \/>\n<br \/>\nExample:<br \/>\nconfig.htmlTag_langKey = en-US"},"htmlTag_setParams":{"type":"string","defaultValue":"\n","description":"Sets the attributes for the <html> tag on the page. If you set \"config.doctype\" to a keyword enabling XHTML then some attributes are already set. This property allows you to override any preset attributes with you own content if needed.<br \/>\n<br \/>\nSpecial: If you set it to \"none\" then no attributes will be set at any event.<br \/>\n<br \/>\nExample:<br \/>\nconfig.htmlTag_setParams = \u00a0xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\" xml:lang=\"en-US\""},"incT3Lib_htmlmail ":{"type":"boolean","defaultValue":"\n","description":"Include t3lib\/class.t3lib_htmlmail.php"},"includeLibrary":{"type":"string","defaultValue":"\n","description":"This includes a phpfile."},"index_descrLgd":{"type":"int","defaultValue":"200","description":"This indicates how many chars to preserve as description for an indexed page. This may be used in the search result display."},"index_enable":{"type":"boolean","defaultValue":"\n","description":"Enables cached pages to be indexed."},"index_externals":{"type":"boolean","defaultValue":"\n","description":"If set, external media linked to on the pages is indexed as well."},"inlineStyle2TempFile":{"type":"boolean","defaultValue":"\n","description":"If set, the inline styles TYPO3 controls in the core are written to a file, \u00a0typo3temp\/stylesheet_[hashstring].css, and the header will only contain the link to the stylesheet.<br \/>\nThe file hash is based solely on the content of the styles.<br \/>\n<br \/>\nDepends on the compatibility mode (see Tools>Install>Update wizard):<br \/>\ncompatibility mode < 4.0: \u00a0 0<br \/>\ncompatibility mode >= 4.0: \u00a0 1<br \/>\n<br \/>\nExample:<br \/>\nconfig.inlineStyle2TempFile = 1"},"insertDmailerBoundaries":{"type":"boolean","defaultValue":"\n","description":"If set, boundary marks will be set around all records inserted on the page with cObjects CONTENT and RECORD. They are inserted as HTML-comments and do no harm.<br \/>\nUsed by the Direct Mail module in TYPO3 to segmentize a page by categories."},"intTarget":{"type":"string","defaultValue":"\n","description":"default internal target. Used by typolink if no target is set"},"jumpurl_enable":{"type":"boolean","defaultValue":"0","description":"Jumpurl is a concept where external links are redirected from the index_ts.php script, which first logs which url it was. This logging of external links is only interesting if you use the internal stat-table in TYPO3."},"jumpurl_mailto_disable":{"type":"boolean","defaultValue":"0","description":"Disables the use of jumpUrl when linking to email-adresses."},"language":{"type":"string","defaultValue":"\n","description":"Language key. See stdWrap.lang for more information.<br \/>\nSelect between:<br \/>\nEnglish \u00a0(default) = [empty]<br \/>\nDanish = dk<br \/>\nGerman = de<br \/>\nNorwegian = no<br \/>\nItalian = it<br \/>\netc...<br \/>\n<br \/>\nValue must correspond with the key used for backend system language if there is one. See inside config_default.php or look at the translation page on TYPO3.org for the official 2-byte key for a given language. Notice that selecting the official key is important if you want labels in the correct language from \"locallang\" files.<br \/>\nIf the language you need is not yet a system language in TYPO3 you can use an artificial string of your choice and provide values for it via the TypoScript template where the property \"_LOCAL_LANG\" for most plugins will provide a way to override\/add values for labels. The keys to use must be looked up in the locallang-file used by the plugin of course."},"language_alt":{"type":"string","defaultValue":"\n","description":"If \"config.language\" (above) is used, this can be set to another language key which will be used for labels if a label was not found for the main language. For instance a brazil portuguese website might specify \"pt\" as alternative language which means the portuguese label will be shown if none was available in the main language, brazil portuguese. This feature makes sense if one language is incompletely translated and close to another language."},"linkVars":{"type":"string","defaultValue":"\n","description":"HTTP_GET_VARS, which should be passed on with links in TYPO3. This is compiled into a string stored in $GLOBALS[\"TSFE\"]->linkVars<br \/>\n<br \/>\nThe values are rawurlencoded in PHP.<br \/>\n<br \/>\nYou can specify a range of valid values by appending a () after each value. If this range does not match, the variable won't be appended to links. This is very important to prevent that the cache system gets flooded with forged values.<br \/>\n<br \/>\nThe range may containing one of these values:<br \/>\n[a]-[b] - A range of allowed integer valuesint - Only integer values are allowed[a]|[b]|[c] - A list of allowed strings (whitespaces will be removed)\/[regex]\/ - Match against a regular expression (PCRE style)<br \/>\n<br \/>\nExample:<br \/>\nconfig.linkVars = L, print<br \/>\nThis will add \"&L=[L-value]&print=[print-value]\" to all links in TYPO3.<br \/>\n<br \/>\nconfig.linkVars = L(1-3), print<br \/>\nSame as above, but \"&L=[L-value]\" will only be added if the current value is 1, 2 or 3.<br \/>\n"},"locale_all":{"type":"string","defaultValue":"\n","description":"PHP: setlocale(\"LC_ALL\", [value]);<br \/>\nvalue-examples: deutsch, de_DE, danish, portuguese, spanish, french, norwegian, italian. See www.php.net for other value. Also on linux, look at \/usr\/share\/locale\/<br \/>\n<br \/>\nTSFE->localeCharset is intelligently set to the assumed charset of the locale strings. This is used in stdWrap.strftime to convert locale strings to the renderCharset of the frontend.<br \/>\n<br \/>\nExample:<br \/>\nThis will render dates in danish made with stdWrap\/strftime:<br \/>\nlocale_all = danish<br \/>\nlocale_all = da_DK"},"lockFilePath":{"type":"string","defaultValue":"fileadmin\/","description":"This is used to lock paths to be \"inside\" this path.<br \/>\nUsed by \"filelist\" in stdWrap"},"mainScript":{"type":"string","defaultValue":"index.php","description":"This lets you specify an alternative \"mainScript\" which is the document that TYPO3 expects to be the default doc. This is used in form-tags and other places where TYPO3 needs to refer directly to the main-script of the application"},"meaningfulTempFilePrefix":{"type":"boolean","defaultValue":"\n","description":"If set it will try to render a meaningful prefix before temporary image files.<br \/>\nWorks with GIFBUILDER files (taking content from the Gifbuilder TEXT objects), menus (taking the title of the menu item) and scaled images (using original filename base)."},"message_page_is_being_generated":{"type":"string","defaultValue":"\n","description":"Alternative HTML message that appears if a page is being generated.<br \/>\nNormally when a page is being generated a temporary copy is stored in the cache-table with an expire-time of 30 seconds.<br \/>\n<br \/>\nIt is possible to use some keywords that are replaced with the corresponding values. Possible keywords are: ###TITLE###, ###REQUEST_URI###"},"message_preview":{"type":"string","defaultValue":"\n","description":"Alternative message in HTML that appears when the preview function is active!"},"message_preview_workspace":{"type":"string ","defaultValue":"\n","description":"Alternative message in HTML that appears when the preview function is active in a draft workspace. You can use sprintf() placeholders for Workspace title (first) and number (second).<br \/>\n<br \/>\nExamples:<br \/>\nconfig.message_preview_workspace = <div class=\"previewbox\">Displaying workspace named \"%s\" (number %s)!<\/div><br \/>\nconfig.message_preview_workspace = <div class=\"previewbox\">Displaying workspace number %2$s named \"%1$s\"!<\/div>"},"metaCharset":{"type":"string","defaultValue":"value of \".renderCharset\"","description":"Charset used for the output document. For example in the meta tag:<br \/>\n<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=...><br \/>\n<br \/>\nIs used for a) HTML meta-tag, b) HTTP header (unless disabled with .disableCharsetHeader) and c) xhtml prologues (if available)<br \/>\n<br \/>\nIf renderCharset and metaCharset are different the output content is automatically converted to metaCharset before output and likewise are values posted back to the page converted from metaCharset to renderCharset for internal processing. This conversion takes time of course so there is another good reason to use the same charset for both."},"moveJsFromHeaderToFooter":{"type":"boolean","defaultValue":"\n","description":"<br \/>\n\t\t\tIf set, all Javascript (includes and inline) will be moved to the bottom of the HTML document, which is after content and before the closing body tag<br \/>\n\t\t\t"},"namespaces":{"type":"array","defaultValue":"\n","description":"array of strings<br \/>\n\t\t\tThis property enables you to add xml namespaces (xmlns) to the html tag. The configuration<br \/>\n<br \/>\nnamespaces.dc = http:\/\/purl.org\/dc\/elements\/1.1\/<br \/>\nnamespaces.foaf = http:\/\/xmlns.com\/foaf\/0.1\/<br \/>\n<br \/>\nwill result in a html tag like<br \/>\n<br \/>\n<html xmlns:dc=\"http:\/\/purl.org\/dc\/elements\/1.1\/\" xmlns:foaf=\"http:\/\/xmlns.com\/foaf\/0.1\/\"><br \/>\n<br \/>\nThis is especially useful if you want to add RDFa or microformats to your html.<br \/>\n"},"noPageTitle":{"type":"int","defaultValue":"0","description":"If you only want to have the sitename (from the template record) in your <title> tag, set this to 1. If the value is 2 then the <title> tag is not printed at all.<br \/>\nPlease take note that this tag is required for XHTML compliant output, so you should only disable this tag if you generate it manually already."},"noScaleUp":{"type":"boolean","defaultValue":"\n","description":"Normally images are scaled to the size specified via TypoScript. This also forces small images to be scaled to a larger size. This is not always a good thing.<br \/>\nIf this property is set, images are not allowed to be scaled up in size. This parameter clears the $this->mayScaleUp var of the class t3lib_stdgraphics (often \"gifbuilder\")."},"no_cache":{"type":"boolean","defaultValue":"-","description":"If this is set to true, the page will not be cached. If set to false, it's ignored. Other parameters may have set it to true of other reasons."},"notification_email_charset":{"type":"string","defaultValue":"utf-8","description":"Alternative charset for the notification mails."},"notification_email_encoding":{"type":"string","defaultValue":"\n","description":"This sets the encoding of plaintext emails (notification messages). The default encoding is \"quoted-printable\". But setting this to eg. \"base64\" will encode the content with base64 encoding.<br \/>\n<br \/>\nValues possible:<br \/>\nbase64<br \/>\nquoted-printable<br \/>\n8bit"},"notification_email_urlmode":{"type":"string","defaultValue":"\n","description":"This option allows you to handle URL's in plain text emails so long URLS of more than 76 chars are not broken. This option can be either empty or \"76\" or \"all\".<br \/>\nIf the string is blank, all links in plaintext emails are untouched.<br \/>\nIf it's set to 76 then all links longer then 76 characters are stored in the database and a hash is sent in the GET-var ?RDCT=[md5\/20] to the index.php script which finds the proper link in the database and issues a location header (redirection).<br \/>\nIf the value is \"all\" then ALL \"http:\/\/\" links in the message are converted."},"pageGenScript":{"type":"string","defaultValue":"typo3\/sysext\/cms\/tslib\/pagegen.php","description":"Alternative page generation script for applications using index_ts.php for initialization, caching, stating and so on. This script is included in the global scope of index_ts.php-script and thus you may include libraries here. Always use include_once for libraries.<br \/>\nRemember not to output anything from such an included script. All content must be set into $TSFE->content. Take a look at typo3\/sysext\/cms\/tslib\/pagegen.php<br \/>\n<br \/>\nNOTE: This option is ignored if<br \/>\n<br \/>\n$TYPO3_CONF_VARS[\"FE\"][\"noPHPscriptInclude\"]=1;<br \/>\n<br \/>\nis set in localconf.php."},"pageRendererTemplateFile":{"type":"string","defaultValue":"\n","description":"<br \/>\n\t\t\tSets the template for page renderer class (t3lib_PageRenderer).<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npageRendererTemplateFile = fileadmin\/test_pagerender.html<br \/>\n\t\t\t"},"pageTitleFirst":{"type":"boolean","defaultValue":"\n","description":"If set (and the page title is printed) then the page-title will be printed BEFORE the template title."},"prefixLocalAnchors":{"type":"string","defaultValue":"\n","description":"If set to one of the keywords, the content will have all local anchors in links prefixed with the path of the script. Basically this means that <a href=\"#\"> will be transformed to <a href=\"path\/path\/script?params#\">. This procedure is necessary if the <base> tag is set in the script (eg. if \"realurl\" extension is used to produce Speaking URLs).<br \/>\n<br \/>\nKeywords are the same as for \"xhtml_cleaning\", see above."},"removeDefaultCss":{"type":"boolean","defaultValue":"false","description":"Remove CSS generated by _CSS_DEFAULT_STYLE configuration of extensions."},"removeDefaultJS":{"type":"string","defaultValue":"\n","description":"If set, the default JavaScript in the header will be removed.<br \/>\nThe default JavaScript is the blurLink function and browser detection variables.<br \/>\n<br \/>\nSpecial case: if the value is \"external\" then the default JavaScript is written to a temporary file and included from that file. See \"inlineStyle2TempFile\" below.<br \/>\n<br \/>\nDepends on the compatibility mode (see Tools>Install>Update wizard):<br \/>\ncompatibility mode < 4.0: \u00a0 0<br \/>\ncompatibility mode >= 4.0: \u00a0 1<br \/>\n<br \/>\nExample:<br \/>\nconfig.removeDefaultJS = external<br \/>\nconfig.removeDefaultJS = 1"},"minifyJS":{"type":"boolean","defaultValue":"false","description":"This setting is deprecated and will be removed with TYPO3 4.8! Use config.compressJs instead, which has the same effect."},"minifyCSS":{"type":"boolean","defaultValue":"false","description":"This setting is deprecated and will be removed with TYPO3 4.8! Use config.compressCss instead, which has the same effect."},"compressJs":{"type":"boolean","defaultValue":"false","description":"Enabling this option together with $TYPO3_CONF_VARS['FE']['compressionLevel'] in the Install Tool delivers Frontend JavaScript files using GZIP compression.<br \/>\n<br \/>\nThis can significantly reduce file sizes of linked JavaScript files and thus decrease loading times.<br \/>\n<br \/>\nPlease not that this requires .htaccess to be adjusted, as otherwise the files will not be readable by the user agent. Please see the description of $TYPO3_CONF_VARS['FE']['compressionLevel'] in the Install Tool.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nconfig.compressJs = 1<br \/>\n\t\t\t"},"compressCss":{"type":"boolean","defaultValue":"false","description":"If set, CSS files will be minified and compressed.<br \/>\n<br \/>\nMinification will remove all excess space. The more significant compression step (using Gzip compression) requires $TYPO3_CONF_VARS['FE']['compressionLevel'] to be enabled in the Install Tool together with the gzip-related compressionLevel options in .htaccess, as otherwise the files will not be readable by the user agent.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nconfig.compressCss = 1"},"concatenateJs":{"type":"boolean","defaultValue":"false","description":"Setting config.concatenateJs merges Javascript files referenced in the Frontend together.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nconfig.concatenateJs = 1<br \/>\n<br \/>\nNote: TYPO3 comes with a built-in concatenation handler, but you can also register your own one using $GLOBALS['TYPO3_CONF_VARS']['FE']['jsConcatenateHandler'].<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n$GLOBALS['TYPO3_CONF_VARS']['FE']['jsConcatenateHandler'] = t3lib_extMgm::extPath($_EXTKEY) . 'Classes\/class.tx_myext_jsConcatenateHandler.php:tx_myext_jsConcatenateHandler->concatenateJs';"},"concatenateCss":{"type":"boolean","defaultValue":"false","description":"Setting config.concatenateCss merges Stylesheet files referenced in the Frontend together.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nconfig.concatenateCss = 1<br \/>\n<br \/>\nNote: TYPO3 comes with a built-in concatenation handler, but you can also register your own using $GLOBALS['TYPO3_CONF_VARS']['FE']['cssConcatenateHandler'].<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n$GLOBALS['TYPO3_CONF_VARS']['FE']['cssConcatenateHandler'] = t3lib_extMgm::extPath($_EXTKEY) . 'Classes\/class.tx_myext_cssConcatenateHandler.php:tx_myext_cssConcatenateHandler->concatenateCss';"},"renderCharset":{"type":"string","defaultValue":"UTF-8","description":"Charset used for rendering internally of the page content. It is highly recommended that this value is the same as the charset of the content coming from the main data source (eg. the database). Thus you don't need to do any other conversion.<br \/>\nAll strings from locallang files and locale strings are (and should be) converted to \"renderCharset\" during rendering.<br \/>\n<br \/>\nIf you need another output charset than the render charset, see \"metaCharset\" below.<br \/>\n<br \/>\n"},"sendCacheHeaders":{"type":"boolean","defaultValue":"\n","description":"If set, TYPO3 will output cache-control headers to the client based mainly on \u00a0whether the page was cached internally. This feature allows client browsers and\/or reverse proxies to take load of TYPO3 websites.<br \/>\n<br \/>\nThe conditions for allowing client caching are:<br \/>\npage was cachedNo *_INT or *_EXT objects were on the page (eg. USER_INT)No frontend user is logged inNo backend user is logged in<br \/>\n<br \/>\nIf these conditions are met, the headers sent are:<br \/>\nLast-Modified [SYS_LASTCHANGED of page id]Expires [expire time of page cache]Etag [md5 of content]Cache-Control: max-age: [seconds til expiretime]Pragma: public<br \/>\n<br \/>\nIn case caching is not allowed, these headers are sent to avoid client caching:<br \/>\nCache-Control: private<br \/>\n<br \/>\nNotice that enabling the browser caches means you have to consider how log files are written. Because when a page is cached on the client it will not invoke a request to the webserver, thus not writing the request to the log. There should be ways to circumvent these problems but they are outside the domain of TYPO3 in any case.<br \/>\n<br \/>\nTip: Enabling cache-control headers might confuse editors seeing old content served from the browser cache. \"Shift-Reload\" will bypass both browser- and reverse-proxy caches and even make TYPO3 regenerate the page. Teach them that trick!<br \/>\n<br \/>\nThanks to Ole Tange, www.forbrug.dk for co-authoring this feature."},"sendCacheHeaders_onlyWhenLoginDeniedInBranch":{"type":"boolean","defaultValue":"\n","description":"If this is set, then cache-control headers allowing client caching is sent only if user-logins are disabled for the branch. This feature makes it easier to manage client caching on sites where you have a mixture of static pages and dynamic sections with user logins.<br \/>\n<br \/>\nThe background problem is this: In TYPO3 the same URL can show different content depending on whether a user is logged in or not. If a user is logged in, cache-headers will never allow client caching. But if the same URL was visited without a login prior to the login (allowing caching) the user will still see the page from cache when logged in (and so thinks he is not logged in anyway)! The only general way to prevent this is to have a different URL for pages when users are logged in (which the extension \"realurl\" can accomplish).<br \/>\n<br \/>\nAnother way to solve the problem is using this option in combination with disabling and enabling logins in various sections of the site. In the page records (\"Advanced\" page types) you can disable frontend user logins for branches of the page tree. Since many sites only needs the login in a certain branch of the page tree, disabling it in all other branches makes it much easier to use cache-headers in combination with logins; Cache-headers should simply be sent when logins are not allowed and never be send when logins are allowed! Then there will never be problems with logins and same-URLs."},"setJS_mouseOver":{"type":"boolean","defaultValue":"\n","description":"If set, the over() and out() JavaScript functions are forced to be included"},"setJS_openPic":{"type":"boolean","defaultValue":"\n","description":"If set, the openPic JavaScript function is forced to be included"},"simulateStaticDocuments":{"type":"string","defaultValue":"default is defined by a configuration option in localconf.php. It's\n$TYPO3_CONF_VARS[\"FE\"][\"simulateStaticDocuments\"] = 1;\nThis affects all sites in the database.\nYou can also set this value to the string \u00a0\"PATH_INFO\"","description":"boolean\/string<br \/>\n\t\t\tIf set TYPO3 makes all links in another way than usual. This can be used with Apache compiled with mod_rewrite and configured in httpd.conf for use of this in the \".htaccess\"-files.<br \/>\nInclude this in the .htaccess file<br \/>\nRewriteEngine On<br \/>\nRewriteRule \u00a0 ^[^\/]*\\.html$ \u00a0index.php<br \/>\n<br \/>\nThis means that any \"*.html\"-documents should be handled by index.php.<br \/>\nNow if is done, TYPO3 will interprete the url of the html-document like this:<br \/>\n[title].[id].[type].html<br \/>\nTitle is optional and only usefull for the entries in the apache log-files. You may omit both [title] and [type] but if title is present, type must also be there!.<br \/>\n<br \/>\nExample:<br \/>\nTYPO3 will interprete this as page with uid=23 and type=1 :<br \/>\nStartpage.23.1.html<br \/>\n<br \/>\nTYPO3 will interprete this as the page with alias = \"start\" and the type is zero (default):<br \/>\nstart.html<br \/>\n<br \/>\nAlternative option (PATH_INFO):<br \/>\nInstead of using the rewrite-module in apache (eg. if you're running Windows!) you can use the PATH_INFO variable from PHP.<br \/>\nIt's very simple. Just set simulateStaticDocuments to \"PATH_INFO\" and you're up and running!<br \/>\n<br \/>\nAlso: See below, .absRefPrefix<br \/>\n<br \/>\nExample (put in Setup-field of your template):<br \/>\nconfig.simulateStaticDocuments = PATH_INFO"},"simulateStaticDocuments_addTitle":{"type":"int","defaultValue":"\n","description":"If not zero, TYPO3 generates urls with the title in, limited to the first [simulateStaticDocuments_addTitle] number of chars.<br \/>\n<br \/>\nExample:<br \/>\nStartpage.23.1.html<br \/>\ninstead of the default, \"23.1.html\", without the title."},"simulateStaticDocuments_dontRedirectPathInfoError":{"type":"boolean","defaultValue":"\n","description":"Regarding PATH_INFO mode:<br \/>\nWhen a page is requested by \"PATH_INFO\" method it must be configured in order to work properly. If PATH_INFO is not configured, the index_ts.php script sends a location header to the correct page. However if you better like an error message outputted, just set this option."},"simulateStaticDocuments_noTypeIfNoTitle":{"type":"boolean","defaultValue":"\n","description":"If set, then the type-value will not be set in the simulated filename if the type value is zero anyways. However the filename must be without a title.<br \/>\n<br \/>\nExample:<br \/>\n\"Startpage.23.0.html\" would still be \"Startpage.23.0.html\"<br \/>\n\"23.0.html\" would be \"23.html\" (that is without the zero)<br \/>\n\"23.1.html\" would still be \"23.1.html\" "},"simulateStaticDocuments_pEnc":{"type":"string","defaultValue":"\n","description":"Allows you to also encode additional parameters into the simulated filename.<br \/>\n<br \/>\nExample:<br \/>\nYou have a news-plugin. The main page has the url \"Page_1.228.0.html\" but when one clicks on a news item the url will be \"Page_1.228.0.html?&tx_mininews_pi1[showUid]=2&cHash=b8d239c224\" instead.<br \/>\nNow, this URL will not be indexed by external search-engines because of the query-string (everything after the \"?\" mark). This property avoids this problem by encoding the parameters. These are the options:<br \/>\n<br \/>\nValue set to \"base64\":<br \/>\nThis will transform the filename used to this value: \"Page_1.228+B6JnR4X21pbmluZXdzX3BpMVtzaG93VWlkXT0yJmNIYXNoPWI4ZDIzOWMyMjQ_.0.html\". The querystring has simply been base64-encoded (and some more...) and added to the HTML-filename (so now external search-engines will find this!). The really great thing about this that the filename is self-reliant because the filename contains the parameters. The downside to it is the very very long filename.<br \/>\n<br \/>\nValue set to \"md5\":<br \/>\nThis will transform the filename used to this value:<br \/>\n\"Page_1.228+M57867201f4a.0.html\". Now, what a lovely, short filename! Now all the parameters has been hashed into a 10-char string inserted into the filename. At the same time an entry has been added to a cache table in the database so when a request for this filename reaches the frontend, then the REAL parameter string is found in the database! The really great thing about this is that the filename is very short (opposite to the base64-method). The downside to this is that IF you clear the database cache table at any time, the URL here does NOT work until a page with the link has been generated again (re-inserting the parameter list into the database).<br \/>\n<br \/>\nNOTICE: From TYPO3 3.6.0 the encoding will work only on parameters that are manually entered in the list set by .simulateStaticDocuments_pEnc_onlyP (see right below) or those parameters that various plugins might allow in addition. This is to limit the run-away risk when many parameters gets combined."},"simulateStaticDocuments_pEnc_onlyP":{"type":"string","defaultValue":"\n","description":"A list of variables that may be a part of the md5\/base64 encoded part of a simulate_static_document virtual filename (see property in the row above).<br \/>\n<br \/>\nExample:<br \/>\nsimulateStaticDocuments_pEnc_onlyP = tx_maillisttofaq_pi1[pointer], L, print<br \/>\n<br \/>\n-> this will allow the \"pointer\" parameter for the extension \"maillisttofaq\" to be included (in addition to whatever vars the extension sets itself) and further the parameter \"L\" (could be language selection) and \"print\" (could be print-version)."},"simulateStaticDocuments_replacementChar":{"type":"string","defaultValue":"\n","description":"Word separator for URLs generated by simulateStaticDocuments. If set to<br \/>\nhyphen, this option allows search engines to index keywords in URLs. Before TYPO3 4.0 this character was hard-coded to underscore.<br \/>\n<br \/>\nDepends on the compatibility mode (see Tools>Install>Update wizard):<br \/>\ncompatibility mode < 4.0: \u00a0 underscore \"_\"<br \/>\ncompatibility mode >= 4.0: \u00a0 hyphen \"-\""},"spamProtectEmailAddresses":{"type":"string","defaultValue":"\n","description":"\"ascii\" \/ -10 to 10<br \/>\n\t\t\tIf set, then all email addresses in typolinks will be encrypted so spam bots cannot detect them.<br \/>\n<br \/>\nIf you set this value to a number, then the encryption is simply an<br \/>\noffset of character values. If you set this value to \"-2\" then all<br \/>\ncharacters will have their ASCII value offset by \"-2\". To make this<br \/>\npossible, a little JavaScript code is added to every generated web page!<br \/>\n(It is recommended to set the value in the range from -5 to 1 since setting it to >= 2 means a \"z\" is converted to \"|\" which is a special character in TYPO3 tables syntax \u2013 and that might confuse columns in tables. Now hardcoded range)<br \/>\n<br \/>\nAlternatively you can set this value to the keyword \"ascii\". This way every<br \/>\ncharacter of the \"mailto:\" address will be translated to a Unicode HTML<br \/>\nnotation. Have a look at the example to see how this works.<br \/>\n<br \/>\nExample:<br \/>\nmailto:a@b.c will be converted to<br \/>\nmailto:&#97;&#64;&#98;&#46;&#99;<br \/>\nThe big advantage of this method is that it doesn't need any JavaScript!"},"spamProtectEmailAddresses_atSubst":{"type":"string","defaultValue":"(at)","description":"Substitute label for the at-sign (@)."},"spamProtectEmailAddresses_lastDotSubst":{"type":"string","defaultValue":"Default: . ( <= just a simple dot)","description":"Substitute label for the last dot in the email address.<br \/>\nExample: (dot)"},"stat":{"type":"boolean","defaultValue":"true","description":"Enable stat logging at all."},"stat_apache":{"type":"boolean","defaultValue":"false","description":"Enable logging to the logfile \"stat_apache_logfile\""},"stat_apache_logfile":{"type":"string","defaultValue":"\n","description":"This defines the name of the logfile where TYPO3 writes an Apache-style logfile to. The location of the directory is defined by $TYPO3_CONF_VARS[\"FE\"][\"logfile_dir\"] \u00a0which must exist and be writable. It can be relative (to PATH_site) or absolute, but in any case it must be within the regular allowed paths of TYPO3 (meaning for absolute paths that it must be within the \"lockRootDir\" set up in $TYPO3_CONF_VARS).<br \/>\n<br \/>\nIt is also possible to use date markers in the filename as they are provided by the PHP function strftime(). This will enable a natural rotation of the logfiles.<br \/>\n<br \/>\nExample:<br \/>\nconfig.stat_apache_logfile = typo3_%Y%m%d.log<br \/>\n<br \/>\nThis will create daily log files (eg. typo3_20060321.log)."},"stat_apache_niceTitle":{"type":"string","defaultValue":"\n","description":"boolean \/ string<br \/>\n\t\t\tIf set, the URL will be transliterated from the renderCharset to ASCII (eg \u00e4 => ae, \u00e0 => a, &#945; \"alpha\" => a), which yields nice and readable page titles in the log. All non-ASCII characters that cannot be converted will be changed to underscores.<br \/>\n<br \/>\nIf set to \"utf-8\", the page title will be converted to UTF-8 which results<br \/>\nin even more readable titles, if your log analyzing software supports it."},"stat_apache_noHost":{"type":"boolean","defaultValue":"\n","description":"If true the HTTP_HOST is - if available - NOT inserted instead of the IP-address"},"stat_apache_noRoot":{"type":"boolean","defaultValue":"\n","description":"If set, the root part (level 0) of the path will be removed from the path. This makes a shorter name in case you have only a redundant part like \"home\" or \"my site\"."},"stat_apache_notExtended":{"type":"boolean","defaultValue":"\n","description":"If true the logfile is NOT written in Apache extended format"},"stat_apache_pagenames":{"type":"string","defaultValue":"\n","description":"The \"pagename\" simulated for apache.<br \/>\nDefault: \u00a0 \u00a0\"[path][title]--[uid].html\"<br \/>\nCodes:<br \/>\n[title] = inserts title, no special characters and shortend to 30 chars.<br \/>\n[uid] = the id<br \/>\n[alias] = any alias<br \/>\n[type] = the type (typeNum)<br \/>\n[path] = the path of the page."},"stat_excludeBEuserHits":{"type":"boolean","defaultValue":"false","description":"If set a pagehit is not logged if a user is logged in into TYPO3."},"stat_excludeIPList":{"type":"string","defaultValue":"\n","description":"list of strings<br \/>\n\t\t\tIf the REMOTE_ADDR is in the list of IP-addresses, it's also not logged.<br \/>\nCan use wildcard, eg. \"192.168.1.*\""},"stat_mysql":{"type":"boolean","defaultValue":"false","description":"Enable logging to the MySQL table sys_stat."},"stat_pageLen":{"type":"int","defaultValue":"30","description":"int 1-100<br \/>\n\t\t\tThe length of the page name (at the end of the path) written to the logfile\/database."},"stat_titleLen":{"type":"int","defaultValue":"20","description":"int 1-100<br \/>\n\t\t\tThe length of the page names in the path written to logfile\/database"},"stat_typeNumList":{"type":"intList","defaultValue":"0,1","description":"List of pagetypes that should be registered in the statistics table, sys_stat.<br \/>\nIf no types are listed, all types are logged.<br \/>\nDefault is \"0,1\" which normally logs all hits on framesets and hits on content keeping pages. Of course this depends on the template design."},"sword_noMixedCase":{"type":"boolean","defaultValue":"\n","description":"Used by the parseFunc-substitution of search Words (sword):<br \/>\nIf set, the words MUST be the exact same case as the search word was."},"sword_standAlone":{"type":"boolean","defaultValue":"\n","description":"Used by the parseFunc-substitution of search Words (sword):<br \/>\nIf set, the words MUST be surrounded by whitespace in order to be marked up."},"sys_language_mode":{"type":"string","defaultValue":"\n","description":"Setting various modes of handling localization.<br \/>\nThe syntax is \"[keyword] ; [value]\".<br \/>\n<br \/>\nPossible keywords are:<br \/>\n<br \/>\n[default] - The system will look for a translation of the page (from \"Alternative Page Language\" table) and if it is not found it will fall back to the default language and display that.<br \/>\n<br \/>\ncontent_fallback - [ Recommended ] The system will always operate with the selected language even if the page is not translated with a page overlay record. This will keep menus etc. translated. However, the content on the page can still fall back to another language, defined by the value of this keyword, eg. \"content_fallback ; 1,0\" to fall back to the content of sys_language_uid 1 and if that is not present either, to default (0)<br \/>\n<br \/>\nstrict - The system will report an error if the requested translation does not exist. Basically this means that all pages with gray background in the Web>Info \/ Localization overview module will fail (they would otherwise fall back to default language in one or another way)<br \/>\n<br \/>\nignore - The system will stay with the selected language even if the page is not translated and there's no content available in this language, so you can handle that situation on your own then."},"sys_language_overlay":{"type":"string","defaultValue":"\n","description":"boolean \/ keyword<br \/>\n\t\t\tIf set, records from certain tables selected by the CONTENT cObject using the \"languageField\" setting will select the default language (0) instead of any language set by sys_language_uid \/ sys_language_mode. In addition the system will look for a translation of the selected record and overlay configured fields.<br \/>\nThe requirements for this is that the table is configured with \"languageField\" and \"transOrigPointerField\" in the [ctrl] section of $TCA. Also, exclusion of certain fields can be done with the \"l10n_mode\" directive in the field-configuration of $TCA.<br \/>\n<br \/>\nFor backend administration this requires that you configure the \"Web>Page\" module to display content elements accordingly; That each default element is shown and next to it any translation found. This configuration can be done with Page TSconfig for a section of the website using the object path \"mod.web_layout.defLangBinding = 1\".<br \/>\n<br \/>\nKeyword:<br \/>\nhideNonTranslated : If this keyword is used a record that has no translation will not be shown. The default is that records with no translation will show up in the default language."},"sys_language_softExclude":{"type":"string","defaultValue":"\n","description":"Setting additional \"exclude\" flags for l10n_mode in TCA for frontend rendering. Works exactly like sys_language_softMergeIfNotBlank (see that for details - same Syntax!).<br \/>\n<br \/>\nFields set in this property will override if the same field is set for \"sys_language_softMergeIfNotBlank\"."},"sys_language_softMergeIfNotBlank":{"type":"string","defaultValue":"\n","description":"Setting additional \"mergeIfNotBlank\" fields from TypoScript.<br \/>\n<br \/>\nBackground:<br \/>\nIn TCA you can configure \"l10n_mode\" - localization mode - for each field. Two of the options affect how the frontend displays content; The values \"exclude\" and \"mergeIfNotBlank\" (see \"TYPO3 Core API\" document for details). The first (\"exclude\") simply means that the field when found in a translation of a record will not be overlaid the default records field value. The second (\"mergeIfNotBlank\") means that it will be overlaid only if it has a non-blank value.<br \/>\nSince it might be practical to set up fields for \"mergeIfNotBlank\" on a per-site basis this options allows you to override additional fields from tables.<br \/>\n<br \/>\nSyntax:<br \/>\n\u00a0[table]:[field], \u00a0[table]:[field], \u00a0[table]:[field], ...<br \/>\n<br \/>\nExample:<br \/>\nconfig.sys_language_softMergeIfNotBlank = tt_content:image , tt_content:header<br \/>\n<br \/>\nThis setting means that the header and image field of content elements will be used from the translation only if they had a non-blank value. For the image field this might be very practical because it means that the image(s) from the default translation will be used unless other images are inserted!"},"sys_language_uid":{"type":"int","defaultValue":"\n","description":"This value points to the uid of a record from the \"sys_language\" table and if set, this means that various parts of the frontend display code will select records which are assigned to this language. See ->SELECT<br \/>\n<br \/>\nInternally, the value is depending on whether a Alternative Page Language record can be found with that language. If not, the value will default to zero (default language) except if \"sys_language_mode\" is set to a value like \"content_fallback\"."},"titleTagFunction ":{"type":"string","defaultValue":"\n","description":"function-name<br \/>\n\t\t\tPasses the default <title>-tag content to this function. No typoScript parameters are passed though."},"typolinkCheckRootline":{"type":"boolean","defaultValue":"\n","description":"If set, then every \"typolink\" is checked whether it's linking to a page within the current rootline of the site.<br \/>\nIf not, then TYPO3 searches for the first found domain record (without redirect) in that rootline from out to in.<br \/>\nIf found (another domain), then that domain is prepended the link, the external target is used instead and thus the link jumps to the page in the correct domain."},"typolinkEnableLinksAcrossDomains":{"type":"boolean","defaultValue":"\n","description":"This option enables to create links across domains using current domain's linking scheme.<br \/>\n<br \/>\nIf this option is not set, then all cross-domain links will be generated as<br \/>\n<br \/>\n\"http:\/\/domain.tld\/index.php?id=12345\" (where 12345 is page id). If this option is set and current site uses, for example, simulateStatic, then links will be generated as \"http:\/\/domain.tld\/PageTitle.12345.html\" (includes RTE links too). Setting this option requires that domains, where pages are linked, have the same configuration for:<br \/>\n<br \/>\n- linking scheme (i.e. all use simulateStatic or RealURL or CoolURI but not any mixture)<br \/>\n- all domains have identical localization settings (config.sys_language_XXX directives)<br \/>\n- all domains have the same set of languages defined<br \/>\n<br \/>\nThis option implies \"config.typolinkCheckRootline=1\", which will be activated automatically. Setting value of \"config. typolinkCheckRootline\" inside TS template will have no effect.<br \/>\n<br \/>\nDisclaimer: it must be understood that while link is generated to another domain, it is still generated in the context of current domain. No side effects are known at the time of writing of this documentation but they may exist. If any side effects are found, this documentation will be updated to include them."},"typolinkLinkAccessRestrictedPages":{"type":"string","defaultValue":"\n","description":"integer (page id) \/ keyword \"NONE\"<br \/>\n\t\t\tIf set, typolinks pointing to access restricted pages will still link to the page even though the page cannot be accessed. If the value of this setting is an integer it will be interpreted as a page id to which the link will be directed.<br \/>\nIf the value is \"NONE\" the original link to the page will be kept although it will generate a page-not-found situation (which can of course be picked up properly by the page-not-found handler and present a nice login form).<br \/>\n<br \/>\nSee \"showAccessRestrictedPages\" for menu objects as well (similar feature for menus)<br \/>\n<br \/>\nExample:<br \/>\nconfig.typolinkLinkAccessRestrictedPages = 29<br \/>\nconfig.typolinkLinkAccessRestrictedPages_addParams = &return_url=###RETURN_URL###&pageId=###PAGE_ID###<br \/>\n<br \/>\nWill create a link to page with id 29 and add GET parameters where the return URL and original page id is a part of it."},"typolinkLinkAccessRestrictedPages_addParams":{"type":"string","defaultValue":"\n","description":"See \"typolinkLinkAccessRestrictedPages\" above"},"uniqueLinkVars":{"type":"boolean","defaultValue":"0","description":"It might happen that TYPO3 generates links with the same parameter twice or more. This is no problem because only the last parameter is used, thus the problem is just a cosmetical one."},"xhtmlDoctype":{"type":"string","defaultValue":"\n","description":"Sets the document type for the XHTML version of the generated page.<br \/>\n<br \/>\nIf config.doctype is set to a string then config.xhtmlDoctype must be set to one of these keywords:<br \/>\n<br \/>\n\"xhtml_trans\" for XHTML 1.0 Transitional doctype.<br \/>\n\"xhtml_frames\" for XHTML 1.0 Frameset doctype.<br \/>\n\"xhtml_strict\" for XHTML 1.0 Strict doctype.<br \/>\n\"xhtml_basic\" for XHTML basic doctype.<br \/>\n\"xhtml_11\" for XHTML 1.1 doctype.<br \/>\n\"xhtml_2\" for XHTML 2 doctype.<br \/>\n<br \/>\n<br \/>\nThis is an example to use MathML 2.0 in an XHTML 1.1 document:<br \/>\n<br \/>\nconfig.doctype (<br \/>\n<!DOCTYPE html<br \/>\nPUBLIC \"-\/\/W3C\/\/DTD XHTML 1.1 plus MathML 2.0\/\/EN\"<br \/>\n\"http:\/\/www.w3.org\/Math\/DTD\/mathml2\/xhtml-math11-f.dtd\"><br \/>\n)<br \/>\nconfig.xhtmlDoctype = xhtml_11<br \/>\n<br \/>\nDefault:<br \/>\nsame as config.doctype if set to a keyword"},"xhtml_cleaning":{"type":"string","defaultValue":"\n","description":"Tries to clean up the output to make it XHTML compliant and a bit more. THIS IS NOT COMPLETE YET, but a \"pilot\" to see if it makes sense anyways. For now this is what is done:<br \/>\n<br \/>\nWhat it does at this point:<br \/>\n- All tags (img,br,hr) is ended with \"\/>\" - others?<br \/>\n- Lowercase for elements and attributes<br \/>\n- All attributes in quotes<br \/>\n- Add \"alt\" attribute to img-tags if it's not there already.<br \/>\n<br \/>\nWhat it does NOT do (yet) according to XHTML specs.:<br \/>\n- Wellformedness: Nesting is NOT checked<br \/>\n- name\/id attribute issue is not observed at this point.<br \/>\n- Certain nesting of elements not allowed. Most interesting, <PRE> cannot contain img, big,small,sub,sup ...<br \/>\n- Wrapping scripts and style element contents in CDATA - or alternatively they should have entitites converted.<br \/>\n- Setting charsets may put some special requirements on both XML declaration\/ meta-http-equiv. (C.9)<br \/>\n- UTF-8 encoding is in fact expected by XML!!<br \/>\n- stylesheet element and attribute names are NOT converted to lowercase<br \/>\n- ampersands (and entities in general I think) MUST be converted to an entity reference! (&amps;). This may mean further conversion of non-tag content before output to page. May be related to the charset issue as a whole.<br \/>\n- Minimized values not allowed: Must do this: selected=\"selected\"<br \/>\n<br \/>\nPlease see the class t3lib_parsehtml for details.<br \/>\nYou can enable this function by the following values:<br \/>\n<br \/>\nall = the content is always processed before it may be stored in cache.<br \/>\ncached = only if the page is put into the cache,<br \/>\noutput = only the output code just before it's echoed out."},"xmlprologue":{"type":"string","defaultValue":"\n","description":"If empty (not set) then the default XML 1.0 prologue is set, when the doctype is set to a known keyword (eg xhtml_11):<br \/>\n<br \/>\n<?xml version=\"1.0\" encoding=\"[config.renderCharset]\"><br \/>\n<br \/>\nIf set to one of the know keywords then a standard prologue will be set:<br \/>\n\"xml_10\" XML 1.0 prologue (see above)<br \/>\n\"xml_11\" XML 1.1 prologue<br \/>\n<br \/>\nIf \"none\" then the default XML prologue is not set.<br \/>\nAny other string is used as the XML prologue itself."}}},"CONTENT":{"extendsType":"","properties":{"renderObj":{"type":"cObj","defaultValue":"< [tablename]","description":"<br \/>\n"},"select":{"type":"select","defaultValue":"\n","description":"The SQL-statement is set here!"},"slide":{"type":"slide","defaultValue":"\n","description":"int\/stdWrap<br \/>\n\t\t\tIf set and no content element is found by the select command, then the rootLine will be traversed back until some content is found.<br \/>\n<br \/>\nPossible values are \"-1\" (slide back up to the siteroot), \"1\" (only the current level) and \"2\" (up from one level back).<br \/>\n<br \/>\nUse -1 in combination with collect.<br \/>\n<br \/>\n.collect (integer\/stdWrap): If set, all content elements found on current and parent pages will be collected. Otherwise, the sliding would stop after the first hit. Set this value to the amount of levels to collect on, or use \"-1\" to collect up to the siteroot.<br \/>\n.collectFuzzy (boolean\/stdWrap): Only useful in collect mode. If no content elements have been found for the specified depth in collect mode, traverse further until at least one match has occurred.<br \/>\n.collectReverse (boolean\/stdWrap): Change order of elements in collect mode. If set, elements of the current page will be on the bottom."},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"table":{"type":"stdWrap","defaultValue":"\n","description":"TableName\/stdWrap<br \/>\n\t\t\tThe table, the content should come from.<br \/>\nIn standard-configurations this will be \"tt_content\"<br \/>\nNOTE: Only tables allowed are \"pages\" or tables prefixed with one of these: \"tt_\", \"tx_\", \"ttx_\", \"fe_\", \"user_\" or \"static_\""},"wrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap\/stdWrap<br \/>\n\t\t\tWrap the whole content-story..."}}},"slide":{"extendsType":"stdWrap","properties":{"collect":{"type":"stdWrap","defaultValue":"\n","description":"int\/stdWrap<br \/>\n\t\t\tIf set, all content elements found on current and parent pages will be collected. Otherwise, the sliding would stop after the first hit. Set this value to the amount of levels to collect on, or use \u201c-1\u201d to collect up to the siteroot.<br \/>\n"},"collectFuzzy":{"type":"stdWrap","defaultValue":"\n","description":"boolean\/stdWrap<br \/>\n\t\t\tOnly useful in collect mode. If no content elements have been found for the specified depth in collect mode, traverse further until at least one match has occurred.<br \/>\n"},"collectReverse":{"type":"stdWrap","defaultValue":"\n","description":"boolean\/stdWrap<br \/>\n\t\t\tChange order of elements in collect mode. If set, elements of the current page will be at the bottom.<br \/>\n"}}},"CTABLE":{"extendsType":"","properties":{"bm":{"type":"stdWrap","defaultValue":"\n","description":"CARRAY + TDParams\/stdWrap<br \/>\n\t\t\tbottomMenu"},"c":{"type":"stdWrap","defaultValue":"\n","description":"CARRAY + TDParams\/stdWrap<br \/>\n\t\t\tcontent-cell "},"cMargins":{"type":"stdWrap","defaultValue":"0,0,0,0","description":"margins\/stdWrap<br \/>\n\t\t\tDistance around the content-cell \"c\""},"cWidth":{"type":"stdWrap","defaultValue":"\n","description":"pixels\/stdWrap<br \/>\n\t\t\tWidth of the content-cell \"c\""},"lm":{"type":"stdWrap","defaultValue":"\n","description":"CARRAY+TDParams\/stdWrap<br \/>\n\t\t\tleftMenu"},"offset":{"type":"stdWrap","defaultValue":"0,0 = intet","description":"x,y\/stdWrap<br \/>\n\t\t\tOffset from upper left corner"},"rm":{"type":"stdWrap","defaultValue":"\n","description":"CARRAY+TDParams\/stdWrap<br \/>\n\t\t\trightMenu"},"tableParams":{"type":"stdWrap","defaultValue":"border=0 cellspacing=0 cellpadding=0","description":"<TABLE>-params\/stdWrap<br \/>\n"},"tm":{"type":"stdWrap","defaultValue":"\n","description":"CARRAY+TDParams\/stdWrap<br \/>\n\t\t\ttopMenu"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"}}},"EDITPANEL":{"extendsType":"","properties":{"allow":{"type":"string","defaultValue":"\n","description":"Define which functions are accessible. Further this list may be reduced, if the BE_USER does not have permission to perform the action<br \/>\nValues should be listed separated by comma. This is the options you can choose between:<br \/>\ntoolbar,edit,new,delete,move,hide<br \/>\n(toolbar is a general list of icons regarding the page, so use this for pagerecords only)"},"edit.displayRecord":{"type":"boolean","defaultValue":"\n","description":"If set, then the record edited is displayed above the editing form."},"innerWrap":{"type":"wrap","defaultValue":"\n","description":"Wraps the edit panel"},"label":{"type":"string","defaultValue":"\n","description":"Title for the panel. You can insert the record title with %s<br \/>\n<br \/>\nExample:<br \/>\nSection: <B>%s<\/B>"},"line":{"type":"int","defaultValue":"\n","description":"boolean \/ int<br \/>\n\t\t\tIf set, a black line will appear after the panel. This value will indicate the distance from the black line to the panel"},"newRecordFromTable":{"type":"string","defaultValue":"\n","description":"Will display a panel for creation of new element (in the top of list) on the page from that table."},"newRecordInPid":{"type":"int","defaultValue":"\n","description":"Define a page ID where new records (except new pages) will be created."},"onlyCurrentPid":{"type":"boolean","defaultValue":"\n","description":"If set, only records with a pid matching the current id (TSFE->id) will be shown with the panel."},"outerWrap":{"type":"wrap","defaultValue":"\n","description":"Wraps the whole edit panel including the black line (if configured)"},"previewBorder":{"type":"int","defaultValue":"\n","description":"boolean \/ int<br \/>\n\t\t\tIf set, the hidden\/starttime\/endtime\/fe_user elements which are previewed will have a border around.<br \/>\nThe integer value denotes the thickness of the border"},"previewBorder.innerWrap":{"type":"string","defaultValue":"\n","description":"wrap \/ HTML color<br \/>\n\t\t\tinnerWrap wraps the content elements (including the icons) inside the preview border (an HTML table).<br \/>\n<br \/>\nouterWrap wraps the whole content element including the border.<br \/>\n<br \/>\ncolor denotes the color of the border."}}},"FE_TABLE":{"extendsType":"","properties":{"allowEdit":{"type":"string","defaultValue":"\n","description":"allowEdit.[field]<br \/>\n\t\t\tSame as above (\"allowNew\") but this controls which fields that may be written in case of an update of a record (and not a new submission)<br \/>\nPlease pay attension to the property below! \u00a0(\"overrideEdit\")"},"allowNew":{"type":"string","defaultValue":"\n","description":"allowNew.[field]<br \/>\n\t\t\tThis property is in charge of which fields that may be written from the frontend.<br \/>\n<br \/>\nExample:<br \/>\nThis defines that subject is a field, that may be submitted from the frontend. If a value is not submitted, subject is filled with the default value (see above).<br \/>\nThe field \"hidden\" on the other hand cannot be changed from the frontend. \"hidden\" will gain the value from the default definition (see above). If fields are set to \"0\" (zero) it's the same as if they were not defined in this array.<br \/>\n<br \/>\nallowNew {<br \/>\n\u00a0 subject = 1<br \/>\n\u00a0 hidden = 0<br \/>\n}"},"autoInsertPID":{"type":"boolean","defaultValue":"\n","description":"Works with new records: Insert automatically the PID of the page, where the submitted data is sent to. Any \"pid\" supplied from the submitted data will override. This is for convenience."},"default":{"type":"string","defaultValue":"\n","description":"default.[field] This property is in charge of which default-values is used for the table:<br \/>\n<br \/>\nExample:<br \/>\nThis defines the default values used for new records. These values will be overridden with any value submitted instead (as long as the submitted fields are allowed due to \"allowNew\")<br \/>\ndefault {<br \/>\n\u00a0 subject = This is the default subject value!<br \/>\n\u00a0 hidden = 1<br \/>\n\u00a0 parent = 0<br \/>\n}"},"doublePostCheck":{"type":"string","defaultValue":"\n","description":"string (fieldname)<br \/>\n\t\t\tSpecifies a fieldname (integer) into which an integer-hash compiled of the submitted data is inserted. If the field is set, then submissions are checked whether another record with this value already exists. If so, the record is NOT inserted, because it's expected to be a \"double post\" (posting the same data more than once)"},"overrideEdit":{"type":"string","defaultValue":"\n","description":"This works like default-values above but is values inserted after the submitted values has beed processed. This means that opposite to default-values overwritten by the submitted values, these values override the submitted values.<br \/>\n<br \/>\nExample:<br \/>\nIn this case overrideEdit secures that if a user updates his record (if he \"own\" it) the \"hidden\"-field will be set no matter what.<br \/>\n<br \/>\noverrideEdit {<br \/>\n\u00a0 hidden = 1<br \/>\n}"},"processScript":{"type":"string","defaultValue":"\n","description":"Include-script to be used for processing of incoming data to the table. The script is included from a function in the class tslib_fetce<br \/>\nThis is the really important option, because whether or not you are going to utilize the \"cleaning\"\/\"authorization\" features of the properties above depend on how you write your script to process data and put it in the database.<br \/>\nA very good example is to look at \"media\/scripts\/guest_submit.inc\""},"separator":{"type":"string","defaultValue":"chr(10) (linebreak)","description":"Separator character used when the submitted data is an array from eg. a multiple selector box."},"userIdColumn":{"type":"string","defaultValue":"\n","description":"string (field)<br \/>\n\t\t\tThis is a string that points to the column of a record where the user-id of the current fe_user should be inserted. This fe_user-uid is inserted\/updated both by \"new\" and \"edit\""}}},"FILE":{"extendsType":"","properties":{"altText":{"type":"stdWrap","defaultValue":"\n","description":"For <img> output only!<br \/>\n<br \/>\nIf no alttext is specified, it will use an empty alttext"},"emptyTitleHandling":{"type":"string","defaultValue":"useAlt\n","description":"Value can be \"keepEmpty\" to preserve an empty title attribute, or \"useAlt\" to use the alt attribute instead.<br \/>\n"},"file":{"type":"stdWrap","defaultValue":"\n","description":"resource\/stdWrap<br \/>\n\t\t\tIf the resource is jpg,gif,jpeg,png the image is inserted as an image-tag. Al other formats is read and inserted into the HTML-code.<br \/>\nThe maximum filesize of documents to be read is set to 1024 kb internally!"},"linkWrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap\/stdWrap<br \/>\n\t\t\t(before \".wrap\")"},"longdescURL":{"type":"stdWrap","defaultValue":"\n","description":"For <img> output only!<br \/>\n<br \/>\n\"longdesc\" attribute (URL pointing to document with extensive details about image)."},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"wrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap\/stdWrap<br \/>\n"}}},"FORM_dataArray":{"extendsType":"","properties":{"10":{"type":"FORM_dataArray_element","defaultValue":"","description":"alternative way to define form Elements"},"20":{"type":"FORM_dataArray_element","defaultValue":"","description":"alternative way to define form Elements"},"30":{"type":"FORM_dataArray_element","defaultValue":"","description":"alternative way to define form Elements"},"40":{"type":"FORM_dataArray_element","defaultValue":"","description":"alternative way to define form Elements"}}},"FORM_dataArray_element":{"extendsType":"","properties":{"label":{"type":"string","defaultValue":"","description":""},"type":{"type":"string","defaultValue":"","description":""},"name":{"type":"string","defaultValue":"","description":""},"value":{"type":"string","defaultValue":"","description":""},"required":{"type":"boolean","defaultValue":"","description":""}}},"FORM":{"extendsType":"","properties":{"CHECK.layout":{"type":"string","defaultValue":"the \"layout\"-property","description":"Alternative layout for checkboxes"},"COMMENT.layout":{"type":"string","defaultValue":"the \"layout\"-property","description":"Alternative layout for comments."},"LABEL.layout":{"type":"string","defaultValue":"the \"layout\"-property","description":"Alternative layout for label types"},"RADIO.layout":{"type":"string","defaultValue":"the \"layout\"-property","description":"Alternative layout for radiobuttons"},"REQ":{"type":"REQ","defaultValue":"\n","description":"boolean<br \/>\n\t\t\tDefines if required-fields should be checked and marked up"},"accessibility":{"type":"boolean","defaultValue":"\n","description":"If set, then the form will be compliant with accessibility guidelines (XHTML compliant). This includes:<br \/>\n<br \/>\nlabel string will be wrapped in <label for=\"formname[fieldname-hash]\"> ... <\/label>All form elements will have an id-attribute carrying the formname with the md5-hashed fieldname appended<br \/>\n<br \/>\nNotice: In TYPO3 4.0 and later, CSS Styled Content is configured to produce accessible forms by default."},"arrayReturnMode":{"type":"boolean","defaultValue":"\n","description":"If set, the <form> tags and the form content will be returned in an array as separate elements including other pratical values. This mode is for use in extensions where the array return value can be more useful."},"badMess":{"type":"string","defaultValue":"No message","description":"Prefixed Message for the formevaluation in case of missing required fields.<br \/>\nThis message is shown above the list of fields.<br \/>\n<br \/>\nNOTE: May be overridden by the property override feature of the formdata (see above)"},"commentWrap":{"type":"stdWrap","defaultValue":"\n","description":"Comments: Wrap for comments IF you use ###COMMENT###"},"compensateFieldWidth":{"type":"double","defaultValue":"\n","description":"Overriding option to the config-value of the same name. See \"CONFIG\" above."},"data":{"type":"stdWrap","defaultValue":"\n","description":"This is the data that sets up the form. See above.<br \/>\n\"||\" can be used instead of linebreaks"},"dataArray":{"type":"FORM_dataArray","defaultValue":"\n","description":"This is an alternative way to define the form-fields. Instead of using the syntax with vertical separator bars suggested by the .data property, you can define the elements in regular TypoScript style arrays.<br \/>\n.dataArray is added to the input in .data if any.<br \/>\nEvery entry in the dataArray is numeric and has three main properties, label, type, value and required. 'label' and 'value' has stdWrap properties.<br \/>\nThere is an alternative property to .value, which is .valueArray. This is also an array in the same style with numeric entries which has properties label, value and selected. 'label' has stdWrap properties.<br \/>\n<br \/>\nExample:<br \/>\n\u00a0 dataArray {<br \/>\n\u00a0 \u00a0 10.label = Name:<br \/>\n\u00a0 \u00a0 10.type = name=input<br \/>\n\u00a0 \u00a0 10.value = [Enter name]<br \/>\n\u00a0 \u00a0 10.required = 1<br \/>\n\u00a0 \u00a0 20.label = Eyecolor<br \/>\n\u00a0 \u00a0 20.type = eyecolor=select<br \/>\n\u00a0 \u00a0 20.valueArray {<br \/>\n\u00a0 \u00a0 \u00a0 10.label = Blue<br \/>\n\u00a0 \u00a0 \u00a0 10.value = 1<br \/>\n\u00a0 \u00a0 \u00a0 20.label = Red<br \/>\n\u00a0 \u00a0 \u00a0 20.value = 2<br \/>\n\u00a0 \u00a0 \u00a0 20.selected = 1<br \/>\n\u00a0 \u00a0 }<br \/>\n\u00a0 \u00a0 40.type = submit=submit<br \/>\n\u00a0 \u00a0 40.value = Submit<br \/>\n\u00a0 }<br \/>\n<br \/>\n<br \/>\nThis is the same as this line in the .data property:<br \/>\n<br \/>\nName: | *name=input | [Enter name]<br \/>\nEyecolor: | eyecolor=select | Blue=1, *Red=2<br \/>\n| submit=submit | Submit<br \/>\n<br \/>\nWhy do it this way? \u00a0Good question, but doing it this way has a tremendous advantage because labels are all separated from the codes. In addition it's much easier to pull out or insert new elements in the form.<br \/>\nInserting an email-field after the name field would be like this:<br \/>\n\u00a0 dataArray {<br \/>\n\u00a0 \u00a0 15.label = Email:<br \/>\n\u00a0 \u00a0 15.type = input<br \/>\n\u00a0 \u00a0 15.value = your@email.com<br \/>\n\u00a0 \u00a0 15.specialEval = EMAIL<br \/>\n\u00a0 }<br \/>\n<br \/>\nOr translating the form to danish (setting config.language to 'dk'):<br \/>\n<br \/>\n\u00a0 dataArray {<br \/>\n\u00a0 \u00a0 10.label.lang.dk = Navn:<br \/>\n\u00a0 \u00a0 10.value.lang.dk = [Indtast dit navn]<br \/>\n\u00a0 \u00a0 20.label.lang.dk = \u00d8jenfarve<br \/>\n\u00a0 \u00a0 20.valueArray {<br \/>\n\u00a0 \u00a0 \u00a0 10.label.lang.dk = Bl\u00e5<br \/>\n\u00a0 \u00a0 \u00a0 20.label.lang.dk = R\u00f8d<br \/>\n\u00a0 \u00a0 }<br \/>\n\u00a0 \u00a0 40.value.lang.dk = Send<br \/>\n\u00a0 }<br \/>\n"},"dontMd5FieldNames":{"type":"boolean","defaultValue":"\n","description":"The IDs generated for all elements in a form are md5 hashes from the fieldname. Setting this to true will disable this behaviour and use a cleaned fieldname, prefixed with the form name as the ID, instead.<br \/>\nThis can be useful to style specifically named fields with CSS."},"emailMess":{"type":"string","defaultValue":"\n","description":"Message if a field evaluated to be an email adresse did not validate.<br \/>\n<br \/>\nNOTE: May be overridden by the property override feature of the formdata (see above)"},"fieldPrefix":{"type":"string","defaultValue":"\n","description":"Alternative prefix for the name of the fields in this form. Otherwise, all fields are prefixed with the form name (either a unique hash or the name set in the \"formName\" property). If set to \"0\", there will be no prefix at all."},"fieldWrap":{"type":"stdWrap","defaultValue":"\n","description":"Field: Wraps the fields"},"formName":{"type":"string","defaultValue":"\n","description":"An alternative name for this form. Default will be a unique (random) hash.<br \/>\n<br \/>\n<form name=\"...\">"},"goodMess":{"type":"string","defaultValue":"No message","description":"Message for the formevaluation function in case of correctly filled form.<br \/>\n<br \/>\nNOTE: May be overridden by the property override feature of the formdata (see above)"},"hiddenFields":{"type":"cObjArray","defaultValue":"\n","description":"Used to set hiddenFields from TS.<br \/>\n<br \/>\nExample:<br \/>\nhiddenFields.pid = TEXT<br \/>\nhiddenFields.pid.value = 2<br \/>\n<br \/>\nThis makes a hidden-field with the name \"pid\" and value \"2\"."},"image":{"type":"IMAGE","defaultValue":"\n","description":"If this is a valid image the submitbutton is rendered as this image!!<br \/>\n<br \/>\nNOTE: CurrentValue is set to the caption-label before generating the image."},"labelWrap":{"type":"stdWrap","defaultValue":"\n","description":"Labels: Wraps the label"},"layout":{"type":"string","defaultValue":"\n","description":"This defines how the label and the field are placed towards each other.<br \/>\n<br \/>\nExample:<br \/>\nThis substitutes the \"###FIELD###\" with the field data and the \"###LABEL###' with labeldata.<br \/>\n<br \/>\n<tr><td>###FIELD###<\/td><td> ###LABEL###<\/td><\/tr><br \/>\n<br \/>\nYou can also use the marker ###COMMENT### which is ALSO the label value inserted, but wrapped in .commentWrap stdWrap-properties (see below)"},"locationData":{"type":"string","defaultValue":"\n","description":"boolean \/ string<br \/>\n\t\t\tIf this value is true, then a hidden-field called \"locationData\" is added to the form. This field wil be loaded with a value like this:<br \/>\n[page id]:[current record table]:[current record id]<br \/>\nFor example, if a formfield is inserted on page with uid = \"100\", as a page-content item from the table \"tt_content\" with id \"120\", then the value would be \"100:tt_content:120\".<br \/>\nThe value is use by eg. the cObject SEARCHRESULT. If the value $GLOBALS[\"HTTP_POST_VARS\"][\"locationData\"] is detected here, the search is done as if it was performed on this page! This is very usefull if you want a search functionality implemented on a page with the \"stype\" field set to \"L1\" which means that the search is carried out from the first level in the rootline.<br \/>\nSuppose you want the search to submit to a dedicated searchpage where ever. This page will then know - because of locationData - that the search was submittet from another place on the website.<br \/>\nIf \"locationData\" is not only true but also set to \"HTTP_POST_VARS\" then the value will insert the content of $GLOBALS[\"HTTP_POST_VARS\"][\"locationData\"] instead of the true location data of the page. This should be done with search-fields as this will carry the initial searching start point with.<br \/>\nNOTE: May be overridden by the property override feature of the formdata (see above)"},"method":{"type":"string","defaultValue":"POST","description":"form-method<br \/>\n<br \/>\n\t\t\tExample:<br \/>\nGET"},"noValueInsert":{"type":"boolean","defaultValue":"\n","description":"By default values that are submitted to the same page (and thereby same form, eg. at searchforms) are re-inserted in the form instead of any default-data that might be set up.<br \/>\nThis, however, applies ONLY if the \"no_cache=1\" is set! (a page being cached may not include user-specific defaults in the fields of course...)<br \/>\nIf you set this flag, \"noValueInsert\", the content will always be the default content."},"noWrapAttr":{"type":"boolean","defaultValue":"\n","description":"If this value is true then all wrap attributes of textarea elements are suppressed. This is needed for XHTML-compliancy.<br \/>\n<br \/>\nThe wrap attributes can also be disabled on a per-field basis by using the special keyword \"disabled\" as the value of the wrap attribute."},"no_cache":{"type":"string","defaultValue":"\n","description":"Default no_cache-option"},"params":{"type":"string","defaultValue":"\n","description":"form-element tag parameters<br \/>\n\t\t\tExtra parameters to form elements<br \/>\n<br \/>\nExample:<br \/>\nparams = style=\"width:200px;\"<br \/>\nparams.textarea = style=\"width:300px;\"<br \/>\nparams.check =<br \/>\n<br \/>\nThis sets the default to 200 px width, but excludes check-boxes and sets textareas to 300."},"radioWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the labels for radiobuttons"},"radioWrap.accessibilityWrap":{"type":"wrap","defaultValue":"<fieldset###RADIO_FIELD_ID###><legend>###RADIO_GROUP_LABEL###<\/legend>|<\/fieldset>\n","description":"Defines how radio buttons are wrapped when accessibility mode is turned on (see below \u201caccessibility\u201d property)<br \/>\n\t\t\tdefault:<br \/>\n<br \/>\n\t\t\t<fieldset###RADIO_FIELD_ID###><legend>###RADIO_GROUP_LABEL###<\/legend>|<\/fieldset><br \/>\n\t\t\t"},"radioInputWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the input element and label of a radio button."},"recipient":{"type":"stdWrap","defaultValue":"No email","description":"(list of) string \/stdWrap<br \/>\n\t\t\tEmail recipient of the formmail content (generates the hiddenfield \"recipient\")"},"redirect":{"type":"stdWrap","defaultValue":"\n","description":"URL to redirect to (generates the hidden field \"redirect\")<br \/>\n<br \/>\nInteger: this is regarded to be a page in TYPO3<br \/>\nString: this is regarded to be a normal url<br \/>\nEmpty; the current page is chosen.<br \/>\n<br \/>\nNOTE: If this value is set the target of this overriddes the target of the \"type\"."},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the hole form (before formtags is added)"},"target":{"type":"string","defaultValue":"\n","description":"target<br \/>\n\t\t\tDefault target of the form. "},"type":{"type":"int","defaultValue":"\n","description":"Type (action=\"\" of the form):<br \/>\n<br \/>\nInteger: this is regarded to be a page in TYPO3<br \/>\nString: this is regarded to be a normal URL (eg. \"formmail.php\" or \"fe_tce_db.php\")<br \/>\nEmpty: the current page is chosen.<br \/>\n<br \/>\nNOTE: If type is integer\/empty the form will be submitted to a page in TYPO3 and if this page has a value for target\/no_cache, then this will be used instead of the default target\/no_cache below.<br \/>\n<br \/>\nNOTE: If the redirect-value is set, the redirect-target overrides the target set by the action-url<br \/>\n<br \/>\nNOTE: May be overridden by the property override feature of the formdata (see above)"},"wrapFieldName":{"type":"wrap","defaultValue":"\n","description":"This wraps \u00a0the fieldnames before they are applied to the form-field tags.<br \/>\n<br \/>\nExample:<br \/>\nIf value is tx_myextension[input][ \u00a0| \u00a0] \u00a0then the fieldname \"email\" would be wrapped to this value: tx_myextension[input][email]"}}},"REQ":{"extendsType":"","properties":{"fieldWrap":{"type":"stdWrap","defaultValue":"the \"fieldWrap\"-property","description":"Field: Wraps the fields, but for reuired fields"},"labelWrap":{"type":"stdWrap","defaultValue":"the \"labelWrap\"-property","description":"Labels: Wraps the label, but for reuired fields"},"layout":{"type":"string","defaultValue":"the \"layout\"-property","description":"The same as \"layout\" above, but for reuired fields"}}},"FRAMESET":{"extendsType":"","properties":{"1":{"type":"FRAME","defaultValue":"\n","description":"Configuration of frames and nested framesets."},"2":{"type":"FRAME","defaultValue":"\n","description":"Configuration of frames and nested framesets."},"3":{"type":"FRAME","defaultValue":"\n","description":"Configuration of frames and nested framesets."},"4":{"type":"FRAME","defaultValue":"\n","description":"Configuration of frames and nested framesets."},"cols":{"type":"string","defaultValue":"\n","description":"<frameset>-data:cols<br \/>\n\t\t\tCols"},"params":{"type":"string","defaultValue":"\n","description":"<frameset>-params<br \/>\n\t\t\tExample:<br \/>\nborder=\"0\" framespacing=\"0\" frameborder=\"NO\""},"rows":{"type":"string","defaultValue":"\n","description":"<frameset>-data:rows<br \/>\n\t\t\tRows"}}},"FRAME":{"extendsType":"","properties":{"name":{"type":"string","defaultValue":"value of \".obj\"","description":"<frame>-data:name<br \/>\n\t\t\tManually set name of frame<br \/>\n<br \/>\nNOTE: Is set automatically and should not be overridden under normal conditions!"},"obj":{"type":"string","defaultValue":"\n","description":"pointer to toplevel object-name<br \/>\n\t\t\ttoplevel object-name of a PAGE \/ FRAMESET<br \/>\n<br \/>\nExample:<br \/>\n\"left\", \"page\", \"frameset\""},"options":{"type":"string","defaultValue":"\n","description":"url-parameters<br \/>\n\t\t\tExample:<br \/>\nprint=1&othervar=anotherthing<br \/>\nwould add '&print=1&othervar=anotherthing' to the \".src\"-content (if not \".src\" is set manually!!)"},"params":{"type":"string","defaultValue":"\n","description":"<frame>-params<br \/>\n\t\t\tExample:<br \/>\nscrolling=\"AUTO\" noresize frameborder=\"NO\""},"src":{"type":"string","defaultValue":"could be index.php?$id&$type ","description":"<frame>-data:src<br \/>\n\t\t\tManually set the src of the frame<br \/>\n<br \/>\nNOTE: Is set automatically and should not be overridden under normal conditions!"}}},"GifBuilderObj":{"extendsType":"","properties":{"if":{"type":"if","defaultValue":"","description":".if (->if)  is a property of all gifbuilder-objects. If the property is present and NOT set, the object is NOT rendered! This corresponds to the functionallity of \".if\" of the stdWrap-function."}}},"GIFBUILDER":{"extendsType":"","properties":{"1":{"type":"GifBuilderObj","defaultValue":"\n","description":".if (->if)  is a property of all gifbuilder-objects. If the property is present and NOT set, the object is NOT rendered! This corresponds to the functionallity of \".if\" of the stdWrap-function."},"2":{"type":"GifBuilderObj","defaultValue":"\n","description":".if (->if)  is a property of all gifbuilder-objects. If the property is present and NOT set, the object is NOT rendered! This corresponds to the functionallity of \".if\" of the stdWrap-function."},"3":{"type":"GifBuilderObj","defaultValue":"\n","description":".if (->if)  is a property of all gifbuilder-objects. If the property is present and NOT set, the object is NOT rendered! This corresponds to the functionallity of \".if\" of the stdWrap-function."},"4":{"type":"GifBuilderObj","defaultValue":"\n","description":".if (->if)  is a property of all gifbuilder-objects. If the property is present and NOT set, the object is NOT rendered! This corresponds to the functionallity of \".if\" of the stdWrap-function."},"XY":{"type":"string","defaultValue":"100,20","description":"x,y +calc<br \/>\n\t\t\tSize of the gif-file. "},"backColor":{"type":"string","defaultValue":"white","description":"GraphicColor<br \/>\n\t\t\tBackground color for the gif"},"format":{"type":"string","defaultValue":"gif","description":"\"gif\" \/ \"jpg\"<br \/>\n\t\t\tOutput type.<br \/>\n\"jpg\"\/\"jpeg\" = jpg-image"},"maxHeight":{"type":"int","defaultValue":"\n","description":"pixels<br \/>\n\t\t\tMaximal heigth of gif-file"},"maxWidth":{"type":"int","defaultValue":"\n","description":"pixels<br \/>\n\t\t\tMaximal width of gif-file"},"offset":{"type":"string","defaultValue":"0,0","description":"x,y +calc<br \/>\n\t\t\tOffset all objects on the gif."},"quality":{"type":"int","defaultValue":"\n","description":"posint (10-100)<br \/>\n\t\t\tJPG-quality (if \".format\" = jpg\/jpeg)"},"reduceColors":{"type":"int","defaultValue":"\n","description":"posint (1-255)<br \/>\n\t\t\tReduce the number of colors (if gif-file)"},"transparentBackground":{"type":"boolean","defaultValue":"\n","description":"Set this flag to render the background transparent. TYPO3 makes the color found at position 0,0 of the image (upper left corner) transparent.<br \/>\nIf you render text you should leave the niceText option OFF as the result with probably be more precise without the niceText antialiasing hack"},"transparentColor":{"type":"stdWrap","defaultValue":"\n","description":"HTMLColor \/stdWrap<br \/>\n\t\t\tSpecify a color that should be transparent<br \/>\n<br \/>\nExample-values:<br \/>\n#ffffcc<br \/>\nred<br \/>\n255,255,127<br \/>\n<br \/>\nOption:<br \/>\ntransparentColor.closest = 1<br \/>\nThis will allow for the closest color to be matched instead. You may need this if you image is not garanteed \"clean\".<br \/>\n<br \/>\nNOTE: You may experience that this doesn't work if you use reduceColors-option or render text with niceText-option."},"workArea":{"type":"string","defaultValue":"\n","description":"x,y,w,h + calc<br \/>\n\t\t\tDefine the workarea on the giffile. All the GifBuilderObj's will see this as the dimensions of the gif-file regarding alignment, overlaying of images an so on. Only will TEXT-objects exceeding the boundaries of the workarea print outside this area."}}},"ADJUST":{"extendsType":"GifBuilderObj","properties":{"value":{"type":"string","defaultValue":"\n","description":"This lets you adjust the input-levels like in Photoshops \"levels\"-dialog. If you need to adjust gamma, look at the EFFECT-object.<br \/>\nExample:<br \/>\n<br \/>\n20 = ADJUST<br \/>\n20.value = inputLevels = 13,230<br \/>\n<br \/>\nproperties:<br \/>\n<br \/>\ninputLevels: low,high<br \/>\noutputLevels: low, high<br \/>\nautoLevels: -<br \/>\n"}}},"BOX":{"extendsType":"GifBuilderObj","properties":{"align":{"type":"string","defaultValue":"\n","description":"VHalign<br \/>\n"},"color":{"type":"string","defaultValue":"black","description":"GraphicColor<br \/>\n\t\t\tfill-color"},"dimensions":{"type":"string","defaultValue":"\n","description":"x,y,w,h +calc<br \/>\n\t\t\tDimensions of a filled box.<br \/>\nx,y \u00a0 \u00a0is the offset.<br \/>\nw,h \u00a0 \u00a0is the dimensions. Dimensions of 1 will result in 1-pixel wide lines!"},"opacity":{"type":"int","defaultValue":"100\n","description":"pos-int (1-100)<br \/>\n\t\t\tDimensions of a filled box.<br \/>\nOpacity (i.e. inverse of transparency, e.g. 100% opacity = 0% transparency)"}}},"CROP":{"extendsType":"GifBuilderObj","properties":{"align":{"type":"string","defaultValue":"\n","description":"VHalign<br \/>\n"},"backColor":{"type":"string","defaultValue":"The original backColor","description":"GraphicColor<br \/>\n"},"crop":{"type":"string","defaultValue":"\n","description":"x,y,v,h + calc<br \/>\n\t\t\tx,y is offset of the crop-frame,<br \/>\nv,h \u00a0is the dimensions"}}},"ELLIPSE":{"extendsType":"GifBuilderObj","properties":{"dimensions":{"type":"string","defaultValue":"\n","description":"x,y,w,h +calc<br \/>\nDimensions of a filled ellipse.<br \/>\nx,y    is the offset.<br \/>\nw,h    is the dimensions. Dimensions of 1 will result in 1-pixel wide lines!<br \/>\n<br \/>\nExample:<br \/>\nfile  =  GIFBUILDER<br \/>\nfile  {<br \/>\n XY  =  200,200<br \/>\n format  =  jpg<br \/>\n quality  =  100<br \/>\n 10  =  ELLIPSE<br \/>\n 10.dimensions  =  100,100,50,50<br \/>\n 10.color  =  red<br \/>\n<br \/>\n"},"color":{"type":"string","defaultValue":"\n","description":"GraphicColor<br \/>\nfill-color<br \/>\n<br \/>\nExample:<br \/>\nfile  =  GIFBUILDER<br \/>\nfile  {<br \/>\n XY  =  200,200<br \/>\n format  =  jpg<br \/>\n quality  =  100<br \/>\n 10  =  ELLIPSE<br \/>\n 10.dimensions  =  100,100,50,50<br \/>\n 10.color  =  red<br \/>\n<br \/>\n"}}},"EFFECT":{"extendsType":"GifBuilderObj","properties":{"value":{"type":"string","defaultValue":"\n","description":".value = [Varnavn] = [value] | [Varnavn] = [value]<br \/>\n<br \/>\nExample:<br \/>\n20 = EFFECT<br \/>\n20.value = gamme=1.3 | flip | rotate=180<br \/>\n<br \/>\n<br \/>\ngamma: 0.5 - 3.0<br \/>\nblur: 1-99<br \/>\nsharpen: 1-99<br \/>\nsolarize: 0-99<br \/>\nswirl: 0-100<br \/>\nwave: ampli , length<br \/>\ncharcoal: 0-100<br \/>\ngray: -<br \/>\nedge: 0-99<br \/>\nemboss: -<br \/>\nflip: - (Vertical flipping)<br \/>\nflop: - (Horizontal flipping)<br \/>\nrotate: 0-360 (Rotation)<br \/>\ncolors: 2-255<br \/>\nshear: -90 - 90 (Horizontal shearing)<br \/>\ninvert: - (invert the colors)<br \/>\n"}}},"EMBOSS":{"extendsType":"GifBuilderObj","properties":{"blur":{"type":"int","defaultValue":"\n","description":"posint (1-99)<br \/>\n\t\t\tBlurring of the shadow. Above 40 only values of 40,50,60,70,80,90 means something."},"highColor":{"type":"string","defaultValue":"\n","description":"GraphicColor<br \/>\n\t\t\tUpper border-color"},"intensity":{"type":"int","defaultValue":"\n","description":"posint(0-100)<br \/>\n\t\t\tHow \"massive\" the emboss is. This value can - if it has a high value combined with a blurred shadow - create a kind of soft-edged outline."},"lowColor":{"type":"string","defaultValue":"\n","description":"GraphicColor<br \/>\n\t\t\tlower border-color"},"offset":{"type":"string","defaultValue":"\n","description":"x,y<br \/>\n\t\t\tOffset of the emboss"},"opacity":{"type":"int","defaultValue":"\n","description":"posint (1-100)<br \/>\n\t\t\tOpacity (transparency^-1)<br \/>\n100% opacity = 0% transparency). Only active with a value for blur."},"textObjNum":{"type":"int","defaultValue":"\n","description":"pos-int<br \/>\n\t\t\tMust point to the TEXT-object if these shadow-properties are not properties to a TEXT-object directly (\"stand-alone-shadow\"). Then the shadow needs to know which TEXT-object it should be a shadow of!<br \/>\nIf - on the other hand - the shadow is a property to a text-object, this property is not needed."}}},"GB_IMAGE":{"extendsType":"GifBuilderObj","properties":{"align":{"type":"string","defaultValue":"\n","description":"VHalign<br \/>\n"},"file":{"type":"imgResource","defaultValue":"\n","description":"The imagefile"},"mask":{"type":"imgResource","defaultValue":"\n","description":"Optional mask-image for the imagefile."},"offset":{"type":"string","defaultValue":"0,0","description":"x,y +calc<br \/>\n\t\t\tOffset "},"tile":{"type":"string","defaultValue":"\n","description":"x,y<br \/>\n\t\t\ttile x,y times.<br \/>\nMaximum times is 20 each direction. If you need more, use a larger image."}}},"OUTLINE":{"extendsType":"GifBuilderObj","properties":{"color":{"type":"string","defaultValue":"\n","description":"GraphicColor<br \/>\n\t\t\tOutline color"},"textObjNum":{"type":"int","defaultValue":"\n","description":"pos-int<br \/>\n\t\t\tMust point to the TEXT-object if these shadow-properties are not properties to a TEXT-object directly (\"stand-alone-shadow\"). Then the shadow needs to know which TEXT-object it should be a shadow of!<br \/>\nIf - on the other hand - the shadow is a property to a text-object, this property is not needed."},"thickness":{"type":"string","defaultValue":"\n","description":"x,y<br \/>\n\t\t\tThickness in each direction, range 1-2"}}},"SCALE":{"extendsType":"GifBuilderObj","properties":{"height":{"type":"string","defaultValue":"\n","description":"pixels + calc<br \/>\n"},"params":{"type":"string","defaultValue":"\n","description":"ImageMagickParams<br \/>\n"},"width":{"type":"string","defaultValue":"\n","description":"pixels + calc<br \/>\n"}}},"SHADOW":{"extendsType":"GifBuilderObj","properties":{"blur":{"type":"int","defaultValue":"\n","description":"posint (1-99)<br \/>\n\t\t\tBlurring of the shadow. Above 40 only values of 40,50,60,70,80,90 means something.<br \/>\n<br \/>\nNOTE: Unfortunately the blurring capabilities of ImageMagick is not very mature in the version 4.2.9. This is addressed in the later version 5.2.0 where a gaussian blur-function is added. BUT as we do cannot use the latest ImageMagick development yet, this is not utilized so far."},"color":{"type":"string","defaultValue":"\n","description":"GraphicColor<br \/>\n\t\t\tShadow color"},"intensity":{"type":"int","defaultValue":"\n","description":"posint(0-100)<br \/>\n\t\t\tHow \"massive\" the shadow is. This value can - if it has a high value combined with a blurred shadow - create a kind of soft-edged outline."},"offset":{"type":"string","defaultValue":"\n","description":"x,y<br \/>\n\t\t\tShadow offset"},"opacity":{"type":"int","defaultValue":"\n","description":"posint (1-100)<br \/>\n\t\t\tOpacity (transparency^-1)<br \/>\n100% opacity = 0% transparency). Only active with a value for blur."},"textObjNum":{"type":"int","defaultValue":"\n","description":"pos-int<br \/>\n\t\t\tMust point to the TEXT-object if these shadow-properties are not properties to a TEXT-object directly (\"stand-alone-shadow\"). Then the shadow needs to know which TEXT-object it should be a shadow of!<br \/>\nIf - on the other hand - the shadow is a property to a text-object, this property is not needed."}}},"GB_TEXT":{"extendsType":"GifBuilderObj","properties":{"align":{"type":"string","defaultValue":"left","description":"align<br \/>\n\t\t\tAlignment of the text"},"angle":{"type":"string","defaultValue":"0\nRange: -90 til 90","description":"degree<br \/>\n\t\t\tRotation degrees of the text.<br \/>\n<br \/>\nNOTE: Angle is not available if spacing\/wordSpacing is set."},"antiAlias":{"type":"boolean","defaultValue":"1","description":"FreeType antialiasing. Notice, the default mode is \"on\"!<br \/>\n<br \/>\nNote: This option is not available if .niceText is enabled"},"breakWidth":{"type":"int","defaultValue":"\n\t\t\t","description":"Defines the maximum width for an object, overlapping elements will force an automatic line break.<br \/>\n\t\t\t"},"breakSpace":{"type":"float","defaultValue":"1.0","description":"Defines a value that is multiplied by the line height of the current element.<br \/>\n\t\t\t"},"doNotStripHTML":{"type":"boolean","defaultValue":"0","description":"If set, HTML-tags in the string inserted are NOT removed. Any other way HTML-code is removed by default!"},"emboss":{"type":"EMBOSS","defaultValue":"\n","description":"<br \/>\n"},"fontColor":{"type":"stdWrap","defaultValue":"black","description":"GraphicColor \/stdWrap<br \/>\n\t\t\tFont color"},"fontFile":{"type":"string","defaultValue":"Nimbus (Arial-clone)","description":"Font face (truetype font you can upload!!)"},"fontSize":{"type":"int","defaultValue":"12","description":"posint<br \/>\n\t\t\tFont size"},"hide":{"type":"boolean","defaultValue":"0","description":"If this is true, the text is NOT printed.<br \/>\nThis feature may be used if you need a shadow-object to base a shadow on the text, but do not want the text to print."},"hideButCreateMap":{"type":"boolean","defaultValue":"\n","description":"If this option is set, the text will not be rendered. Shadows and emboss will, though, so don't apply these!! But this feature is also meant only to enable a text to generate the imageMap coordinates without rendering itself."},"imgMap":{"type":"IMGMAP","defaultValue":"\n","description":"<br \/>\n"},"iterations":{"type":"int","defaultValue":"1","description":"posint<br \/>\n\t\t\tHow many times the text should be \"printed\" onto it self. This will add the effect of bold text.<br \/>\n<br \/>\nNote: This option is not available if .niceText is enabled"},"maxWidth":{"type":"int","defaultValue":"\n","description":"pixels<br \/>\n\t\t\tSets the maximum width in pixels, the text must be. Reduces the fontSize if the text does not fit within this width.<br \/>\n<br \/>\nDoes not support setting alternative fontSizes in splitRendering options.<br \/>\n<br \/>\n(By Rene Fritz <r.fritz@colorcube.de>)"},"niceText":{"type":"boolean","defaultValue":"\n","description":"This is a very popular feature that helps to render small letters much nicer than the freetype library can normally do. But it also loads the system very much!<br \/>\nThe principle of this function is to create a black\/white giffile in twice or more times the size of the actual gif-file and then print the text onto this is a scaled dimension. Afterwards ImageMagick (IM) scales down the mask and masks the font color down on the original gif-file through the temporary mask.<br \/>\nThe fact that the font \u00a0is \u00a0actually rendered in the double size and scaled down adds a more homogenous shape to the lettes. Some fonts are more critical than others though. \u00a0If you do not need the quality, then don't use the function.<br \/>\n<br \/>\nSome properties:<br \/>\n.before = IM-params before scale<br \/>\n.after = IM-params after scale<br \/>\n.sharpen = sharpen-value for the mask (after scaling), integer 0-99 (this enables you to make the text crisper if it's too blurred!)<br \/>\n.scaleFactor = scaling-factor, int 2-5"},"offset":{"type":"string","defaultValue":"0,0","description":"x,y +calc<br \/>\n\t\t\tOffset of the text"},"outline":{"type":"OUTLINE","defaultValue":"\n","description":"<br \/>\n"},"shadow":{"type":"SHADOW","defaultValue":"\n","description":"<br \/>\n"},"spacing":{"type":"int","defaultValue":"0","description":"posint<br \/>\n\t\t\tPixel-distance between letters. This may render ugly!"},"splitRendering.compX":{"type":"string","defaultValue":"\n","description":"Split the rendering of a string into separate processes with individual configurations. By this method a certain range of characters can be rendered with another font face or size. This is very useful if you want to use separate fonts for strings where you have latin characters combined with eg. Japanese and there is a separate font file for each.<br \/>\nYou can also render keywords in another font\/size\/color.<br \/>\n<br \/>\nProperties:<br \/>\nsplitRendering.compX = Additional pixelspace between parts, x direction<br \/>\nsplitRendering.compY = Additional pixelspace between parts, y direction<br \/>\nsplitRendering.[array] = keyword \u00a0[charRange, highlightWord]<br \/>\nsplitRendering.[array] {<br \/>\n\u00a0 fontFile = Alternative font file for this rendering<br \/>\n\u00a0 fontSize = Alternative font size for this rendering<br \/>\n\u00a0 color = Alternative color for this rendering, works ONLY without \"niceText\"<br \/>\n\u00a0 xSpaceBefore = x-Space before this part<br \/>\n\u00a0 xSpaceAfter = x-Space after this part<br \/>\n\u00a0 ySpaceBefore = y-Space before this part<br \/>\n\u00a0 ySpaceAfter = \u00a0y-Space after this part<br \/>\n}<br \/>\n<br \/>\nKeyword: charRange<br \/>\nsplitRendering.[array].value = Commaseparated list of character ranges (eg. \"100-200\") given as Unicode character numbers. The list accepts optional starting and ending points, eg. \" - 200\" or \" 200 -\" and single values, eg. \"65, 66, 67\"<br \/>\n<br \/>\nKeyword: highlightWord<br \/>\nsplitRendering.[array].value = Word to highlight, makes a case sensitive search for this.<br \/>\n<br \/>\nLimitations:<br \/>\nThe pixelcompensation values are not corrected for scale factor used with niceText. Basically this means that when niceText is used, these values will have only the half effect.When word spacing is used the \"highlightWord\" mode doesn't work.The color override works only without \"niceText\".<br \/>\n<br \/>\nExample:<br \/>\n\u00a0 10.splitRendering.compX = 2<br \/>\n\u00a0 10.splitRendering.compY = -2<br \/>\n\u00a0 10.splitRendering.10 = charRange<br \/>\n\u00a0 10.splitRendering.10 {<br \/>\n\u00a0 \u00a0 value = 200-380 , 65, 66<br \/>\n\u00a0 \u00a0 fontSize = 50<br \/>\n\u00a0 \u00a0 fontFile = \u00a0t3lib\/fonts\/nimbus.ttf<br \/>\n\u00a0 \u00a0 xSpaceBefore = 30<br \/>\n\u00a0 }<br \/>\n\u00a0 10.splitRendering.20 = highlightWord<br \/>\n\u00a0 10.splitRendering.20 {<br \/>\n\u00a0 \u00a0 value = TheWord<br \/>\n\u00a0 \u00a0 color = red<br \/>\n\u00a0 }"},"splitRendering.compY":{"type":"string","defaultValue":"\n","description":"Split the rendering of a string into separate processes with individual configurations. By this method a certain range of characters can be rendered with another font face or size. This is very useful if you want to use separate fonts for strings where you have latin characters combined with eg. Japanese and there is a separate font file for each.<br \/>\nYou can also render keywords in another font\/size\/color.<br \/>\n<br \/>\nProperties:<br \/>\nsplitRendering.compX = Additional pixelspace between parts, x direction<br \/>\nsplitRendering.compY = Additional pixelspace between parts, y direction<br \/>\nsplitRendering.[array] = keyword \u00a0[charRange, highlightWord]<br \/>\nsplitRendering.[array] {<br \/>\n\u00a0 fontFile = Alternative font file for this rendering<br \/>\n\u00a0 fontSize = Alternative font size for this rendering<br \/>\n\u00a0 color = Alternative color for this rendering, works ONLY without \"niceText\"<br \/>\n\u00a0 xSpaceBefore = x-Space before this part<br \/>\n\u00a0 xSpaceAfter = x-Space after this part<br \/>\n\u00a0 ySpaceBefore = y-Space before this part<br \/>\n\u00a0 ySpaceAfter = \u00a0y-Space after this part<br \/>\n}<br \/>\n<br \/>\nKeyword: charRange<br \/>\nsplitRendering.[array].value = Commaseparated list of character ranges (eg. \"100-200\") given as Unicode character numbers. The list accepts optional starting and ending points, eg. \" - 200\" or \" 200 -\" and single values, eg. \"65, 66, 67\"<br \/>\n<br \/>\nKeyword: highlightWord<br \/>\nsplitRendering.[array].value = Word to highlight, makes a case sensitive search for this.<br \/>\n<br \/>\nLimitations:<br \/>\nThe pixelcompensation values are not corrected for scale factor used with niceText. Basically this means that when niceText is used, these values will have only the half effect.When word spacing is used the \"highlightWord\" mode doesn't work.The color override works only without \"niceText\".<br \/>\n<br \/>\nExample:<br \/>\n\u00a0 10.splitRendering.compX = 2<br \/>\n\u00a0 10.splitRendering.compY = -2<br \/>\n\u00a0 10.splitRendering.10 = charRange<br \/>\n\u00a0 10.splitRendering.10 {<br \/>\n\u00a0 \u00a0 value = 200-380 , 65, 66<br \/>\n\u00a0 \u00a0 fontSize = 50<br \/>\n\u00a0 \u00a0 fontFile = \u00a0t3lib\/fonts\/nimbus.ttf<br \/>\n\u00a0 \u00a0 xSpaceBefore = 30<br \/>\n\u00a0 }<br \/>\n\u00a0 10.splitRendering.20 = highlightWord<br \/>\n\u00a0 10.splitRendering.20 {<br \/>\n\u00a0 \u00a0 value = TheWord<br \/>\n\u00a0 \u00a0 color = red<br \/>\n\u00a0 }"},"text":{"type":"stdWrap","defaultValue":"\n","description":"This is text text-string on the gif-file. The item is rendered only if this string is not empty.<br \/>\nThe cObj->data-array is loaded with the page-record, if for example the GIFBUILDER-object is used by GMENU or IMGMENU"},"textMaxLength":{"type":"int","defaultValue":"100","description":"The maximum length of the text. \u00a0This is just a natural break that prevents incidental rendering of very long texts!"},"wordSpacing":{"type":"int","defaultValue":"= \".spacing\"*2","description":"posint<br \/>\n\t\t\tPixel-distance between words."}}},"WORKAREA":{"extendsType":"GifBuilderObj","properties":{"clear":{"type":"string","defaultValue":"\n","description":"<br \/>\n"},"set":{"type":"string","defaultValue":"\n","description":"x,y,w,h + calc<br \/>\n\t\t\tSets another workarea<br \/>\n"}}},"HMENU":{"extendsType":"","properties":{"1":{"type":"mObj","defaultValue":"\u00a0(no menu)","description":"Required!<br \/>\nDefines which menuObj that should render the menuitems on the various levels.<br \/>\n1 is the first level, 2 is the second level, 3 is the third level, 4 is ....<br \/>\n<br \/>\nExample:<br \/>\ntemp.sidemenu = HMENU<br \/>\ntemp.sidemenu.1 = GMENU \u00a0"},"2":{"type":"mObj","defaultValue":"\u00a0(no menu)","description":"Defines which menuObj that should render the menuitems on the various levels.<br \/>\n1 is the first level, 2 is the second level, 3 is the third level, 4 is ....<br \/>\n<br \/>\nExample:<br \/>\ntemp.sidemenu = HMENU<br \/>\ntemp.sidemenu.1 = GMENU \u00a0"},"3":{"type":"mObj","defaultValue":"\u00a0(no menu)","description":"Defines which menuObj that should render the menuitems on the various levels.<br \/>\n1 is the first level, 2 is the second level, 3 is the third level, 4 is ....<br \/>\n<br \/>\nExample:<br \/>\ntemp.sidemenu = HMENU<br \/>\ntemp.sidemenu.1 = GMENU \u00a0"},"4":{"type":"mObj","defaultValue":"\u00a0(no menu)","description":"Defines which menuObj that should render the menuitems on the various levels.<br \/>\n1 is the first level, 2 is the second level, 3 is the third level, 4 is ....<br \/>\n<br \/>\nExample:<br \/>\ntemp.sidemenu = HMENU<br \/>\ntemp.sidemenu.1 = GMENU \u00a0"},"addQueryString":{"type":"string","defaultValue":"\n","description":"see typolink.addQueryString<br \/>\n<br \/>\nNotice: This works only for special=language."},"alwaysActivePIDlist":{"type":"stdWrap","defaultValue":"\n","description":"List of Integers \/stdWrap<br \/>\n\t\t\tThis is a list of page UID numbers that will always be regarded as active menu items and thereby automatically opened regardless of the rootline."},"begin":{"type":"int","defaultValue":"\n","description":"int +calc<br \/>\n\t\t\tThe first item in the menu.<br \/>\n<br \/>\nExample:<br \/>\nThis results in a menu, where the first two items are skipped starting with item number 3:<br \/>\n\u00a0 begin = 3 \u00a0<br \/>\n<br \/>\nNotice: Affects all sub menus as well. (See \"minItems\" for notice)"},"entryLevel":{"type":"int","defaultValue":"0","description":"Defines at which level in the rootLine, the menu should start.<br \/>\nDefault is \"0\" which gives us a menu of the very first pages on the site.<br \/>\nIf the value is < 0, entryLevel is chosen from \"behind\" in the rootLine. Thus \"-1\" is a menu with items from the outermost level, \"-2\" is the level before the outermost..."},"excludeDoktypes":{"type":"intList","defaultValue":"5,6","description":"list of integers<br \/>\n\t\t\tEnter the list of page document types (doktype) to exclude from menus. By default pages that are \"not in menu\" (5) are excluded and those marked for backend user access only (6). "},"excludeUidList":{"type":"int","defaultValue":"\n","description":"list of integers<br \/>\n\t\t\tThis is a list of page uid's to exclude when the select statement is done. Comma-separated. You may add \"current\" to the list to exclude the current page.<br \/>\n<br \/>\nExample:<br \/>\nThe pages with these uid-number will NOT be within the menu!! Additionally the current page is always excluded too.<br \/>\n\u00a0 excludeUidList = 34,2,current"},"if":{"type":"if","defaultValue":"\n","description":"If \"if\" returns false, the menu is not generated"},"includeNotInMenu":{"type":"boolean","defaultValue":"\n","description":"If set, pages with type \"Not in menu\" will be included in menus.<br \/>\nThe number \"5\" will simply be removed from the current dok-type list (which is by default \"5,6\" but can be changed by \"excludeDoktypes\", see above)."},"maxItems":{"type":"int","defaultValue":"\n","description":"The maximum items in the menu. More items will be ignored.<br \/>\n<br \/>\nNotice: Affects all sub menus as well. (See \"minItems\" for notice)"},"minItems":{"type":"int","defaultValue":"\n","description":"The minimum items in the menu. If the number of pages does not reach this level, a dummy-page with the title \"...\" and uid=[currentpage_id] is inserted.<br \/>\n<br \/>\nNotice: Affects all sub menus as well. To set the value for each menu level individually, set the properties in the menu objects (see \"Common properties\" table)."},"protectLvar":{"type":"string","defaultValue":"\n","description":"boolean \/ keyword<br \/>\n\t\t\tIf set, then for each page in the menu it will be checked if an Alternative Page Language record for the language defined in \"config.sys_language_uid\" (typically defined via &L) exists for the page. If that is not the case and the pages \"Localization settings\" have the \"Hide page if no translation for current language exists\" flag set, then the menu item will link to a non accessible page that will yield an error page to the user. Setting this option will prevent that situation by simply adding \"&L=0\" for such pages, meaning that they will switch to the default language rather than keeping the current language.<br \/>\nThe check is only carried out if a translation is requested (\"config.sys_language_uid\" is not zero).<br \/>\n<br \/>\nKeyword: \"all\"<br \/>\nWhen set to \"all\" the same check is carried out but it will not look if \"Hide page if no translation for current language exists\" is set - it always reverts to default language if no translation is found.<br \/>\n<br \/>\nFor these options to make sense, they should only be used when \"config.sys_language_mode\" is not set to \"content_fallback\"."},"special":{"type":"HMENU_SPECIAL","defaultValue":"\n","description":"\"directory\" \/ \"list\" \/ \"updated\" \/ \"browse\" \/ \"rootline\" \/ \"keywords\" \/ \"language\"<br \/>\n\t\t\t(See tsref for details:<br \/>\n\t\t\t<a href=\"http:\/\/typo3.org\/documentation\/document-library\/references\/doc_core_tsref\/4.1.0\/view\/8\/11\/#id4080403\"><br \/>\n\t\t\thttp:\/\/typo3.org\/documentation\/document-library\/references\/doc_core_tsref\/4.1.0\/view\/8\/11\/#id4080403<\/a> )"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"wrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap\/stdWrap<br \/>\n"}}},"HMENU_SPECIAL":{"extendsType":"","properties":{"value":{"type":"stdWrap","defaultValue":"\n","description":"list of page-uid's \/stdWrap"}}},"directory":{"extendsType":"HMENU_SPECIAL"},"list":{"extendsType":"HMENU_SPECIAL"},"updated":{"extendsType":"HMENU_SPECIAL","properties":{"mode":{"type":"string","defaultValue":"\n","description":"Which field in the pages-table to use. Default is \"SYS_LASTCHANGED\" (which is updated when a page is generated to the youngest tstamp of the records on the page), \"manual\" or \"lastUpdated\" will use the field \"lastUpdated\" (set manually in the page-record) and \"tstamp\" will use the \"tstamp\"-field of the pagerecord, which is set automatically when the record is changed. \"crdate\" will use \"crdate\"-field of the pagerecord. \"starttime\" will use the starttime field.<br \/>\n<br \/>\nFields with zero value is not selected anyway."},"depth":{"type":"string","defaultValue":"\n","description":"By default (if the value is not an integer) the depth is 20 levels. The range is 1-20. A depth of 1 means only the start id, depth of 2 means start-id + first level. NOTE: depth is relative to beginAtLevel.<br \/>\n\t\t\t"},"beginAtLevel":{"type":"int","defaultValue":"\n","description":"Determines starting level for the pagetrees generated based on .value and .depth. Zero is default and includes the start id. 1=starts with the first row of subpages, 2=starts with the second row of subpages. Depth is relative to this starting point.<br \/>\n\t\t\t"},"maxAge":{"type":"string","defaultValue":"\n","description":"Seconds+calc.<br \/>\n\t\t\tPages with update-dates older than currenttime minus this number of seconds will not be shown in the menu no matter what. Default is \"not used\". You may use +-*\/ for calculations.<br \/>\n\t\t\t"},"limit":{"type":"int","defaultValue":"10\n","description":"Max number of items in the menu. Default is 10, max is 100.<br \/>\n\t\t\t"},"excludeNoSearchPages":{"type":"boolean","defaultValue":"\n","description":"If set, pages marked \"No search\" is not included into special-menus.<br \/>\nSupport for Mount Pages: Yes.<br \/>\n\t\t\t"}}},"rootline":{"extendsType":"HMENU_SPECIAL","properties":{"range":{"type":"string","defaultValue":"\n","description":"rootline creates a menu with pages from the \"rootline\" (see earlier in this reference)<br \/>\n<br \/>\n.range = [begin-level] | [end-level] (same way as you reference the .entryLevel for HMENU)<br \/>\n<br \/>\nThis...<br \/>\n<br \/>\npage.2 = HMENU<br \/>\npage.2.special = rootline<br \/>\npage.2.special.range = 1|-2<br \/>\npage.2.special.targets.3 = page<br \/>\npage.2.1 = TMENU<br \/>\npage.2.1.target = _top<br \/>\npage.2.1.wrap = <HR> | <HR><br \/>\npage.2.1.NO {<br \/>\n  linkWrap = | ><br \/>\n}<br \/>\n... creates a menu like this:<br \/>\n<br \/>\nPage level 1 > Page level 2 > Page level 3 > Page level 4 ><br \/>\n<br \/>\n(The menu starts at level 1 and does NOT link to the current page (-2 is the level before). Further all pages on level 3 will have \"page\" as target and all other \"_top\")<br \/>\n\t\t\t"},"reverseOrder":{"type":"boolean","defaultValue":"false","description":"If set to true, the order of the rootline menu elements will be reversed.<br \/>\n\t\t\t"},"targets":{"type":"string","defaultValue":"\n","description":".targets.[0-x]  targets<br \/>\n<br \/>\n\t\t\tThis...<br \/>\n<br \/>\npage.2 = HMENU<br \/>\npage.2.special = rootline<br \/>\npage.2.special.range = 1|-2<br \/>\npage.2.special.targets.3 = page<br \/>\npage.2.1 = TMENU<br \/>\npage.2.1.target = _top<br \/>\npage.2.1.wrap = <HR> | <HR><br \/>\npage.2.1.NO {<br \/>\n  linkWrap = | ><br \/>\n}<br \/>\n<br \/>\n... creates a menu like this:<br \/>\n<br \/>\nPage level 1 > Page level 2 > Page level 3 > Page level 4 ><br \/>\n<br \/>\n(The menu starts at level 1 and does NOT link to the current page (-2 is the level before). Further all pages on level 3 will have \"page\" as target and all other \"_top\")<br \/>\n<br \/>\n\t\t\t"}}},"browse":{"extendsType":"HMENU_SPECIAL","properties":{"items":{"type":"string","defaultValue":"\n","description":".items  ( \"|\" separated list of \"itemnames\")<br \/>\n\t\t\tThis kind of menu is built of items given by a list from the property \".item\". Each element in the list (sep. by \"|\") is either a reserved itemname (see list) with a predefined function or a userdefined name which you can assign a link to any page. Note that the current page cannot be the root-page of a site.<br \/>\n\t\t\t"},"items.prevnextToSection":{"type":"boolean","defaultValue":"\n","description":"items.prevnextToSection (boolean) - if set, the \"prev\" and \"next\" navigation will jump to the next section when it reaches the end of pages in the current section.<br \/>\n\t\t\t"},"next":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"next \/ prev : links to next page \/ previous page. Next and previous pages are from the same \"pid\" as the current page id (or \"value\") - that is the next item in a menu with the current page. Also referred to as current level.<br \/>\n<br \/>\nIf \".prevnextToSection\" is set then next\/prev will link to the first page of next section \/ last page of previous section.<br \/>\n\t\t\t"},"prev":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"next \/ prev : links to next page \/ previous page. Next and previous pages are from the same \"pid\" as the current page id (or \"value\") - that is the next item in a menu with the current page. Also referred to as current level.<br \/>\n<br \/>\nIf \".prevnextToSection\" is set then next\/prev will link to the first page of next section \/ last page of previous section.<br \/>\n\t\t\t"},"nextsection":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"nextsection \/ prevsection : links to next section \/ previous section. A section is defined as the subpages of a page on the same level as the parent (pid) page of the current page. Will not work if parent page of current page is the root page of the site.<br \/>\n\t\t\t"},"prevsection":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"nextsection \/ prevsection : links to next section \/ previous section. A section is defined as the subpages of a page on the same level as the parent (pid) page of the current page. Will not work if parent page of current page is the root page of the site.<br \/>\n\t\t\t"},"nextsection_last":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"Where nextsection\/prevsection links to the first page in a section, these links to the last pages. If there is only one page in the section that will be both first and last. Will not work if parent page of current page is the root page of the site.<br \/>\n\t\t\t"},"prevsection_last":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"Where nextsection\/prevsection links to the first page in a section, these links to the last pages. If there is only one page in the section that will be both first and last. Will not work if parent page of current page is the root page of the site.<br \/>\n\t\t\t"},"first":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"First \/ Last page on current level. If there is only one page on the current level that page will be both first and last.<br \/>\n\t\t\t"},"last":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"First \/ Last page on current level. If there is only one page on the current level that page will be both first and last.<br \/>\n\t\t\t"},"up":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"Links to the parent (pid) page of the current page. (up 1 level) Will always be available<br \/>\n\t\t\t"},"index":{"type":"HMENU_SPECIAL_browseItem","defaultValue":"\n","description":"Links to the parent of the parent page of the current page (up 2 levels). May not be available if that page is out of the rootline.<br \/>\n\t\t\t"}}},"HMENU_SPECIAL_browseItem":{"extendsType":"","properties":{"target":{"type":"string","defaultValue":"\n","description":"optional\/alternative target of the item"},"uid":{"type":"int","defaultValue":"\n","description":".  (uid of page) - optional\/alternative page-uid to link to<br \/>\n"},"fields":{"type":"string","defaultValue":"\n","description":".[itemnames].fields.[fieldname]  (string)<br \/>\n override field \"fieldname\" in pagerecord."}}},"keywords":{"extendsType":"HMENU_SPECIAL","properties":{"mode":{"type":"string","defaultValue":"\n","description":"Which field in the pages-table to use for sorting. Default is \"SYS_LASTCHANGED\" (which is updated when a page is generated to the youngest tstamp of the records on the page), \"manual\" or \"lastUpdated\" will use the field \"lastUpdated\" (set manually in the page-record) and \"tstamp\" will use the \"tstamp\"-field of the pagerecord, which is set automatically when the record is changed. \"crdate\" will use \"crdate\"-field of the pagerecord. \"starttime\" will use the starttime field.<br \/>\n\t\t\t"},"depth":{"type":"string","defaultValue":"\n","description":"By default (if the value is not an integer) the depth is 20 levels. The range is 1-20. A depth of 1 means only the start id, depth of 2 means start-id + first level. NOTE: depth is relative to beginAtLevel.<br \/>\n\t\t\t"},"beginAtLevel":{"type":"int","defaultValue":"\n","description":"Determines starting level for the pagetrees generated based on .value and .depth. Zero is default and includes the start id. 1=starts with the first row of subpages, 2=starts with the second row of subpages. Depth is relative to this starting point.<br \/>\n\t\t\t"},"limit":{"type":"int","defaultValue":"10\n","description":"Max number of items in the menu. Default is 10, max is 100.<br \/>\n\t\t\t"},"excludeNoSearchPages":{"type":"boolean","defaultValue":"\n","description":"If set, pages marked \"No search\" is not included into special-menus.<br \/>\nSupport for Mount Pages: Yes.<br \/>\n\t\t\t"},"entryLevel":{"type":"string","defaultValue":"\n","description":".entryLevel = where in the rootline the search begins. Standard rootline syntax (-x to x)"},"setKeywords":{"type":"stdWrap","defaultValue":"\n","description":".setKeywords (\/stdWrap) = lets you define the keywords manually by defining them as a commaseparated list. If this property is defined, it overrides the default, which is the keywords of the current page.<br \/>\n\t\t\t"},"keywordsField":{"type":"string","defaultValue":"\"keyword\"\n","description":".keywordsField = defines the field in the pages-table in which to search for the keywords. Default is the fieldname \"keyword\". No check is done to see if the field you enter here exists, so enter an existing field, OK?!"},"keywordsField.sourceField":{"type":"string","defaultValue":"\"keyword\"\n","description":".keywordsField.sourceField = defines the field from the current page from which to take the keywords being matched. The default is \"keyword\". (Notice that \".keywordsField\" is only setting the page-record field to search in !)"}}},"language":{"extendsType":"HMENU_SPECIAL"},"userdefined":{"extendsType":"HMENU_SPECIAL","properties":{"file":{"type":"string","defaultValue":"\n","description":".file  [resource]  =  filename of the php-file to include. (Just like cObject PHP_SCRIPT)<br \/>\n\t\t\t"}}},"userfunction":{"extendsType":"HMENU_SPECIAL","properties":{"userFunc":{"type":"string","defaultValue":"\n","description":".userFunc = function-name<br \/>\n\t\t\tCalls a user function\/method in class which should (as with \"userdefined\" above) return an array with page records for the menu.<br \/>\n"}}},"mObj":{"extendsType":"","properties":{"alternativeSortingField":{"type":"string","defaultValue":"\n","description":"Normally the menuitems are sorted by the fields \"sorting\" in the pages- and tt_content-table. Here you can enter a list of fields that is used in the SQL- \"ORDER BY\" statement instead.<br \/>\n<br \/>\nExamples (for \"pages\" table):<br \/>\nalternativeSortingField = title desc<br \/>\n(This will render the menu in reversed alphabetical order)<br \/>\n<br \/>\nLIMITATIONS:<br \/>\nThis property works with normal menus, sectionsIndex menus and special-menus of type \"directory\"."},"begin":{"type":"int","defaultValue":"\n","description":"int +calc<br \/>\n\t\t\tThe first item in the menu.<br \/>\n<br \/>\nExample:<br \/>\nThis results in a menu, where the first two items are skipped starting with item number 3:<br \/>\n\u00a0 begin = 3 \u00a0<br \/>\n<br \/>\nTakes precedence over HMENU.begin"},"imgNameNotRandom":{"type":"boolean","defaultValue":"\n","description":"If set, the image names of menuitems is not randomly assigned. Usefull switch if you're manipulating these images with some external JavaScript<br \/>\n<br \/>\nNOTE: Don't set this if you're working with a menu with sectionIndex! In that case you need special unique names of items based on something else than the uid of the parent page of course!"},"imgNamePrefix":{"type":"string","defaultValue":"\"img\"","description":"prefix for the imagenames. This prefix is appended with the uid of the page."},"itemArrayProcFunc":{"type":"string","defaultValue":"\n","description":"function-name<br \/>\n\t\t\tThe first variable passed to this function is the \"menuArr\" array with the menuitems as they are collected based on the type of menu.<br \/>\nYou're free to manipulate or add to this array as you like. Just remember to return the array again!<br \/>\n<br \/>\nNote:<br \/>\n.parentObj property is hardcoded to be a reference to the calling tslib_menu object. Here you'll find eg. ->id to be the uid of the menu item generating a submenu and such.<br \/>\n<br \/>\nPresetting element state<br \/>\nYou can override element states like SPC, IFSUB, ACT, CUR or USR by setting the key ITEM_STATE in the page records. See cObject HMENU\/special=userdefined for more information."},"maxItems":{"type":"int","defaultValue":"\n","description":"The maximum items in the menu. More items will be ignored.<br \/>\n<br \/>\nTakes precedence over HMENU.maxItems"},"minItems":{"type":"int","defaultValue":"\n","description":"The minimum items in the menu. If the number of pages does not reach this level, a dummy-page with the title \"...\" and uid=[currentpage_id] is inserted.<br \/>\n<br \/>\nTakes precedence over HMENU.minItems"},"sectionIndex":{"type":"string","defaultValue":"\n","description":"This is a property that all menuObj's share. If it's set, then the menu will not consist of links to pages on the \"next level\" but rather links to the parent page to the menu, but in addition \"#\"-links to the cObjects rendered on the page. In other words, the menuitems will be links to the content elements (with colPos=0!) on the page. A section index.<br \/>\n<br \/>\n.sectionIndex = [boolean]<br \/>\n<br \/>\nIf you set this, all content elements (from tt_content table) of \"Column\" = \"Normal\" and the \"Index\"-check box clicked are selected. This corresponds to the \"Menu\/Sitemap\" content element when \"Section index\" is selected as type.<br \/>\n<br \/>\n.sectionIndex.type = \"all\" \/ \"header\"<br \/>\n<br \/>\nIf you set this additional property to \"all\", then the \"Index\"-checkbox is not considered and all content elements with colPos=0 is selected.<br \/>\n<br \/>\nIf this property is \"header\" then only content elements with a visible header-layout (and a non-empty 'header'-field!) is selected. In other words, if the header layout of an element is set to \"Hidden\" then the page will not appear in the menu.<br \/>\n<br \/>\nThe data-record \/Behind the scene:<br \/>\n<br \/>\nWhen the menu-records are selected it works like this: The parent page record is used as the \"base\" for the menu-record. That means that any \"no_cache\" or \"target\"-properties of the parent page is used for the whole menu.<br \/>\n<br \/>\nBut of course some fields from the tt_content records are transfered: This is how it mapped:<br \/>\n<br \/>\n$temp[$row[uid]]=$basePageRow;<br \/>\n<br \/>\n$temp[$row[uid]][\"title\"]=$row[\"header\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"subtitle\"]=$row[\"subheader\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"starttime\"]=$row[\"starttime\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"endtime\"]=$row[\"endtime\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"fe_group\"]=$row[\"fe_group\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"media\"]=$row[\"media\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"header_layout\"]=$row[\"header_layout\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"bodytext\"]=$row[\"bodytext\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"image\"]=$row[\"image\"];<br \/>\n<br \/>\n$temp[$row[uid]][\"sectionIndex_uid\"]=$row[\"uid\"];<br \/>\n<br \/>\nBasically this shows that<br \/>\n<br \/>\n- the field \"header\" and \"subheader\" from tt_content are mapped to \"title\" and \"subtitle\" in the pages-record. Thus you shouldn't need to change your standard menu-objects to fit this thing...<br \/>\n<br \/>\n- the fields \"starttime\", \"endtime\", \"fe_group\", \"media\" from tt_content are mapped to the same fields in a pages-record.<br \/>\n<br \/>\n- the fields \"header_layout\", \"bodytext\" and \"image\" are mapped to non-existing fields in the page-record<br \/>\n<br \/>\n- a new field, \"sectionIndex_uid\" is introduced in the page-record which is detected by the function t3lib_tstemplate->linkData(). If this field is present in a pagerecord, the linkData()-function will prepend a hash-mark and the number of the field.<br \/>\n<br \/>\nNOTE:<br \/>\n<br \/>\nYou cannot create submenus to sectionIndex-menus. That doesn't make any sense as these elements are not pages and thereby have no \"childs\".<br \/>\n"},"showAccessRestrictedPages":{"type":"string","defaultValue":"\n","description":"integer (page id) \/ keyword \"NONE\"<br \/>\n\t\t\tIf set, pages in the menu will include pages with frontend user group access enabled. \u00a0However the page is of course not accessible and therefore the URL in the menu will be linked to the page with the ID of this value. On that page you could put a login form or other message.<br \/>\nIf the value is \"NONE\" the link will not be changed and the site will perform page-not-found handling when clicked (which can be used to capture the event and act accordingly of course).<br \/>\n<br \/>\nProperties:<br \/>\n.addParam = Additional parameter for the URL, which can hold two markers; ###RETURN_URL### which will be substituted with the link the page would have had if it had been accessible and ###PAGE_ID### holding the page id of the page coming from (could be used to look up which fe_groups was required for access.<br \/>\n<br \/>\nExample:<br \/>\nshowAccessRestrictedPages = 22<br \/>\nshowAccessRestrictedPages.addParams = &return_url=###RETURN_URL###&pageId=###PAGE_ID###<br \/>\n<br \/>\nThe example will link access restricted menu items to page id 22 with the return URL in the GET var \"return_url\" and the page id in the GET var \"pageId\"."},"submenuObjSuffixes":{"type":"string","defaultValue":"\n","description":"Defines a suffix for alternative sub-level menu objects. Useful to create special submenus depending on their parent menu element. See example below.<br \/>\n<br \/>\nExample:<br \/>\nThis example will generate a menu where the menu objects for the second level will differ depending on the number of the first level item for which the submenu is rendered. The second level objects used are \"2\" (the default), \"2a\" and \"2b\" (the alternatives). Which of them is used is defined by \"1.submenuObjSuffixes\" which has the configuration \"a |*| |*| b\". This configuration means that the first menu element will use configuration \"2a\" and the last will use \"2b\" while anything in between will use \"2\" (no suffix applied)<br \/>\n<br \/>\npage.200 = HMENU<br \/>\npage.200 {<br \/>\n\u00a0 1 = TMENU<br \/>\n\u00a0 1.wrap = <div style=\"width:200px; border: 1px solid;\">|<\/div><br \/>\n\u00a0 1.expAll = 1<br \/>\n\u00a0 1.submenuObjSuffixes = a |*| \u00a0|*| b<br \/>\n\u00a0 1.NO.allWrap = <b>|<\/b><br\/><br \/>\n<br \/>\n\u00a0 2 = TMENU<br \/>\n\u00a0 2.NO.allWrap = <div style=\"background:red;\">|<\/div><br \/>\n<br \/>\n\u00a0 2a = TMENU<br \/>\n\u00a0 2a.NO.allWrap = <div style=\"background:yellow;\">|<\/div><br \/>\n<br \/>\n\u00a0 2b = TMENU<br \/>\n\u00a0 2b.NO.allWrap = <div style=\"background:green;\">|<\/div><br \/>\n}<br \/>\n<br \/>\nThe result can be seen in the image below (applied on the testsite package):<br \/>\n<br \/>\n<br \/>\n<br \/>\nApplies to GMENU, TMENU, GMENU_LAYERS, TMENU_LAYERS and GMENU_FOLDOUT on >= 2nd level in a menu."}}},"GMENU":{"extendsType":"","properties":{"ACT":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine"},"ACTRO":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine"},"ACTIFSUB":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine and has subpages"},"ACTIFSUBRO":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine and has subpages"},"CUR":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page."},"CURRO":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page."},"CURIFSUB":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page and has subpages."},"CURIFSUBRO":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page and has subpages."},"IFSUB":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which has subpages"},"IFSUBRO":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which has subpages"},"NO":{"type":"GMENU_itemState","defaultValue":"1","description":"Boolean \/ (config)<br \/>\n\t\t\tThe default \"Normal\" state rendering of Item. This is required for all menus.<br \/>\nIf you specify properties for the \"NO\" property you do not have to set it \"1\". Otherwise with no properties setting \"NO=1\" will render the menu anyways (for TMENU this may make sense).<br \/>\n<br \/>\nThe simplest menu TYPO3 can generate is then:<br \/>\n<br \/>\npage.20 = HMENU<br \/>\npage.20.1 = TMENU<br \/>\npage.20.1.NO = 1<br \/>\n<br \/>\nThat will be pure <a> tags wrapped around page titles."},"SPC":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for 'Spacer' pages.<br \/>\nSpacers are pages of the doktype \"Spacer\". These are not viewable pages but \"placeholders\" which can be used to divide menuitems.<br \/>\n<br \/>\nNote: Rollovers doesn't work with spacers, if you use GMENU!"},"USERDEF1":{"type":"GMENU_itemState","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\tUserdefined, see .itemArrayProcFunc for details on how to use this.<br \/>\nYou can set the ITEM_STATE values USERDEF1 and USERDEF2 (+...RO) from a script\/userfunction processing the menu item array. See HMENU\/special=userdefined or the property .itemArrayProcFunc of the menu objects."},"USERDEF1RO":{"type":"GMENU_itemState","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\tUserdefined, see .itemArrayProcFunc for details on how to use this.<br \/>\nYou can set the ITEM_STATE values USERDEF1 and USERDEF2 (+...RO) from a script\/userfunction processing the menu item array. See HMENU\/special=userdefined or the property .itemArrayProcFunc of the menu objects."},"USERDEF2":{"type":"GMENU_itemState","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\t(See above)"},"USERDEF2RO":{"type":"GMENU_itemState","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\t(See above)"},"USR":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are access restricted pages that a user has access to."},"USRRO":{"type":"GMENU_itemState","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are access restricted pages that a user has access to."},"addParams":{"type":"string","defaultValue":"\n","description":"Additional parameter for the menu-links.<br \/>\nExample:<br \/>\n\"&some_var=some%20value\"<br \/>\nMust be rawurlencoded.<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"IProcFunc":{"type":"string","defaultValue":"\n","description":"The internal array \"I\" is passed to this function and expected returned as well. Subsequent to this function call the menu item is compiled by implode()'ing the array $I[parts] in the passed array. Thus you may modify this if you need to.<br \/>\nSee example on the testsite and in media\/scripts\/example_itemArrayProcFunc.php"},"RO":{"type":"boolean","defaultValue":"0","description":"RollOver configuration enabled \/ disabled.<br \/>\nIf this is true, RO becomes a GIFBUILDER-object defining the layout of the menuitem when the mouse rolls over it"},"[Common Item States, see above]":{"type":"GIFBUILDER","defaultValue":"\n","description":"This is the GIFBUILDER-options for each category of menuitem that can be generated.<br \/>\n<br \/>\nNOTE: For the GMENU series you can also define the RollOver configuration for the item states. This means that you define the GIFBUILDER object for the 'Active' state by ACT and the RollOver GIFBUILDER object for the 'Active' state by ACTRO.<br \/>\nThis pattern goes for ALL the states except the SPC state.<br \/>\n<br \/>\nSPECIAL:<br \/>\nThe ->OptionSplit function is run on the whole GIFBUILDER-configuration before the items are generated."},"accessKey":{"type":"boolean","defaultValue":"\n","description":"If set access-keys are set on the menu-links"},"applyTotalH":{"type":"string","defaultValue":"\n","description":"objNumsList (offset)<br \/>\n<br \/>\n\t\t\tThis adds the total height of the previously generated menuitems to the offset of the GifBuilderObj's mentioned in this list.<br \/>\n<br \/>\nExample:<br \/>\nThis is useful it you want to create a menu with individual items but a common background image that extends to the whole area behind the menu. Then you should setup the background image in each GIFBUILDER-object and include the object-number in this list.<br \/>\nLook at the implementation in static_template \"styles.gmenu.bug\""},"applyTotalW":{"type":"string","defaultValue":"\n","description":"objNumsList (offset)<br \/>\n\t\t\tThis adds the total width of the previously generated menuitems to the offset of the GifBuilderObj's mentioned in this list."},"collapse":{"type":"boolean","defaultValue":"\n","description":"If set, \"active\" menuitems that has expanded the next level on the menu will now collapse that menu again."},"debugItemConf":{"type":"string","defaultValue":"\n","description":"Outputs (by the debug()-function) the configuration arrays for each menuitem. Useful to debug optionSplit things and such...<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"disableAltText":{"type":"boolean","defaultValue":"\n","description":"If set, the alt-parameter of the images are not set. You can do it manually by \"imgParams\" (see below)"},"distributeX":{"type":"int","defaultValue":"\n","description":"int+<br \/>\n\t\t\tIf set, the total width of all the menuitems will be equal to this number of pixels by adding\/subtracting an equal amount of pixels to each menu items width.<br \/>\nWill overrule any setting for \".useLargestItemX\""},"distributeY":{"type":"int","defaultValue":"\n","description":"int+<br \/>\n\t\t\tIf set, the total height of all the menuitems will be equal to this number of pixels by adding\/subtracting an equal amount of pixels to each menu items height.<br \/>\nWill overrule any setting for \".useLargestItemY\""},"expAll":{"type":"Boolean","defaultValue":"\n","description":"If this is true, the menu will always show the menu on the level underneath the menuitem. This corresponds to a situation where a user has clicked a menuitem and the menu folds out the next level. This can enable that to happen on all items as default."},"forceTypeValue":{"type":"int","defaultValue":"\n","description":"If set, the &type parameter of the link is forced to this value regardless of target. Overrides the global equivalent in 'config' if set."},"JSWindow":{"type":"boolean","defaultValue":"\n","description":"If set, the links of the menu-items will open by JavaScript in a pop-up window.<br \/>\n<br \/>\n.newWindow boolean, that lets every menuitem open in its own window opposite to opening in the same window for each click.<br \/>\n<br \/>\n.params is the list of parameters sent to the JavaScript open-window function, eg:<br \/>\nwidth=200,height=300,status=0,menubar=0<br \/>\n<br \/>\nNOTE: Does not work with JSMENU's"},"max":{"type":"string","defaultValue":"\n","description":"x,y (calcInt)\"<br \/>\n<br \/>\n\t\t\tForces the menu as a whole to these maximum dimensions"},"min":{"type":"x,y (calcInt)","defaultValue":"\n","description":"Forces the menu as a whole to these minimum dimensions"},"noBlur":{"type":"boolean","defaultValue":"\n","description":"Normally graphical links are \"blurred\" if the browser is MSIE. Blurring removes the ugly box around a clicked link.<br \/>\nIf this property is set, the link is NOT blurred (browser-default) with \"onFocus\"."},"overrideId":{"type":"int","defaultValue":"\n","description":"integer (page-id)<br \/>\n\t\t\tIf set, then all links in the menu will point to this pageid. Instead the real uid of the page is sent by the parameter \"&real_uid=[uid]\".<br \/>\nThis feature is smart, if you have inserted a menu from somewhere else, perhaps a shared menu, but wants the menuitems to call the same page, which then generates a proper output based on the real_uid.<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"removeObjectsOfDummy":{"type":"string","defaultValue":"\n","description":"objNumsList<br \/>\n<br \/>\n\t\t\tIf the menu is forced to a certain minimum dimension, this is a list of objects in the gifbuilder-object that is removed for this last item. This is important to do if the menuitems has elements that should only be applied if the item is actually a menuitem!!"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the whole item using stdWrap<br \/>\n<br \/>\nExample:<br \/>\n2 = TMENU<br \/>\n2 {<br \/>\n\u00a0 stdWrap.dataWrap = <ul class=\"{register :<br \/>\n\u00a0 \u00a0 \u00a0parentProperty}\"> | <\/ul><br \/>\n\u00a0 NO {<br \/>\n\u00a0 \u00a0 ...<br \/>\n\u00a0 }<br \/>\n}"},"target":{"type":"string","defaultValue":"self","description":"target<br \/>\n<br \/>\n\t\t\tTarget of the menulinks"},"submenuObjSuffixes":{"type":"string","defaultValue":"\n","description":"Defines a suffix for alternative sub-level menu objects. Useful to create special submenus depending on their parent menu element. See example below.<br \/>\n<br \/>\nExample:<br \/>\nThis example will generate a menu where the menu objects for the second level will differ depending on the number of the first level item for which the submenu is rendered. The second level objects used are \"2\" (the default), \"2a\" and \"2b\" (the alternatives). Which of them is used is defined by \"1.submenuObjSuffixes\" which has the configuration \"a |*| |*| b\". This configuration means that the first menu element will use configuration \"2a\" and the last will use \"2b\" while anything in between will use \"2\" (no suffix applied)<br \/>\n<br \/>\npage.200 = HMENU<br \/>\npage.200 {<br \/>\n\u00a0 1 = TMENU<br \/>\n\u00a0 1.wrap = <div style=\"width:200px; border: 1px solid;\">|<\/div><br \/>\n\u00a0 1.expAll = 1<br \/>\n\u00a0 1.submenuObjSuffixes = a |*| \u00a0|*| b<br \/>\n\u00a0 1.NO.allWrap = <b>|<\/b><br\/><br \/>\n<br \/>\n\u00a0 2 = TMENU<br \/>\n\u00a0 2.NO.allWrap = <div style=\"background:red;\">|<\/div><br \/>\n<br \/>\n\u00a0 2a = TMENU<br \/>\n\u00a0 2a.NO.allWrap = <div style=\"background:yellow;\">|<\/div><br \/>\n<br \/>\n\u00a0 2b = TMENU<br \/>\n\u00a0 2b.NO.allWrap = <div style=\"background:green;\">|<\/div><br \/>\n}<br \/>\n<br \/>\nThe result can be seen in the image below (applied on the testsite package):<br \/>\n<br \/>\n<br \/>\n<br \/>\nApplies to GMENU, TMENU, GMENU_LAYERS, TMENU_LAYERS and GMENU_FOLDOUT on >= 2nd level in a menu."},"useLargestItemX":{"type":"boolean","defaultValue":"\n","description":"If set, then the width of all menuitems will be equal to the largest of them all."},"useLargestItemY":{"type":"boolean","defaultValue":"\n","description":"If set, then the height of all menuitems will be equal to the largest of them all."},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wraps only if there were items in the menu!"},"wrapItemAndSub":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the whole item and any submenu concatenated to it."}}},"GMENU_itemState":{"extendsType":"GIFBUILDER","properties":{"ATagParams":{"type":"string","defaultValue":"\n","description":"Additional parameters"},"ATagTitle":{"type":"stdWrap","defaultValue":"\n","description":"string \/stdWrap<br \/>\n<br \/>\n\t\t\twhich defines the title attribute of the a-tag. (See TMENUITEM also)"},"additionalParams":{"type":"string","defaultValue":"\n","description":"string \/stdWrap<br \/>\n<br \/>\n\t\t\tDefine parameters that are added to the end of the URL. This must be code ready to insert after the last parameter.<br \/>\n<br \/>\nFor details, see typolink->additionalParams"},"allStdWrap":{"type":"stdWrap","defaultValue":"\n","description":"stdWrap of the whole item"},"allWrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap \/stdWrap<br \/>\n<br \/>\n\t\t\tWraps the whole item"},"altImgResource":{"type":"imgResouce","defaultValue":"\n","description":"Defines an alternative image to use. If an image returns here, it will override any GIFBUILDER configuration."},"altTarget":{"type":"string","defaultValue":"\n","description":"Alternative target which overrides the target defined for the GMENU"},"imgParams":{"type":"string","defaultValue":"\n","description":"params<br \/>\n<br \/>\n\t\t\tParameters for the <img>-tag"},"noLink":{"type":"boolean","defaultValue":"\n","description":"If set, the item is NOT linked!"},"subst_elementUid":{"type":"boolean","defaultValue":"\n","description":"If set, \"{elementUid}\" is substituted with the item uid."},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wrap of the menu item"}}},"GMENU_FOLDOUT":{"extendsType":"GMENU","properties":{"adjustItemsH":{"type":"int","defaultValue":"\n","description":"Adjusts the height calculation of the menulayers of the first level (called Top)<br \/>\n<br \/>\nExample:<br \/>\n-10<br \/>\n<br \/>\nThis value will substract 10 pixels from the height of the layer in calculations."},"adjustSubItemsH":{"type":"int","defaultValue":"\n","description":"Adjusts the height calculation of the menulayers of the second level (subitems, called Sub)<br \/>\nSee above"},"arrowImgParams":{"type":"string","defaultValue":"\n","description":"<img> params<br \/>\n\t\t\tParameters to the arrow-image.<br \/>\n<br \/>\nExample:<br \/>\nhspace=5 vspace=7"},"arrowNO":{"type":"imgResource","defaultValue":"\n","description":"If both arrowNO and arrowACT is defined and valid imgResources then these images are use as \"traditional arrows\" that indicates whether an item is expanded (active) or not.<br \/>\nNO is normal, ACT is expanded<br \/>\nThe image is inserted just before the menuitem. If you want to change the position, put the marker ###ARROW_IMAGE### into the wrap of the item and the image will be put there instead."},"bottomContent":{"type":"cObj","defaultValue":"\n","description":"Content for the bottom layer that covers the end of the menu. "},"bottomHeight":{"type":"int","defaultValue":"100","description":"pixels<br \/>\n\t\t\tSets the height of the bottom layer. Is important if the bottomlayer \u00a0contains either content or a background color: Else the layer will be clipped."},"displayActiveOnLoad":{"type":"boolean","defaultValue":"\n","description":"If set, then the active menu items will fold out \"onLoad\""},"dontLinkIfSubmenu":{"type":"boolean","defaultValue":"\n","description":"If set, items that has a submenu is not linked. Items without a submenu are always linked in the regular ways."},"dontWrapInTable":{"type":"boolean","defaultValue":"0","description":"By default every menuitem on the first level is wrapped in a table:<br \/>\n<TABLE cellSpacing=0 cellPadding=0 width=\"100%\" border=0><TR><TD><br \/>\n[menu item HTML here..]<br \/>\n<\/TD><\/TR><\/TABLE><br \/>\nDoing this ensures that the layers renders equally in the supported browsers. However you might need to disable that which is what you can do by setting this flag.<br \/>\nNote: Using <TBODY> in this tables seems to break Netscape 4+"},"foldSpeed":{"type":"int","defaultValue":"1","description":"int, range 1-100<br \/>\n<br \/>\n\t\t\tHow many steps in an animation? Choose 1 for no animation."},"foldTimer":{"type":"int","defaultValue":"40","description":"The timeout in the animation, these are milliseconds."},"JSWindow":{"type":"boolean","defaultValue":"\n","description":"If set, the links of the menu-items will open by JavaScript in a pop-up window.<br \/>\n<br \/>\n.newWindow boolean, that lets every menuitem open in its own window opposite to opening in the same window for each click.<br \/>\n<br \/>\n.params is the list of parameters sent to the JavaScript open-window function, eg:<br \/>\nwidth=200,height=300,status=0,menubar=0<br \/>\n<br \/>\nNOTE: Does not work with JSMENU's"},"menuBackColor":{"type":"string","defaultValue":"\n","description":"HTML-color<br \/>\n<br \/>\n\t\t\tBackground color behind menu. If not set, transparent (which will not work very well in case .foldSpeed is set to something else than 1. But see for yourself)"},"menuHeight":{"type":"int","defaultValue":"400","description":"Height of the whole menulayer. Seems to be not so important."},"menuOffset":{"type":"string","defaultValue":"\n","description":"x,y<br \/>\n<br \/>\n\t\t\tOffset of the menu main layer on the page. From upperleft corner"},"menuWidth":{"type":"int","defaultValue":"170","description":"pixels<br \/>\n\t\t\tWidth of the whole menu main layer. Important to set, especially for the bottomlayer as it is clipped by this value. Always try to set this to the width in pixels of the menu"},"stayFolded":{"type":"boolean","defaultValue":"\n","description":"Stay open when you click a new toplink? (Level 1)"},"submenuObjSuffixes":{"type":"string","defaultValue":"\n","description":"Defines a suffix for alternative sub-level menu objects. Useful to create special submenus depending on their parent menu element. See example below.<br \/>\n<br \/>\nExample:<br \/>\nThis example will generate a menu where the menu objects for the second level will differ depending on the number of the first level item for which the submenu is rendered. The second level objects used are \"2\" (the default), \"2a\" and \"2b\" (the alternatives). Which of them is used is defined by \"1.submenuObjSuffixes\" which has the configuration \"a |*| |*| b\". This configuration means that the first menu element will use configuration \"2a\" and the last will use \"2b\" while anything in between will use \"2\" (no suffix applied)<br \/>\n<br \/>\npage.200 = HMENU<br \/>\npage.200 {<br \/>\n\u00a0 1 = TMENU<br \/>\n\u00a0 1.wrap = <div style=\"width:200px; border: 1px solid;\">|<\/div><br \/>\n\u00a0 1.expAll = 1<br \/>\n\u00a0 1.submenuObjSuffixes = a |*| \u00a0|*| b<br \/>\n\u00a0 1.NO.allWrap = <b>|<\/b><br\/><br \/>\n<br \/>\n\u00a0 2 = TMENU<br \/>\n\u00a0 2.NO.allWrap = <div style=\"background:red;\">|<\/div><br \/>\n<br \/>\n\u00a0 2a = TMENU<br \/>\n\u00a0 2a.NO.allWrap = <div style=\"background:yellow;\">|<\/div><br \/>\n<br \/>\n\u00a0 2b = TMENU<br \/>\n\u00a0 2b.NO.allWrap = <div style=\"background:green;\">|<\/div><br \/>\n}<br \/>\n<br \/>\nThe result can be seen in the image below (applied on the testsite package):<br \/>\n<br \/>\n<br \/>\n<br \/>\nApplies to GMENU, TMENU, GMENU_LAYERS, TMENU_LAYERS and GMENU_FOLDOUT on >= 2nd level in a menu."},"subMenuOffset":{"type":"string","defaultValue":"\n","description":"x,y<br \/>\n\t\t\tOffset of the submenu for each menuitem. This is important because if you don't set this value the items will appear ontop of their \"parent\""}}},"MENU_LAYERS":{"extendsType":"","properties":{"blankStrEqFalse":{"type":"boolean","defaultValue":"\n","description":"If set, then the properties topOffset,leftOffset, xPosOffset, yPosOffset are considered \"blank\" if they are really blank strings - not just \"zero\". You should enable this if you wish to be able to work with zero offsets. This is typically the case if you use relative positioning."},"bordersWithin":{"type":"string","defaultValue":"\n","description":"l,t,r,b,l,t<br \/>\n\t\t\tKeep borders of the layer within these limits in pixels. Zero is 'not set'<br \/>\n(Syntax: List of integers, evaluated clockwise: Left, Top, Right, Bottom, Left, Top)"},"directionLeft":{"type":"boolean","defaultValue":"\n","description":"Set this, if you want the items to be right-aligned (pop's out towards the left).<br \/>\nDoes not work with Opera at this time because I don't know how to make Opera read the width of each layer.<br \/>\nIf you set the width of the menu-layers in .layerStyles this might work no matter what."},"directionUp":{"type":"boolean","defaultValue":"\n","description":"Set this, if you want the items to be bottom-aligned (pop's out upwards instead of downwards)."},"displayActiveOnLoad":{"type":"boolean","defaultValue":"\n","description":"If set, the submenu-layer of the active menuitem is opened at page-load. If .freezeMouseover is also set and there is RO defined for the main menu items, the menuitem belonging to the displayed submenu is also shown.<br \/>\n<br \/>\nProperties:<br \/>\n.onlyOnLoad (boolean)<br \/>\nIf set, then the display of the active item will happen only when the page is loaded. The display will not be restored on mouseout of other items.<br \/>\n<br \/>\nWarning: If you are cascading GMENU_LAYER objects make sure that all elements before this element (for which you set this attribute) also has this attribute set!"},"dontFollowMouse":{"type":"boolean","defaultValue":"\n","description":"If set and lockPosition is blank (so that the menu layer follows the mouse) then the menu will NOT follow the mouse but still it will appear where the mouse cursor hit the trigger-element. Usefull if you don't know the exact positions of elements.<br \/>\n<br \/>\nWarning: You should not set displayActiveOnLoad for menus with this feature enabled (because the absolute position of the layer is not known)."},"dontHideOnMouseUp":{"type":"boolean","defaultValue":"\n","description":"If set, the menu will not hide it's layers when the mouse botton is clicked. Usefull if your menuitems loads the pages in another frame"},"freezeMouseover":{"type":"boolean","defaultValue":"\n","description":"If set, any mouseout effect of main menuitems is removed not on roll-out but when another element is rolled over (or the layer is hidden\/default layer restored)<br \/>\n<br \/>\nProperties:<br \/>\n.alwaysKeep (boolean)<br \/>\nIf set, the freezed element will always stay, even if the submenu is hidden."},"hideMenuTimer":{"type":"int","defaultValue":"\n","description":"int+<br \/>\n<br \/>\n\t\t\tThis is the number of milliseconds to wait before the submenu will disappear if hideMenuWhenNotOver \u00a0is set"},"hideMenuWhenNotOver":{"type":"int","defaultValue":"\n","description":"int+<br \/>\n<br \/>\n\t\t\tIf set (> 1) then the menu will hide it self whenever a user moves the cursor away from the menu. The value of this parameter determines the width (pixels) of the zone around the element until the mousepointer is considered to be far enough away to hide the layer."},"JSWindow":{"type":"boolean","defaultValue":"\n","description":"If set, the links of the menu-items will open by JavaScript in a pop-up window.<br \/>\n<br \/>\n.newWindow boolean, that lets every menuitem open in its own window opposite to opening in the same window for each click.<br \/>\n<br \/>\n.params is the list of parameters sent to the JavaScript open-window function, eg:<br \/>\nwidth=200,height=300,status=0,menubar=0<br \/>\n<br \/>\nNOTE: Does not work with JSMENU's"},"layerStyle":{"type":"<DIV>-tag params","defaultValue":"position:absolute; visibility: hidden; ","description":"Parameters for the <DIV>-layer-tags in the HTML-document. You might probably not need change this.<br \/>\n<br \/>\nExample:<br \/>\nposition:absolute; VISIBILITY: hidden; "},"layer_menu_id":{"type":"string","defaultValue":"[random 6 char hashstring]","description":"If you want to specifically name a menu on a page. Probably you don't need that!<br \/>\n<br \/>\nWarning: Don't use underscore and special characters in this string. Stick to alpha-numeric."},"leftOffset":{"type":"int","defaultValue":"\n","description":"The offset of menuitems from left border of browser. Should be set rather than defining it in the .layerStyle property. Must be set in order to use directionLeft.<br \/>\nUsed with either lockPosition=y or yPosOffset defined."},"lockPosition":{"type":"string","defaultValue":"\n","description":"\"x\" \/ \"y\" \/ \"\"<br \/>\n<br \/>\n\t\t\tIf this is set to \"x\" or \"y\" the menu on the layers is locked and does not follow the mouse-cursor (which it does if this is not set).<br \/>\n\"x\" or \"y\" defines respectively that the summed width (x) or height (y) is added to the x or y offset of the menu. That means that you should set this value to \"x\" if you have a horizontal GMENU_LAYERS and to \"y\" if you have a verical menu."},"lockPosition_addSelf":{"type":"boolean","defaultValue":"\n","description":"Normally the width and height of the items (+lockPosition_adjust) are summed up after the item has been rendered. This is good if the direction of the menulayers is right- og downwards.<br \/>\nBut if you use directionLeft\/directionUp, you might want to add the width of the items before.<br \/>\nIf so, set this flag."},"lockPosition_adjust":{"type":"int","defaultValue":"\n","description":"A number which is added to the width\/height of the menuitems in order \u00a0to compensate for eg. hspace or other things between the images in the GMENU_LAYERS"},"relativeToParentLayer":{"type":"boolean","defaultValue":"\n","description":"If set, then the layer will be positioned relative to the previous layer (parent) in a cascaded series of xMENU_LAYERS. Basically the relative position of the parent layer is just added to the offset of the current menu.<br \/>\n<br \/>\nWarning: This property makes sense only if there really is a previous GMENU_LAYER to get position from! So you must have a cascaded menu!<br \/>\n<br \/>\nAdditional Properties:<br \/>\n.addWidth = Adds the width of the parent layer<br \/>\n.addHeight = Adds the height of the parent layer"},"relativeToTriggerItem":{"type":"boolean","defaultValue":"\n","description":"This allows you to position the menu layers relative to the item that triggers it. However you should be aware of the following facts:<br \/>\nThis does not work with Netscape 4 - the position of the trigger layer will be calculated to zero and thus the offset for all menu layers will be 0,0 + your values. This feature will wrap the menu item in some <div>-tags right before the whole item is wrapped by the .wrap code (for GMENU_LAYERS) or .allWrap (for TMENU_LAYERS). The bottom line of this is: 1) If your menu is horizontal, always wrap your menu items in a table so linebreaks does not appear because of the <div>-tags and 2) make sure the wrapping of the table cell is done with the .wrap\/.allWrap properties respectively.Works only effectively on the first xMENU_LAYER in a cascade. For succeeding xMENU_LAYERS items please use \"relativeToParentLayer\".<br \/>\nIf set, properties xPosOffset, yPosOffset and lockPosition* are not functional (properties directionLeft, directionUp, topOffset and leftOffset are still active)<br \/>\n<br \/>\nAdditional Properties:<br \/>\n.addWidth = Adds the width of the trigger element<br \/>\n.addHeight = Adds the height of the trigger element"},"setFixedHeight":{"type":"int","defaultValue":"\n","description":"See \"setFixedWidth\". Same, but for height."},"setFixedWidth":{"type":"int","defaultValue":"\n","description":"For GMENU_LAYERS the width and heights of the element is normally known from the graphical item. For TMENU_LAYERS this cannot be known in the same way. Therefore you can use .setFixedWidth and .setFixedHeight to set these values to a number you find reasonable. Of course this may be blasted by the browsers rendering if the font gets out of proportions etc.<br \/>\nAlternatively you may want to use the property \"relativeToTriggerItem\" which will position your menu layers relative to the item you roll over. This has some drawbacks though. A middle solution is to use a menu with lockPosition set to blank and dontFollowMouse set to true. Then you need only specify either an x or y coordinate to follow and the item will appear where the mouse hits the element.<br \/>\nNotice: Active if value is NOT a blank str. Setting this value to zero means that no width is calculated for the items in GMENU_LAYERS."},"topOffset":{"type":"int","defaultValue":"\n","description":"The offset of menuitems from top of browser. Should be set rather than defining it in the .layerStyle property. Must be set in order to use directionUp.<br \/>\nUsed with either lockPosition=x or xPosOffset defined."},"xPosOffset":{"type":"int","defaultValue":"\n","description":"The offset of the menu from the point where it's \"activated\" (if lockPosition is false) \/ from topleft page corner (if lockPosition is set)"},"yPosOffset":{"type":"int","defaultValue":"\n","description":"As above, but for the y-dimension."}}},"TMENU_LAYERS":{"extendsType":"TMENU,MENU_LAYERS"},"GMENU_LAYERS":{"extendsType":"GMENU,MENU_LAYERS"},"IMGMENU":{"extendsType":"","properties":{"ACT":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine"},"ACTRO":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine"},"ACTIFSUB":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine and has subpages"},"ACTIFSUBRO":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine and has subpages"},"CUR":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page."},"CURRO":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page."},"CURIFSUB":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page and has subpages."},"CURIFSUBRO":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page and has subpages."},"IFSUB":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which has subpages"},"IFSUBRO":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which has subpages"},"NO":{"type":"IMGMENUITEM","defaultValue":"1","description":"Boolean \/ (config)<br \/>\n\t\t\tThe default \"Normal\" state rendering of Item. This is required for all menus.<br \/>\nIf you specify properties for the \"NO\" property you do not have to set it \"1\". Otherwise with no properties setting \"NO=1\" will render the menu anyways (for TMENU this may make sense).<br \/>\n<br \/>\nThe simplest menu TYPO3 can generate is then:<br \/>\n<br \/>\npage.20 = HMENU<br \/>\npage.20.1 = TMENU<br \/>\npage.20.1.NO = 1<br \/>\n<br \/>\nThat will be pure <a> tags wrapped around page titles."},"SPC":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for 'Spacer' pages.<br \/>\nSpacers are pages of the doktype \"Spacer\". These are not viewable pages but \"placeholders\" which can be used to divide menuitems.<br \/>\n<br \/>\nNote: Rollovers doesn't work with spacers, if you use GMENU!"},"USERDEF1":{"type":"IMGMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\tUserdefined, see .itemArrayProcFunc for details on how to use this.<br \/>\nYou can set the ITEM_STATE values USERDEF1 and USERDEF2 (+...RO) from a script\/userfunction processing the menu item array. See HMENU\/special=userdefined or the property .itemArrayProcFunc of the menu objects."},"USERDEF1RO":{"type":"IMGMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\tUserdefined, see .itemArrayProcFunc for details on how to use this.<br \/>\nYou can set the ITEM_STATE values USERDEF1 and USERDEF2 (+...RO) from a script\/userfunction processing the menu item array. See HMENU\/special=userdefined or the property .itemArrayProcFunc of the menu objects."},"USERDEF2":{"type":"IMGMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\t(See above)"},"USERDEF2RO":{"type":"IMGMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\t(See above)"},"USR":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are access restricted pages that a user has access to."},"USRRO":{"type":"IMGMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are access restricted pages that a user has access to."},"addParams":{"type":"string","defaultValue":"\n","description":"Additional parameter for the menu-links.<br \/>\nExample:<br \/>\n\"&some_var=some%20value\"<br \/>\nMust be rawurlencoded.<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"[Common Item States, see above]":{"type":"IMGMENUITEM","defaultValue":"\n","description":"This is the TMENUITEM-options for each category of menuitem that can be generated.<br \/>\n<br \/>\nSPECIAL:<br \/>\nThe ->OptionSplit function is run on the whole GIFBUILDER-configuration before the items are generated.<br \/>\n<br \/>\n.distrib is (x,y,v,h +calc) of the distribution of the menuitems. This provides a way to space each item from the other. The codes \"textX\" and \"textY\" can be used for the width (X) and height (Y) dimension of each link.<br \/>\nThis works by adding a WORKAREA-GifBuilderObj between each of the IMGMENUITEM (\"subset\" of a GIFBUILDER-object) and this workarea defines where the text should be printed. As such the \"x,y\" defines the offset the next item will have (this should be the width of the previous in many cases!) and \"v,h\" defines the dimensions of the current item.<br \/>\nConsider this example taken from the static_template \"template: MM\":<br \/>\n\u00a0 \u00a0 NO.distrib = textX+10, 0, textX+10, textY+5<br \/>\nIn the future TypoScript may provide better ways to position GIFBUILDER-objects on the image-maps!<br \/>\n<br \/>\nImgMap is automatically used on the links! (that is the \".imgMap\" property of the text-objects in the GIFBUILDER-objects is set automatically, unless is allready set.)"},"dWorkArea":{"type":"string","defaultValue":"\n","description":"offset + calc<br \/>\n\t\t\tMain offset of the GIFBUILDER-items (also called the \"distribution\")"},"debugItemConf":{"type":"string","defaultValue":"\n","description":"Outputs (by the debug()-function) the configuration arrays for each menuitem. Useful to debug optionSplit things and such...<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"debugRenumberedObject":{"type":"boolean","defaultValue":"\n","description":"if set, the final GIFBUILDER object configuration is output in order for you to debug your configuration"},"forceTypeValue":{"type":"int","defaultValue":"\n","description":"If set, the &type parameter of the link is forced to this value regardless of target."},"imgMapExtras":{"type":"string","defaultValue":"\n","description":"<area...>-tags<br \/>\n\t\t\tExtra <area...>tags for the image-map"},"JSWindow":{"type":"boolean","defaultValue":"\n","description":"If set, the links of the menu-items will open by JavaScript in a pop-up window.<br \/>\n<br \/>\n.newWindow boolean, that lets every menuitem open in its own window opposite to opening in the same window for each click.<br \/>\n<br \/>\n.params is the list of parameters sent to the JavaScript open-window function, eg:<br \/>\nwidth=200,height=300,status=0,menubar=0<br \/>\n<br \/>\nNOTE: Does not work with JSMENU's"},"main":{"type":"GIFBUILDER","defaultValue":"\n","description":"Main configuration of the image-map! This defines the \"underlay\"!"},"noBlur":{"type":"boolean","defaultValue":"\n","description":"Normally graphical links are \"blurred\" if the browser is MSIE. Blurring removes the ugly box around a clicked link.<br \/>\nIf this property is set, the link is NOT blurred (browser-default) with \"onFocus\"."},"overrideId":{"type":"int","defaultValue":"\n","description":"integer (page-id)<br \/>\n\t\t\tIf set, then all links in the menu will point to this pageid. Instead the real uid of the page is sent by the parameter \"&real_uid=[uid]\".<br \/>\nThis feature is smart, if you have inserted a menu from somewhere else, perhaps a shared menu, but wants the menuitems to call the same page, which then generates a proper output based on the real_uid.<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"params":{"type":"string","defaultValue":"\n","description":"<img>-params<br \/>\n"},"target":{"type":"string","defaultValue":"self","description":"target<br \/>\n\t\t\tTarget of the menulinks"},"wrap":{"type":"wrap","defaultValue":"\n","description":"<br \/>\n"}}},"IMGMENUITEM":{"extendsType":"","properties":{"1":{"type":"GifBuilderObj","defaultValue":"\n","description":"NOTE:<br \/>\nThe way a imagemap is made is this; All IMGMENUITEMS are included in one big Gifbuilderobj (and renumbered!!). Because of this, Gifbuilderobjects on the next level will not be able to access the data of each menuitem.<br \/>\nAlso the feature of using [##.w] and [##.h] with +calc is currently not supported by IMGMENUITEMs.<br \/>\nTherefore all IMAGE-objects on the first level is checked; if \"file\" or \"mask\" for any IMAGE-objects are set to \"GIFBUILDER\", the Gifbuilder-object is parsed to see if any TEXT-objects are present and if so, the TEXT-object is \"checked\" - which means, that the stdWrap-function is called at a time where the $cObj->data-array is set to the actual menuitem.<br \/>\nIn the example below, the text of each menuitem is rendered by letting the title be rendered on a mask instead of directly on the image. Please observe that the \"NO.10\"-object is present in order for the image-map coordinates to be generated!!<br \/>\n<br \/>\n\u00a0 NO.6 = IMAGE<br \/>\n\u00a0 NO.6.file = masked_pencolor*.gif<br \/>\n\u00a0 NO.6.mask = GIFBUILDER<br \/>\n\u00a0 NO.6.mask {<br \/>\n\u00a0 \u00a0 XY = 500, 200<br \/>\n\u00a0 \u00a0 backColor = black<br \/>\n\u00a0 \u00a0 10 = TEXT<br \/>\n\u00a0 \u00a0 10 {<br \/>\n\u00a0 \u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 \u00a0 fontColor = white<br \/>\n\u00a0 \u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 }<br \/>\n\u00a0 \u00a0 20 = EFFECT<br \/>\n\u00a0 \u00a0 20.value = blur=80<br \/>\n\u00a0 }<br \/>\n\u00a0 NO.10 = TEXT<br \/>\n\u00a0 NO.10 {<br \/>\n\u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 hideButCreateMap = 1<br \/>\n\u00a0 }"},"2":{"type":"GifBuilderObj","defaultValue":"\n","description":"NOTE:<br \/>\nThe way a imagemap is made is this; All IMGMENUITEMS are included in one big Gifbuilderobj (and renumbered!!). Because of this, Gifbuilderobjects on the next level will not be able to access the data of each menuitem.<br \/>\nAlso the feature of using [##.w] and [##.h] with +calc is currently not supported by IMGMENUITEMs.<br \/>\nTherefore all IMAGE-objects on the first level is checked; if \"file\" or \"mask\" for any IMAGE-objects are set to \"GIFBUILDER\", the Gifbuilder-object is parsed to see if any TEXT-objects are present and if so, the TEXT-object is \"checked\" - which means, that the stdWrap-function is called at a time where the $cObj->data-array is set to the actual menuitem.<br \/>\nIn the example below, the text of each menuitem is rendered by letting the title be rendered on a mask instead of directly on the image. Please observe that the \"NO.10\"-object is present in order for the image-map coordinates to be generated!!<br \/>\n<br \/>\n\u00a0 NO.6 = IMAGE<br \/>\n\u00a0 NO.6.file = masked_pencolor*.gif<br \/>\n\u00a0 NO.6.mask = GIFBUILDER<br \/>\n\u00a0 NO.6.mask {<br \/>\n\u00a0 \u00a0 XY = 500, 200<br \/>\n\u00a0 \u00a0 backColor = black<br \/>\n\u00a0 \u00a0 10 = TEXT<br \/>\n\u00a0 \u00a0 10 {<br \/>\n\u00a0 \u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 \u00a0 fontColor = white<br \/>\n\u00a0 \u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 }<br \/>\n\u00a0 \u00a0 20 = EFFECT<br \/>\n\u00a0 \u00a0 20.value = blur=80<br \/>\n\u00a0 }<br \/>\n\u00a0 NO.10 = TEXT<br \/>\n\u00a0 NO.10 {<br \/>\n\u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 hideButCreateMap = 1<br \/>\n\u00a0 }"},"3":{"type":"GifBuilderObj","defaultValue":"\n","description":"NOTE:<br \/>\nThe way a imagemap is made is this; All IMGMENUITEMS are included in one big Gifbuilderobj (and renumbered!!). Because of this, Gifbuilderobjects on the next level will not be able to access the data of each menuitem.<br \/>\nAlso the feature of using [##.w] and [##.h] with +calc is currently not supported by IMGMENUITEMs.<br \/>\nTherefore all IMAGE-objects on the first level is checked; if \"file\" or \"mask\" for any IMAGE-objects are set to \"GIFBUILDER\", the Gifbuilder-object is parsed to see if any TEXT-objects are present and if so, the TEXT-object is \"checked\" - which means, that the stdWrap-function is called at a time where the $cObj->data-array is set to the actual menuitem.<br \/>\nIn the example below, the text of each menuitem is rendered by letting the title be rendered on a mask instead of directly on the image. Please observe that the \"NO.10\"-object is present in order for the image-map coordinates to be generated!!<br \/>\n<br \/>\n\u00a0 NO.6 = IMAGE<br \/>\n\u00a0 NO.6.file = masked_pencolor*.gif<br \/>\n\u00a0 NO.6.mask = GIFBUILDER<br \/>\n\u00a0 NO.6.mask {<br \/>\n\u00a0 \u00a0 XY = 500, 200<br \/>\n\u00a0 \u00a0 backColor = black<br \/>\n\u00a0 \u00a0 10 = TEXT<br \/>\n\u00a0 \u00a0 10 {<br \/>\n\u00a0 \u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 \u00a0 fontColor = white<br \/>\n\u00a0 \u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 }<br \/>\n\u00a0 \u00a0 20 = EFFECT<br \/>\n\u00a0 \u00a0 20.value = blur=80<br \/>\n\u00a0 }<br \/>\n\u00a0 NO.10 = TEXT<br \/>\n\u00a0 NO.10 {<br \/>\n\u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 hideButCreateMap = 1<br \/>\n\u00a0 }"},"4":{"type":"GifBuilderObj","defaultValue":"\n","description":"NOTE:<br \/>\nThe way a imagemap is made is this; All IMGMENUITEMS are included in one big Gifbuilderobj (and renumbered!!). Because of this, Gifbuilderobjects on the next level will not be able to access the data of each menuitem.<br \/>\nAlso the feature of using [##.w] and [##.h] with +calc is currently not supported by IMGMENUITEMs.<br \/>\nTherefore all IMAGE-objects on the first level is checked; if \"file\" or \"mask\" for any IMAGE-objects are set to \"GIFBUILDER\", the Gifbuilder-object is parsed to see if any TEXT-objects are present and if so, the TEXT-object is \"checked\" - which means, that the stdWrap-function is called at a time where the $cObj->data-array is set to the actual menuitem.<br \/>\nIn the example below, the text of each menuitem is rendered by letting the title be rendered on a mask instead of directly on the image. Please observe that the \"NO.10\"-object is present in order for the image-map coordinates to be generated!!<br \/>\n<br \/>\n\u00a0 NO.6 = IMAGE<br \/>\n\u00a0 NO.6.file = masked_pencolor*.gif<br \/>\n\u00a0 NO.6.mask = GIFBUILDER<br \/>\n\u00a0 NO.6.mask {<br \/>\n\u00a0 \u00a0 XY = 500, 200<br \/>\n\u00a0 \u00a0 backColor = black<br \/>\n\u00a0 \u00a0 10 = TEXT<br \/>\n\u00a0 \u00a0 10 {<br \/>\n\u00a0 \u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 \u00a0 fontColor = white<br \/>\n\u00a0 \u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 }<br \/>\n\u00a0 \u00a0 20 = EFFECT<br \/>\n\u00a0 \u00a0 20.value = blur=80<br \/>\n\u00a0 }<br \/>\n\u00a0 NO.10 = TEXT<br \/>\n\u00a0 NO.10 {<br \/>\n\u00a0 \u00a0 text.field = title<br \/>\n\u00a0 \u00a0 fontFile = fileadmin\/fonts\/caflisch.ttf<br \/>\n\u00a0 \u00a0 fontSize = 34<br \/>\n\u00a0 \u00a0 angle = 15<br \/>\n\u00a0 \u00a0 offset = 48,110<br \/>\n\u00a0 \u00a0 hideButCreateMap = 1<br \/>\n\u00a0 }"},"distrib":{"type":"string","defaultValue":"\n","description":".distrib is (x,y,v,h +calc) of the distribution of the menuitems. This provides a way to space each item from the other. The codes \"textX\" and \"textY\" can be used for the width (X) and height (Y) dimension of each link.<br \/>\nThis works by adding a WORKAREA-GifBuilderObj between each of the IMGMENUITEM (\"subset\" of a GIFBUILDER-object) and this workarea defines where the text should be printed. As such the \"x,y\" defines the offset the next item will have (this should be the width of the previous in many cases!) and \"v,h\" defines the dimensions of the current item.<br \/>\nConsider this example taken from the static_template \"template: MM\":<br \/>\n\u00a0 \u00a0 NO.distrib = textX+10, 0, textX+10, textY+5<br \/>\nIn the future TypoScript may provide better ways to position GIFBUILDER-objects on the image-maps! "}}},"JSMENU":{"extendsType":"","properties":{"1":{"type":"JSMENUITEM","defaultValue":"\n","description":"levels-config"},"2":{"type":"JSMENUITEM","defaultValue":"\n","description":"levels-config"},"3":{"type":"JSMENUITEM","defaultValue":"\n","description":"levels-config"},"4":{"type":"JSMENUITEM","defaultValue":"\n","description":"levels-config"},"SPC":{"type":"boolean","defaultValue":"\n","description":"If set, spacer can go into the menu, else not."},"firstLabelGeneral":{"type":"string","defaultValue":"\n","description":"General firstlabel. May be overridden by the one set in each JSMENUITEM"},"forceTypeValue":{"type":"int","defaultValue":"\n","description":"If set, the &type parameter of the link is forced to this value regardless of target."},"levels":{"type":"int","defaultValue":"1","description":"int, 1-5<br \/>\n\t\t\tHow many levels there are"},"menuName":{"type":"string","defaultValue":"\n","description":"JavaScript menu name.<br \/>\nIf you have more than one JSMENU on the page, you should set this value for each one."},"target":{"type":"string","defaultValue":"\n","description":"target<br \/>\n\t\t\tDecides target of the menu-links"},"wrap":{"type":"wrap","defaultValue":"\n","description":"wrap around the selector-boxes"},"wrapAfterTags":{"type":"wrap","defaultValue":"\n","description":"wrap around the selector-boxes with wrap and form-tags og JS-code."}}},"JSMENUITEM":{"extendsType":"","properties":{"additionalParams":{"type":"string","defaultValue":"\n","description":"Additional parameters to the <select> box. Eg, you could set the width with a style-parameter like this:<br \/>\nstyle=\"width: 200px;\""},"alwaysLink":{"type":"boolean","defaultValue":"\n","description":"If set an item in the menu selector will always link. This takes precedence over \"noLink\"."},"elements":{"type":"int","defaultValue":"5","description":"int+<br \/>\n\t\t\tInitial number of elements in the menu. \u00a0This is of course overruled by the actual menu item texts."},"firstLabel":{"type":"string","defaultValue":"\n","description":"First label in top of the menu (default is blank)"},"noLink":{"type":"boolean","defaultValue":"\n","description":"Normally the selection of a menu item in the selector box will update the selector on the next level (if there is a next level) and if there are no items for that selector (because there were no subpages), then the link jumps to the page of itself.<br \/>\nIf this flag is set, however, no menuitems in the selector box will ever link to anything. Only update the content of the next selector box on next level."},"showActive":{"type":"boolean","defaultValue":"\n","description":"if set, the active level will be selected, if present"},"showFirst":{"type":"boolean","defaultValue":"\n","description":"if set, the first link will be shown when the menu is updated."},"width":{"type":"int","defaultValue":"14","description":"int+<br \/>\n\t\t\tInitial width of the boxes set by a number of _ (underscores)"},"wrap":{"type":"wrap","defaultValue":"\n","description":"wraps the selectorbox"}}},"TMENU":{"extendsType":"","properties":{"ACT":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine"},"ACTRO":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine"},"ACTIFSUB":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine and has subpages"},"ACTIFSUBRO":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are found in the rootLine and has subpages"},"CUR":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page."},"CURRO":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page."},"CURIFSUB":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page and has subpages."},"CURIFSUBRO":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for a menu item if the item is the current page and has subpages."},"IFSUB":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which has subpages"},"IFSUBRO":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which has subpages"},"NO":{"type":"TMENUITEM","defaultValue":"1","description":"Boolean \/ (config)<br \/>\n\t\t\tThe default \"Normal\" state rendering of Item. This is required for all menus.<br \/>\nIf you specify properties for the \"NO\" property you do not have to set it \"1\". Otherwise with no properties setting \"NO=1\" will render the menu anyways (for TMENU this may make sense).<br \/>\n<br \/>\nThe simplest menu TYPO3 can generate is then:<br \/>\n<br \/>\npage.20 = HMENU<br \/>\npage.20.1 = TMENU<br \/>\npage.20.1.NO = 1<br \/>\n<br \/>\nThat will be pure <a> tags wrapped around page titles."},"SPC":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for 'Spacer' pages.<br \/>\nSpacers are pages of the doktype \"Spacer\". These are not viewable pages but \"placeholders\" which can be used to divide menuitems.<br \/>\n<br \/>\nNote: Rollovers doesn't work with spacers, if you use GMENU!"},"USERDEF1":{"type":"TMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\tUserdefined, see .itemArrayProcFunc for details on how to use this.<br \/>\nYou can set the ITEM_STATE values USERDEF1 and USERDEF2 (+...RO) from a script\/userfunction processing the menu item array. See HMENU\/special=userdefined or the property .itemArrayProcFunc of the menu objects."},"USERDEF1RO":{"type":"TMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\tUserdefined, see .itemArrayProcFunc for details on how to use this.<br \/>\nYou can set the ITEM_STATE values USERDEF1 and USERDEF2 (+...RO) from a script\/userfunction processing the menu item array. See HMENU\/special=userdefined or the property .itemArrayProcFunc of the menu objects."},"USERDEF2":{"type":"TMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\t(See above)"},"USERDEF2RO":{"type":"TMENUITEM","defaultValue":"\n","description":"Boolean \/ (config)<br \/>\n\t\t\t(See above)"},"USR":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are access restricted pages that a user has access to."},"USRRO":{"type":"TMENUITEM","defaultValue":"0","description":"Boolean \/ (config)<br \/>\n\t\t\tEnable\/Configuration for menu items which are access restricted pages that a user has access to."},"addParams":{"type":"string","defaultValue":"\n","description":"Additional parameter for the menu-links.<br \/>\nExample:<br \/>\n\"&some_var=some%20value\"<br \/>\nMust be rawurlencoded.<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"IProcFunc":{"type":"string","defaultValue":"\n","description":"function-name<br \/>\n\t\t\tThe internal array \"I\" is passed to this function and expected returned as well. Subsequent to this function call the menu item is compiled by implode()'ing the array $I[parts] in the passed array. Thus you may modify this if you need to.<br \/>\nSee example on the testsite and in media\/scripts\/example_itemArrayProcFunc.php"},"[Common Item States, see above]":{"type":"TMENUITEM","defaultValue":"\n","description":"This is the TMENUITEM-options for each category of menuitem that can be generated.<br \/>\n<br \/>\nSPECIAL:<br \/>\nThe ->OptionSplit function is run on the whole GIFBUILDER-configuration before the items are generated."},"accessKey":{"type":"boolean","defaultValue":"\n","description":"If set access-keys are set on the menu-links"},"collapse":{"type":"boolean","defaultValue":"\n","description":"If set, \"active\" menuitems that has expanded the next level on the menu will now collapse that menu again."},"debugItemConf":{"type":"string","defaultValue":"\n","description":"Outputs (by the debug()-function) the configuration arrays for each menuitem. Useful to debug optionSplit things and such...<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"expAll":{"type":"stdWrap","defaultValue":"\n","description":"If this is true, the menu will always show the menu on the level underneath the menuitem. This corresponds to a situation where a user has clicked a menuitem and the menu folds out the next level. This can enable that to happen on all items as default."},"forceTypeValue":{"type":"int","defaultValue":"\n","description":"If set, the &type parameter of the link is forced to this value regardless of target."},"JSWindow":{"type":"boolean","defaultValue":"\n","description":"If set, the links of the menu-items will open by JavaScript in a pop-up window.<br \/>\n<br \/>\n.newWindow boolean, that lets every menuitem open in its own window opposite to opening in the same window for each click.<br \/>\n<br \/>\n.params is the list of parameters sent to the JavaScript open-window function, eg:<br \/>\nwidth=200,height=300,status=0,menubar=0<br \/>\n<br \/>\nNOTE: Does not work with JSMENU's"},"noBlur":{"type":"boolean","defaultValue":"\n","description":"Normally links are \"blurred\" if the browser is MSIE. Blurring removes the ugly box around a clicked link.<br \/>\nIf this property is set, the link is NOT blurred (browser-default) with \"onFocus\"."},"overrideId":{"type":"int","defaultValue":"\n","description":"integer (page-id)<br \/>\n\t\t\tIf set, then all links in the menu will point to this pageid. Instead the real uid of the page is sent by the parameter \"&real_uid=[uid]\".<br \/>\nThis feature is smart, if you have inserted a menu from somewhere else, perhaps a shared menu, but wants the menuitems to call the same page, which then generates a proper output based on the real_uid.<br \/>\nApplies to GMENU, TMENU, IMGMENU"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the whole item using stdWrap<br \/>\n<br \/>\nExample: see GMENU.stdWrap"},"submenuObjSuffixes":{"type":"string","defaultValue":"\n","description":"Defines a suffix for alternative sub-level menu objects. Useful to create special submenus depending on their parent menu element. See example below.<br \/>\n<br \/>\nExample:<br \/>\nThis example will generate a menu where the menu objects for the second level will differ depending on the number of the first level item for which the submenu is rendered. The second level objects used are \"2\" (the default), \"2a\" and \"2b\" (the alternatives). Which of them is used is defined by \"1.submenuObjSuffixes\" which has the configuration \"a |*| |*| b\". This configuration means that the first menu element will use configuration \"2a\" and the last will use \"2b\" while anything in between will use \"2\" (no suffix applied)<br \/>\n<br \/>\npage.200 = HMENU<br \/>\npage.200 {<br \/>\n\u00a0 1 = TMENU<br \/>\n\u00a0 1.wrap = <div style=\"width:200px; border: 1px solid;\">|<\/div><br \/>\n\u00a0 1.expAll = 1<br \/>\n\u00a0 1.submenuObjSuffixes = a |*| \u00a0|*| b<br \/>\n\u00a0 1.NO.allWrap = <b>|<\/b><br\/><br \/>\n<br \/>\n\u00a0 2 = TMENU<br \/>\n\u00a0 2.NO.allWrap = <div style=\"background:red;\">|<\/div><br \/>\n<br \/>\n\u00a0 2a = TMENU<br \/>\n\u00a0 2a.NO.allWrap = <div style=\"background:yellow;\">|<\/div><br \/>\n<br \/>\n\u00a0 2b = TMENU<br \/>\n\u00a0 2b.NO.allWrap = <div style=\"background:green;\">|<\/div><br \/>\n}<br \/>\n<br \/>\nThe result can be seen in the image below (applied on the testsite package):<br \/>\n<br \/>\n<br \/>\n<br \/>\nApplies to GMENU, TMENU, GMENU_LAYERS, TMENU_LAYERS and GMENU_FOLDOUT on >= 2nd level in a menu."},"target":{"type":"string","defaultValue":"self","description":"target<br \/>\n\t\t\tTarget of the menulinks"},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wraps only if there were items in the menu!"}}},"TMENUITEM":{"extendsType":"","properties":{"ATagBeforeWrap":{"type":"boolean","defaultValue":"\n","description":"<br \/>\n"},"ATagParams":{"type":"stdWrap","defaultValue":"\n","description":"<A>-params \/stdWrap<br \/>\n\t\t\tAdditional parameters<br \/>\n<br \/>\nExample:<br \/>\nclass=\"board\""},"ATagTitle":{"type":"stdWrap","defaultValue":"\n","description":"Allows you to specify the \"title\" attribute of the <a> tag around the menu item.<br \/>\n<br \/>\nExample:<br \/>\nATagTitle.field = abstract \/\/ description<br \/>\n<br \/>\nThis would use the abstract or description field for the <a title=\"\"> attribute."},"RO":{"type":"boolean","defaultValue":"\n","description":"if set, rollOver is enabled for this link"},"RO_chBgColor":{"type":"string","defaultValue":"\n","description":"If property RO is set (see below) then you can set this property to a certain set of parameters which will allow you to change the background color of eg. the tablecell when the mouse rolls over you text-link.<br \/>\n<br \/>\nSyntax:<br \/>\n[over-color] | [out-color] | [id-prefix]<br \/>\n<br \/>\nExample:<br \/>\npage = PAGE<br \/>\npage.typeNum = 0<br \/>\npage.10 = HMENU<br \/>\npage.10.wrap = <table border=1>|<\/table><br \/>\npage.10.1 = TMENU<br \/>\npage.10.1.NO {<br \/>\n\u00a0 allWrap = <tr><td valign=top id=\"1tmenu{elementUid}\" style=\"background:#eeeeee;\">|<\/td><\/tr><br \/>\n\u00a0 subst_elementUid = 1<br \/>\n\u00a0 RO_chBgColor = #cccccc | #eeeeee | 1tmenu<br \/>\n\u00a0 RO = 1<br \/>\n}<br \/>\n<br \/>\nThis example will start out with the table cells in #eeeeee and change them to #cccccc (and back) when rolled over. The \"1tmenu\" string is a unique id for the menu items. You may not need it (unless the same menu items are more than once on a page), but the important thing is that the id of the table cell has the exact same label before the {elementUid} (red marks). The other important thing is that you DO set a default background color for the cell with the style-attribute (blue marking). If you do not, Mozilla browsers will behave a little strange by not capturing the mouseout event the first time it's triggered. "},"additionalParams":{"type":"stdWrap","defaultValue":"\n","description":"Define parameters that are added to the end of the URL. This must be code ready to insert after the last parameter.<br \/>\n<br \/>\nFor details, see typolink->additionalParams"},"after":{"type":"stdWrap","defaultValue":"\n","description":"HTML \/stdWrap<br \/>\n\t\t\tThe series of \"before...\" properties are duplicated to \"after...\" properties as well. The only difference is that the output generated by the .after.... properties are placed after the link and not before.<br \/>\n"},"afterImg":{"type":"imgResource","defaultValue":"\n","description":"<br \/>\n"},"afterImgLink":{"type":"boolean","defaultValue":"\n","description":"If set, this image is linked with the same <A> tag as the text<br \/>\n\t\t\tThe series of \"before...\" properties are duplicated to \"after...\" properties as well. The only difference is that the output generated by the .after.... properties are placed after the link and not before."},"afterImgTagParams":{"type":"string","defaultValue":"\n","description":"<img>-params<br \/>\n\t\t\tThe series of \"before...\" properties are duplicated to \"after...\" properties as well. The only difference is that the output generated by the .after.... properties are placed after the link and not before.<br \/>\n"},"afterROImg":{"type":"imgResource","defaultValue":"\n","description":"If set, \".afterImg\" and \".afterROImg\" is expected to create a rollOver-pair.<br \/>\n\t\t\tThe series of \"before...\" properties are duplicated to \"after...\" properties as well. The only difference is that the output generated by the .after.... properties are placed after the link and not before. "},"afterWrap":{"type":"wrap","defaultValue":"\n","description":"wrap around the \".after\"-code<br \/>\n\t\t\tThe series of \"before...\" properties are duplicated to \"after...\" properties as well. The only difference is that the output generated by the .after.... properties are placed after the link and not before."},"allStdWrap":{"type":"stdWrap","defaultValue":"\n","description":"stdWrap of the whole item"},"allWrap":{"type":"stdWrap","defaultValue":"\n","description":"wrap \/stdWrap<br \/>\n\t\t\tWraps the whole item"},"altTarget":{"type":"string","defaultValue":"\n","description":"target<br \/>\n\t\t\tAlternative target overriding the target property of the TMENU if set."},"before":{"type":"stdWrap","defaultValue":"\n","description":"HTML \/stdWrap<br \/>\n"},"beforeImg":{"type":"imgResource","defaultValue":"\n","description":"<br \/>\n"},"beforeImgLink":{"type":"boolean","defaultValue":"\n","description":"If set, this image is linked with the same <A> tag as the text"},"beforeImgTagParams":{"type":"string","defaultValue":"\n","description":"<img>-params<br \/>\n"},"beforeROImg":{"type":"imgResource","defaultValue":"\n","description":"If set, \".beforeImg\" and \".beforeROImg\" is expected to create a rollOver-pair. "},"beforeWrap":{"type":"wrap","defaultValue":"\n","description":"wrap around the \".before\"-code"},"doNotLinkIt":{"type":"boolean","defaultValue":"\n","description":"if set, the linktext are not linked at all!"},"doNotShowLink":{"type":"boolean","defaultValue":"\n","description":"if set, the text will not be shown at all (smart with spacers)"},"linkWrap":{"type":"wrap","defaultValue":"\n","description":"<br \/>\n"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"stdWrap to the link-text! "},"stdWrap2":{"type":"stdWrap","defaultValue":"\u00a0| ","description":"stdWrap to the total link-text and ATag. \u00a0(Notice that the plain default value passed to stdWrap function is \"|\".)"},"subst_elementUid":{"type":"boolean","defaultValue":"\n","description":"If set, all appearances of the string '{elementUid}' in the total element html-code (after wrapped in .allWrap} is substituted with the uid number of the menu item.<br \/>\nThis is useful if you want to insert an identification code in the HTML in order to manipulate properties with JavaScript."},"wrapItemAndSub ":{"type":"wrap","defaultValue":"\n","description":"Wraps the whole item and any submenu concatenated to it."}}},"stringList":{"extendsType":""},"charRangeMap":{"extendsType":"array"},"wrap":{"extendsType":""},"wrapSplitChar":{"extendsType":"wrap","properties":{"splitChar":{"type":"string","defaultValue":"|","description":"defines an alternative splitting character (default is \"|\" - the vertical line)"}}},"HRULER":{"extendsType":"","properties":{"lineColor":{"type":"string","defaultValue":"black","description":"The color of the ruler."},"lineThickness":{"type":"stdWrap","defaultValue":"1","description":"integer, range: 1-50"},"spaceLeft":{"type":"int","defaultValue":"\n","description":"space before the line (to the left)"},"spaceRight":{"type":"int","defaultValue":"\n","description":"space after the line (to the right)"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":" "},"tableWidth":{"type":"string","defaultValue":"99%","description":"Width of the ruler (\"width\" attribute in a table)"}}},"HTML":{"extendsType":"","properties":{"value":{"type":"stdWrap","defaultValue":"\n","description":"Raw HTML-code."}}},"HTMLparser":{"extendsType":"","properties":{"allowTags":{"type":"string","defaultValue":"\n","description":"Default allowed tags"},"globalNesting":{"type":"string","defaultValue":"\n","description":"List of tags (among the already set tags), which will be forced to have the nesting-flag set to \"global\""},"htmlSpecialChars":{"type":"int","defaultValue":"\n","description":"values: -1 \/ 0 \/ 1 \/ 2<br \/>\n\t\t\tThis regards all content which is NOT tags:<br \/>\n\"0\" means \"disabled\" - nothing is done<br \/>\n\"1\" means the content outside tags is htmlspecialchar()'ed (PHP-function which converts &\"<> to &...;)<br \/>\n\"2\" is the same as \"1\" but entities like \"&amp;\" or \"&#234\" are untouched.<br \/>\n\"-1\" does the opposite of \"1\" - converts < to <, > to >, &quot; to \" etc."},"keepNonMatchedTags":{"type":"string","defaultValue":"\n","description":"If set (true=1), then all tags are kept regardless of tags present as keys in $tags-array.<br \/>\nIf \"protect\", then the preserved tags have their <> converted to < and ><br \/>\nDefault is to REMOVE all tags, which are not specifically assigned to be allowed! So you might probably want to set this value!"},"localNesting":{"type":"string","defaultValue":"\n","description":"List of tags (among the already set tags), which will be forced to have the nesting-flag set to true"},"noAttrib":{"type":"string","defaultValue":"\n","description":"List of tags (among the already set tags), which will be forced to have the allowedAttribs value set to zero (which means, all attributes will be removed."},"removeTags":{"type":"string","defaultValue":"\n","description":"List of tags (among the already set tags), which will be configured so they are surely removed."},"rmTagIfNoAttrib":{"type":"string","defaultValue":"\n","description":"List of tags (among the already set tags), which will be forced to have the rmTagIfNoAttrib set to true"},"tags.[tagname]":{"type":"HTMLparser_tags","defaultValue":"\n","description":"Either set this property to 0 or 1 to allow or deny the tag. If you enter ->HTMLparser_tags properties, those will automatically overrule this option, thus it's not needed then.<br \/>\n[tagname] in lowercase."},"xhtml_cleaning":{"type":"boolean","defaultValue":"\n","description":"Cleans up the content for XHTML compliance. Still slightly experimental and supports only some clean up operations (like convertion tags and attributes to lower case)."}}},"HTMLparser_tags":{"extendsType":"","properties":{"allowedAttribs":{"type":"string","defaultValue":"\n","description":"'0' (zero) = no attributes allowed, '[commalist of attributes]' = only allowed attributes. If blank\/not set, all attributes are allowed."},"fixAttrib":{"type":"array","defaultValue":"\n","description":"fixAttrib.[attribute].always = true \/ false<br \/>\nIf set, the attribute is always processed. Normally an attribute is processed only if it exists<br \/>\n<br \/>\nfixAttrib.[attribute].casesensitiveComp = true \/ false<br \/>\nIf set, the comparison in .removeIfEquals and .list will be case-sensitive. At this point, it's insensitive."},"fixAttrib.[attribute]":{"type":"HTMLparser_tags_fixAttrib","defaultValue":"\n","description":"If no attribute exists by this name, this value is set as default value (if this value is not blank)"},"nesting":{"type":"","defaultValue":"\n","description":"If set true, then this tag must have starting and ending tags in the correct order. Any tags not in this order will be discarded. Thus '<\/B><B><I><\/B><\/I><\/B>' will be converted to '<B><I><\/B><\/I>'.<br \/>\nIs the value \"global\" then true nesting in relation to other tags marked for \"global\" nesting control is preserved. This means that if <B> and <I> are set for global nesting then this string '<\/B><B><I><\/B><\/I><\/B>' is converted to '<B><\/B>'"},"overrideAttribs":{"type":"string","defaultValue":"\n","description":"If set, this string is preset as the attributes of the tag. "},"protect":{"type":"boolean","defaultValue":"\n","description":"If set, the tag <> is converted to < and >"},"remap":{"type":"string","defaultValue":"\n","description":"If set, the tagname is remapped to this tagname"},"rmTagIfNoAttrib":{"type":"boolean","defaultValue":"\n","description":"If set, then the tag is removed if no attributes happend to be there."}}},"HTMLparser_tags_fixAttrib":{"extendsType":"","properties":{"default":{"type":"string","defaultValue":"\n","description":"If no attribute exists by this name, this value is set as default value (if this value is not blank)"},"list":{"type":"stringList","defaultValue":"\n","description":"Attribute value must be in this list. If not, the value is set to the first element."},"prefixLocalAnchors":{"type":"integer","defaultValue":"\n","description":"If the first char is a \"#\" character (anchor of fx. <a> tags) this will prefix either a relative or absolute path.<br \/>\nIf the value is \"1\" you will get the absolute path (t3lib_div::getIndpEnv('TYPO3_REQUEST_URL'))<br \/>\nIf the value is \"2\" you will get the relative path (stripping of t3lib_div::getIndpEnv('TYPO3_SITE_URL'))<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n...fixAttrib.href.prefixLocalAnchors = 1"},"prefixRelPathWith":{"type":"string","defaultValue":"\n","description":"If the value of the attribute seems to be a relative URL (no scheme like \"http\" and no \"\/\" as first char) then that value of this property will be prefixed the attribute.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n...fixAttrib.src.prefixRelPathWith = http:\/\/192.168.230.3\/typo3\/32\/dummy\/"},"range":{"type":"intList","defaultValue":"\n","description":"Setting integer range. "},"removeIfEquals":{"type":"string","defaultValue":"\n","description":"If the attribute value matches the value set here, then it is removed."},"removeIfFalse":{"type":"stingList","defaultValue":"\n","description":"boolean\/\"blank\" string<br \/>\nIf set, then the attribute is removed if it is \"false\". If this value is set to \"blank\" then the value must be a blank string (that means a \"zero\" value will not be removed)"},"set":{"type":"string","defaultValue":"\n","description":"Force the attribute value to this value."},"trim":{"type":"boolean","defaultValue":"\n","description":"If any of these keys are set, the value is passed through the respective PHP-functions."},"unset":{"type":"boolean","defaultValue":"\n","description":" If set, the attribute is unset."},"userFunc":{"type":"string","defaultValue":"\n","description":"User function for processing of the attribute.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n...fixAttrib.href.userFunc = tx_realurl->test_urlProc"}}},"IMAGE":{"extendsType":"","properties":{"altText":{"type":"stdWrap","defaultValue":"\n","description":"If no alttext is specified, it will use an empty alttext<br \/>\n<br \/>\n(\"alttext\" is the old spelling of this attribute. It will be used only if \"altText\" does not specify a value or properties)"},"border":{"type":"int","defaultValue":"0","description":"Value of the \"border\" attribute of the image tag."},"emptyTitleHandling":{"type":"string","defaultValue":"useAlt\n","description":"Value can be \"keepEmpty\" to preserve an empty title attribute, or \"useAlt\" to use the alt attribute instead.<br \/>\n"},"file":{"type":"imgResource","defaultValue":"\n","description":"<br \/>\n"},"if":{"type":"if","defaultValue":"\n","description":"if \"if\" returns false the image is not shown!"},"imageLinkWrap":{"type":"imageLinkWrap","defaultValue":"\n","description":"boolean \/ imageLinkWrap<br \/>\n<br \/>\nCAUTION: only active if set to 1:<br \/>\nimageLinkWrap = 1<br \/>\n<br \/>\nAdditional Note: ONLY active if linkWrap is NOT set and file is NOT GIFBUILDER (as it works with the original imagefile)"},"titleText":{"type":"stdWrap","defaultValue":"\n","description":"If no titletext is specified, it will use the alttext instead. If no alttext is specified, it will use an empty alttext"},"linkWrap":{"type":"wrap","defaultValue":"\n","description":"(before \".wrap\")"},"longdescURL":{"type":"stdWrap","defaultValue":"\n","description":"\"longdesc\" attribute (URL pointing to document with extensive details about image)."},"params":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"wrap":{"type":"wrap","defaultValue":"\n","description":"<br \/>\n"}}},"IMG_RESOURCE":{"extendsType":"","properties":{"file":{"type":"imgResource","defaultValue":"","description":" "},"stdWrap":{"type":"stdWrap","defaultValue":"","description":" "}}},"IMGMAP":{"extendsType":"","properties":{"altText":{"type":"string","defaultValue":"\n","description":"Value of the alt-attribute.<br \/>\n<br \/>\n(Used from TEXT Gifbuilding objects, this has stdWrap properties. Otherwise not)"},"explode":{"type":"intList","defaultValue":"\n","description":"This \"explodes\" or \"implodes\" the image-map. Useful to let the hot area cover a little more than just the letters of the text."},"noBlur":{"type":"boolean","defaultValue":"For IMGMENU menu objects provided automatically","description":"Normally graphical links are \"blurred\" if the browser is MSIE. This removes the ugly box around a link.<br \/>\nIf this property is set, the link is NOT blurred with \"onFocus\"."},"target":{"type":"target","defaultValue":"For IMGMENU menu objects provided automatically","description":"target for link"},"titleText":{"type":"string","defaultValue":"\n","description":"Value of the title attribute.<br \/>\n<br \/>\n(Used from TEXT Gifbuilding objects, this has stdWrap properties. Otherwise not)"},"url":{"type":"string","defaultValue":"For IMGMENU menu objects provided automatically","description":"url to link"}}},"IMGTEXT":{"extendsType":"cObjArray","properties":{"1":{"type":"IMAGE","defaultValue":"\n","description":"Rendering of the images<br \/>\nThe register \"IMAGE_NUM\" is set with the number of image being rendered for each rendering of a image-object. Starting with zero.<br \/>\nThe image-object should not be of type GIFBUILDER!<br \/>\nImportant:<br \/>\n\"file.import.current = 1\" fetches the name of the images!<br \/>\n<\/description>"},"2":{"type":"IMAGE","defaultValue":"\n","description":"Rendering of the images<br \/>\nThe register \"IMAGE_NUM\" is set with the number of image being rendered for each rendering of a image-object. Starting with zero.<br \/>\nThe image-object should not be of type GIFBUILDER!<br \/>\nImportant:<br \/>\n\"file.import.current = 1\" fetches the name of the images!<br \/>\n<\/description>"},"3":{"type":"IMAGE","defaultValue":"\n","description":"Rendering of the images<br \/>\nThe register \"IMAGE_NUM\" is set with the number of image being rendered for each rendering of a image-object. Starting with zero.<br \/>\nThe image-object should not be of type GIFBUILDER!<br \/>\nImportant:<br \/>\n\"file.import.current = 1\" fetches the name of the images!<br \/>\n<\/description>"},"altText":{"type":"stdWrap","defaultValue":"\n","description":"Default altText\/titleText if no alternatives are provided by the ->IMAGE cObjects<br \/>\n<br \/>\nIf no alttext is specified, it will use an empty alttext"},"border":{"type":"stdWrap ","defaultValue":"\n","description":"If true, a border i generated around the images."},"borderCol":{"type":"stdWrap","defaultValue":"black","description":"Color of the border, if \".border\" is set"},"borderThick":{"type":"stdWrap","defaultValue":"1","description":"Width of the border around the pictures"},"caption":{"type":"stdWrap","defaultValue":"\n","description":"Caption"},"captionAlign":{"type":"stdWrap","defaultValue":"default = \".textPos\"","description":"Caption alignment"},"captionSplit":{"type":"boolean","defaultValue":"\n","description":"If this is set, the caption text is split by the character (or string) from \".token\" , and every item is displayed under an image each in the image block.<br \/>\n.token = (string \/stdWrap) Character to split the caption elements (default is chr(10))<br \/>\n.cObject = cObject, used to fetch the caption for the split<br \/>\n.stdWrap = stdWrap properties used to render the caption."},"colRelations":{"type":"stdWrap","defaultValue":"\n","description":"This value defines the width-relations of the images in the columns of IMGTEXT. The syntax is \"[int] : [int] : [int] : ...\" for each column. If there are more imagecolumns than figures in this value, it's ignored. If the relation between two of these figures exceeds 10, this function is ignore.<br \/>\nIt works only fully if all images are downscaled by their maxW-definition.<br \/>\n<br \/>\nExample:<br \/>\nIf 6 images are placed in three columns and their width's are high enough to be forcibly scaled, this value will scale the images in the to be eg. 100, 200 and 300  pixels from left to right<br \/>\n1 : 2 : 3"},"colSpace":{"type":"stdWrap","defaultValue":"\n","description":"space between columns"},"cols":{"type":"stdWrap ","defaultValue":"\n","description":"Columns"},"editIcons":{"type":"string","defaultValue":"\n","description":"(See stdWrap.editIcons)"},"emptyTitleHandling":{"type":"string","defaultValue":"useAlt\n","description":"Value can be \"keepEmpty\" to preserve an empty title attribute, or \"useAlt\" to use the alt attribute instead.<br \/>\n"},"equalH":{"type":"stdWrap","defaultValue":"\n","description":"If this value is greater than zero, it will secure that images in a row has the same height. The width will be calculated.<br \/>\nIf the total width of the images raise above the \"maxW\"-value of the table the height for each image will be scaled down equally so that the images still have the same height but is within the limits of the totalWidth.<br \/>\nPlease note that this value will override the properties \"width\", \"maxH\", \"maxW\", \"minW\", \"minH\" of the IMAGE-objects generating the images. Furthermore it will override the \"noRows\"-property and generate a table with no columns instead!"},"image_compression":{"type":"stdWrap","defaultValue":"\n","description":"Image Compression:<br \/>\n0= Default<br \/>\n1= Dont change! (removes all parameters for the image_object!!)<br \/>\n(adds gif-extension and color-reduction command)<br \/>\n10= GIF\/256<br \/>\n11= GIF\/128<br \/>\n12= GIF\/64<br \/>\n13= GIF\/32<br \/>\n14= GIF\/16<br \/>\n15= GIF\/8<br \/>\n(adds jpg-extension and quality command)<br \/>\n20= IM: -quality 100<br \/>\n21= IM: -quality 90 <=> Photoshop 60     (JPG\/Very High)<br \/>\n22= IM: -quality 80    (JPG\/High)<br \/>\n23= IM: -quality 70<br \/>\n24= IM: -quality 60 <=> Photoshop 30   (JPG\/Medium)<br \/>\n25= IM: -quality 50<br \/>\n26= IM: -quality 40  (JPG\/Low)<br \/>\n27= IM: -quality 30 <=> Photoshop 10<br \/>\n28= IM: -quality 20   (JPG\/Very Low)<br \/>\n<br \/>\nThe default ImageMagick quality seems to be 75. This equals Photoshop quality 45. Images compressed with ImageMagick with the same visual quality as a Photoshop-compressed image seems to be largely 50% greater in size!!<br \/>\n<br \/>\nNOTE: Works ONLY if IMAGE-obj is NOT GIFBUILDER"},"image_effects":{"type":"stdWrap","defaultValue":"\n","description":"Adds these commands to the parameteres for the scaling. This function has no effect if \"image_compression\" above is set to 1!!<br \/>\n<br \/>\n1 => \"-rotate 90\",<br \/>\n2 => \"-rotate 270\",<br \/>\n3 => \"-rotate 180\",<br \/>\n10 => \"-colorspace GRAY\",<br \/>\n11 => \"-sharpen 70\",<br \/>\n20 => \"-normalize\",<br \/>\n23 => \"-contrast\",<br \/>\n25 => \"-gamma 1.3\",<br \/>\n26 => \"-gamma 0.8\"<br \/>\n<br \/>\nNOTE: Works ONLY if IMAGE-obj is NOT GIFBUILDER"},"image_frames":{"type":"array ","defaultValue":"\n","description":"Frames:<br \/>\n.key points to the frame used.<br \/>\n<br \/>\n\".image_frames.x\" is imgResource-mask (\".m\")properties which will override to the [imgResource].m properties of the imageObjects. This is used to mask the images into a frame. See how it's done in the default configuration and IMGTEXT in the static_template-table.<br \/>\n<br \/>\nExample:<br \/>\n1 {<br \/>\n  mask = media\/uploads\/darkroom1_mask.jpg<br \/>\n  bgImg = GIFBUILDER<br \/>\n  bgImg {<br \/>\n    XY = 100,100<br \/>\n    backColor = {$bgCol}<br \/>\n  }<br \/>\n  bottomImg = GIFBUILDER<br \/>\n  bottomImg {<br \/>\n    XY = 100,100<br \/>\n    backColor = black<br \/>\n  }<br \/>\n  bottomImg_mask = media\/uploads\/darkroom1_bottom.jpg<br \/>\n}<br \/>\n<br \/>\nNOTE: This cancels the jpg-quality settings sent as ordinary \".params\" to the imgResource. In addition the output of this operation will always be jpg or gif!<br \/>\nNOTE: Works ONLY if IMAGE-obj is NOT GIFBUILDER"},"imgList":{"type":"stdWrap","defaultValue":"\n","description":"list of images from \".imgPath\"<br \/>\n<br \/>\nExample:<br \/>\nThis imports the list of images from tt_content's image-field<br \/>\n\"imgList.field = image\""},"imgMax":{"type":"stdWrap","defaultValue":"\n","description":"max number of images"},"imgObjNum":{"type":"int","defaultValue":"\n","description":" +optionSplit<br \/>\nHere you define, which IMAGE-cObjects from the array \"1,2,3,4...\" in this object that should render the images.<br \/>\n\"current\" is set to the image-filename.<br \/>\n<br \/>\nExample:<br \/>\n\"imgObjNum = 1 |*||*| 2\":<br \/>\nThis would render the first two images with \"1. ...\" and the last image with \"2. ...\", provided that the \".imgList\" contains 3 images."},"imgPath":{"type":"stdWrap","defaultValue":"\n","description":"Path to the images<br \/>\n<br \/>\nExample:<br \/>\n\"uploads\/pics\/\""},"imgStart":{"type":"stdWrap","defaultValue":"\n","description":"start with image-number \".imgStart\""},"longdescURL":{"type":"stdWrap","defaultValue":"\n","description":"Default longdescURL if no alternatives are provided by the ->IMAGE cObjects<br \/>\n<br \/>\n\"longdesc\" attribute (URL pointing to document with extensive details about image)."},"maxW":{"type":"stdWrap","defaultValue":"\n","description":"max width of the image-table.<br \/>\nThis will scale images not in the right size! Takes the number of columns into account!<br \/>\n<br \/>\nNOTE: Works ONLY if IMAGE-obj is NOT GIFBUILDER"},"maxWInText":{"type":"stdWrap","defaultValue":"50% of maxW","description":"max width of the image-table, if the text is wrapped around the image-table (on the left or right side).<br \/>\nThis will scale images not in the right size! Takes the number of columns into account!<br \/>\n<br \/>\nNOTE: Works ONLY if IMAGE-obj is NOT GIFBUILDER"},"noCols":{"type":"stdWrap","defaultValue":"\n","description":"If set, the columns are not made in the table. The images are all put in one row separated by a clear giffile to space them apart.<br \/>\nIf noRows is set, noCols will be unset. They cannot be set simultaneously."},"noRows":{"type":"stdWrap","defaultValue":"\n","description":"If set, the rows are not divided by a table-rows. Thus images are more nicely shown if the height differs a lot (normally the width is the same!)"},"noStretchAndMarginCells":{"type":"boolean","defaultValue":"\n","description":"If set (1), the cells used to add left and right margins plus stretch out the table will not be added. You will loose the ability to set margins for the object if entered \"in text\". So it's not recommended, but it has been requested by some people for reasons."},"rowSpace":{"type":"stdWrap","defaultValue":"\n","description":"space between rows"},"rows":{"type":"stdWrap","defaultValue":"\n","description":"Rows (higher priority thab \"cols\")"},"spaceBelowAbove":{"type":"stdWrap","defaultValue":"\n","description":"Pixelsspace between content an images when position of image is above or belox text (but not in text)"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"tableStdWrap":{"type":"stdWrap","defaultValue":"\n","description":"This passes the final <table> code for the image block to the stdWrap function."},"text":{"type":"stdWrap","defaultValue":"\n","description":"Use this to import \/ generate the content, that should flow around the imageblock."},"textMargin":{"type":"stdWrap","defaultValue":"\n","description":"margin between the image and the content"},"textMargin_outOfText":{"type":"boolean","defaultValue":"\n","description":"If set, the textMargin space will still be inserted even if the image is placed above or below the text.<br \/>\nThis flag is only for a kind of backwards compatibility because this \"feature\" was recently considered a bug and thus corrected. So if anyone has depended on this way things are done, you can compensate with this flag."},"textPos":{"type":"stdWrap","defaultValue":"\n","description":"Textposition:<br \/>\nbit[0-2]: 000 = centre, 001 = right, 010 = left<br \/>\nbit[3-5]: 000 = over, 001 = under, 010 text<br \/>\n<br \/>\n0 - Above: Centre<br \/>\n1 - Above: Right<br \/>\n2 - Above: Left<br \/>\n8 - Below: Centre<br \/>\n9 - Below: Right<br \/>\n10 - Below: Left<br \/>\n17 - In Text: Right<br \/>\n18 - In Text: Left<br \/>\n25 - In Text: Right (no wrap)<br \/>\n26 - In Text: Left (no wrap)"}}},"LOAD_REGISTER":{"extendsType":"array","properties":{"[myRegisterVar1]":{"type":"stdWrap","defaultValue":"\n","description":"Example:<br \/>\n(This sets \"contentWidth\", \"label\" and \"head\")<br \/>\n<br \/>\npage.27 = LOAD_REGISTER<br \/>\npage.27 {<br \/>\n  contentWidth = 500<br \/>\n<br \/>\n  label.field = header<br \/>\n<br \/>\n  head = some text<br \/>\n  head.wrap = <B> | <\/B><br \/>\n}"},"[myRegisterVar2]":{"type":"stdWrap","defaultValue":"\n","description":""},"[myRegisterVar3]":{"type":"stdWrap","defaultValue":"\n","description":""}}},"META":{"extendsType":"array","properties":{"REFRESH":{"type":"stdWrap","defaultValue":"\n","description":"Metatag<br \/>\nIf value is empty (after trimming) the metatag is not generated.<br \/>\n[seconds]; [url, leave blank for same page]<br \/>\n"},"DESCRIPTION":{"type":"stdWrap","defaultValue":"\n","description":"Metatag<br \/>\nIf value is empty (after trimming) the metatag is not generated.<br \/>\nIf the \"key\" (eg. \"REFRESH\" or \"DESCRIPTION\") is \"REFRESH\" (caseinsensitive), then the \"http-equiv\"-attribute is used in the metatag instead of \"name\".<br \/>\n<br \/>\nExamples:<br \/>\n.REFRESH =  [seconds]; [url, leave blank for same page]<br \/>\n.DESCRIPTION = This is the description of the content in this document<br \/>\n.KEYWORDS = This is the keywords..."},"KEYWORDS":{"type":"stdWrap","defaultValue":"\n","description":"Metatag<br \/>\nIf value is empty (after trimming) the metatag is not generated.<br \/>\nExamples:<br \/>\n.KEYWORDS = This, is, the, list, of, keywords"},"[myMetaTag]":{"type":"stdWrap","defaultValue":"\n","description":"Metatag<br \/>\nIf value is empty (after trimming) the metatag is not generated.<br \/>\nofcause you can specify your own meta tags too..."}}},"MULTIMEDIA":{"extendsType":"","properties":{"file":{"type":"stdWrap","defaultValue":"\n","description":"The multimedia file. Types are:<br \/>\ntxt, html, htm:Inserted directly<br \/>\nclass:Java-applet<br \/>\nswf:Flash animation<br \/>\nswa, dcr:ShockWave Animation<br \/>\nwav,au:Sound<br \/>\navi,mov,asf,mpg,wmv:Movies (AVI, QuickTime, MPEG4)"},"params":{"type":"stdWrap","defaultValue":"\n","description":"This is parameters for the multimedia-objects. Use this to enter stuff like with and height:<br \/>\n<br \/>\nExample:<br \/>\nwidth=200<br \/>\nheight=300<br \/>\n<br \/>\n... will generate a tag like '<embed .... width=\"200\" height=\"300\">'<br \/>\nheight=<br \/>\n<br \/>\nAn empty string will remove the parameter from the embed-tag"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"}}},"OTABLE":{"extendsType":"cObjArray","properties":{"1":{"type":"cObj","defaultValue":"\n","description":"the object which should be rendered at the specified position. You have to set this to a contenttype (IMAGE, TEXT,...)"},"2":{"type":"cObj","defaultValue":"\n","description":"the object which should be rendered at the specified position. You have to set this to a contenttype (IMAGE, TEXT,...)"},"3":{"type":"cObj","defaultValue":"\n","description":"the object which should be rendered at the specified position. You have to set this to a contenttype (IMAGE, TEXT,...)"},"offset":{"type":"intList","defaultValue":"\n","description":"Offset from upper left corner<br \/>\n<br \/>\nNote:<br \/>\nActually the datatype is \"x,y,r,b,w,h\":<br \/>\nx,y is offset from upperleft corner<br \/>\nr,b is offset (margin) to right and bottom<br \/>\nw is the required width of the content field<br \/>\nh is the required height of the content field<br \/>\n<br \/>\nAll measures is in pixels."},"tableParams":{"type":"string","defaultValue":"border=0 cellspacing=0 cellpadding=0","description":"<br \/>\n"}}},"PHP_SCRIPT":{"extendsType":"","properties":{"file":{"type":"string","defaultValue":"\n","description":"File that will be included. This file must be valid PHP-code! It's included with \"include()\";<br \/>\n<br \/>\nDirections:<br \/>\n1) All content must be put into $content. No output must be echo'ed out!<br \/>\n<br \/>\n2) Call $GLOBALS[\"TSFE\"]->set_no_cache(), if you want to disable caching of the page. Set this during development! And set it, if the content you create may not be cached.<br \/>\n<br \/>\nNOTE: If you have a parsing error in your include script the $GLOBALS[\"TSFE\"]->set_no_cache() function is NOT executed and thereby does not disable caching. Upon a parse-error you must manually clear the page-cache after you have corrected your error!<br \/>\n3) the array $conf contains the configuration for the PHP_SCRIPT cObject. Try debug($conf) to see the content printed out for debugging!<br \/>\nSee later in this manual for an introduction to writing your own PHP include-scripts."}}},"PHP_SCRIPT_EXT":{"extendsType":"","properties":{"file":{"type":"string","defaultValue":"\n","description":"File that will be included. This file must be valid PHP-code! It's included with \"include()\";<br \/>\n<br \/>\nPurpose:<br \/>\nThis works like PHP_SCRIPT_INT, because a divider string is also inserted in the content for this kind of include-script. But the difference is that the content is divided as the very last thing before it's output to the browser.<br \/>\nThis basically means that PHP_SCRIPT_EXT (external, because it's included in the global space in index_ts.php file!!) can output data directly with echo-statements!<br \/>\nThis is a very \"raw\" version of PHP_SCRIPT because it's not included from inside an object and you have only very few standard functions from TYPO3 to call.<br \/>\nThis is the fastest option of all three PHP_SCRIPT-cObjects, because the page-data is all cached and your dynamic content is generated by a raw php-script<br \/>\n<br \/>\nRules:<br \/>\n- All content can be either 1) echo'ed out directly, or 2) returned in $content.<br \/>\n- calls to $GLOBALS[\"TSFE\"]->set_no_cache() and $GLOBALS[\"TSFE\"]->set_cache_timeout_default() makes no sense in this situation.<br \/>\n- parsing errors does not interfere with caching<br \/>\n- In the global name-space, the array $REC contains the current record when the file was \"inserted\" on the page, and $CONF-array contains the configuration for the script.<br \/>\n- Don't mess with the global vars named $EXTiS_*  "},"includeLibs":{"type":"stringList","defaultValue":"\n","description":"This is a comma-separated list of resources that are included as PHP-scripts (with include_once() function) if this script is included.<br \/>\nThis is possible to do because any include-files will be known before the scripts are included. That's not the case with the regular PHP_SCRIPT cObject."}}},"PHP_SCRIPT_INT":{"extendsType":"","properties":{"file":{"type":"string","defaultValue":"\n","description":"File that will be included. This file must be valid PHP-code! It's included with \"include()\";<br \/>\n<br \/>\nPurpose:<br \/>\nThis basically works like PHP_SCRIPT. But the vital difference is that inserting a PHP_SCRIPT_INT (internal opposed to external, see below) merely inserts a divider-string in the code and then serializes the current cObj and puts it in the $GLOBALS[\"TSFE\"]->config[\"INTincScript\"]-array. This array is saved with the cached page-content.<br \/>\nNow, the point is, that including a script like this lets you avoid disabling pagecaching. The reason is that the cached page contains the divider string and when a \"static\" page is fetched from cache, it's divided by that string and the dynamic content object is inserted.<br \/>\nThis is the compromise option of all three PHP_SCRIPT-cObjects, because the page-data is all cached, but still the pagegen.php script is included, which initializes all the classes, objects and so. What you gain here is an environment for your script almost exactly the same as PHP_SCRIPT because your script is called from inside a class tslib_cObj object. You can work with all functions of the tslib_cObj-class. But still all the \"static\" pagecontent is only generated once, cached and only your script is dynamically rendered.<br \/>\n<br \/>\nRules:<br \/>\n- calls to $GLOBALS[\"TSFE\"]->set_no_cache() and $GLOBALS[\"TSFE\"]->set_cache_timeout_default() makes no sense in this situation.<br \/>\n- parsing errors does not interfere with caching<br \/>\n- Be aware that certain global variables may not be set as usual and be available as usual when working in this mode. Most scripts should work out-of-the-box with this option though.<br \/>\n- Dependence and use of LOAD_REGISTER is fragile because the PHP_SCRIPT_INT is not rendered until after the cached content and due to this changed order of events, use of LOAD_REGISTER may not work.<br \/>\n- You can not nest PHP_SCRIPT_INT and PHP_SCRIPT_EXT in PHP_SCRIPT_INT. You may nest PHP_SCRIPT cObjects though."},"includeLibs":{"type":"stringList","defaultValue":"\n","description":"This is a comma-separated list of resources that are included as PHP-scripts (with include_once() function) if this script is included.<br \/>\nThis is possible to do because any include-files will be known before the scripts are included. That's not the case with the regular PHP_SCRIPT cObject."}}},"RECORDS":{"extendsType":"","properties":{"conf":{"type":"array","defaultValue":"If this is NOT defined, the rendering of the records is done with the toplevel-object [tablename] - just like the cObject, CONTENT!","description":"Config-array which renders records from table tablename"},"dontCheckPid":{"type":"boolean","defaultValue":"\n","description":"Normally a record cannot be selected, if it's parent page (pid) is not accessible for the website user. This option disables that check."},"source":{"type":"stdWrap","defaultValue":"\n","description":"List of record-id's, optionally with appended table-names.<br \/>\n<br \/>\nExample:<br \/>\ntt_content_34, 45, tt_links_56"},"tables":{"type":"stringList","defaultValue":"\n","description":"List of accepted tables. If any items in the \".source\"-list is not prepended with a tablename, the first table in this list is assumed to be the table for such records.<br \/>\nAlso tablenames configured in .conf is allowed.<br \/>\n<br \/>\nExample:<br \/>\ntables = tt_content, tt_address, tt_links<br \/>\nconf.tx_myexttable = TEXT<br \/>\nconf.tx_myexttable.value = Hello world<br \/>\n<br \/>\nThis adds the tables tt_content, tt_address, tt_links, tx_myexttable"},"wrap":{"type":"wrap","defaultValue":"\n","description":"<br \/>\n"}}},"SEARCHRESULT":{"extendsType":"","properties":{"addExtUrlsAndShortCuts":{"type":"boolean","defaultValue":"\n","description":"If set, then the doktypes 3 and 4 (External URLS and Shortcuts) are added to the doktypes being searched.<br \/>\nHowever at this point in time, no pages will be select if they do not have at least one tt_content record on them! That is because the pages and tt_content (or other) table is joined. So there must at least one occurance of a tt_content element on a External URL \/ Shortcut page for them to show up."},"allowedCols":{"type":"string","defaultValue":"\n","description":"List (separated by \":\") of allowed table-cols.<br \/>\n<br \/>\nExample:<br \/>\npages.title:tt_content.bodytext"},"languageField.[2nd table]":{"type":"string","defaultValue":"\n","description":"Setting a field name to filter language on. This works like the \"languageField\" setting in ->select<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nlanguageField.tt_content = sys_language_uid"},"layout":{"type":"string","defaultValue":"\n","description":"This defines how the search content is shown.<br \/>\n<br \/>\nExample:<br \/>\nThis substitutes the following fields:<br \/>\n###RANGELOW###:The low result range, eg. \"1\"<br \/>\n###RANGEHIGH###:The high result range, eg. \"10\"<br \/>\n###TOTAL###:The total results<br \/>\n###RESULT###:The result itself<br \/>\n###NEXT###:The next-button<br \/>\n###PREV###:The prev-button"},"next":{"type":"cObj","defaultValue":"\n","description":"This cObject will be wrapped by a link to the next searchresult. This is the code substituting the \"###NEXT###\"-mark"},"noOrderBy":{"type":"boolean","defaultValue":"\n","description":"If this is set, the result is NOT sorted after lastUpdated, tstamp for the pages-table."},"noResultObj":{"type":"cObj","defaultValue":"\n","description":"the cObject used if the search results in no rows."},"prev":{"type":"cObj","defaultValue":"\n","description":"This cObject will be wrapped by a link to the prev searchresult. This is the code substituting the \"###PREV###\"-mark"},"range":{"type":"int","defaultValue":"20","description":"The number of results at a time!"},"renderObj":{"type":"cObj","defaultValue":"\n","description":"the cObject to render the searchresults<br \/>\n$cObj->data array is set to the resulting record from the search.<br \/>\nPlease note, that in all fields are named [tablename]_[fieldnam]. Thus the pagetitle is in the field \"pages_title\".<br \/>\nApart from this, these fields from the pages-table are also present:<br \/>\nuid"},"renderWrap":{"type":"wrap","defaultValue":"\n","description":"<br \/>\n"},"resultObj":{"type":"cObj","defaultValue":"\n","description":"the cObject prepended in the search results returns rows"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wrap the whole content..."},"target":{"type":"target","defaultValue":"\n","description":"target til next\/prev links!"},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wrap the whole content..."}}},"TEMPLATE":{"extendsType":"","properties":{"markerWrap":{"type":"wrap","defaultValue":"### | ###","description":"This is the wrap the markers is wrapped with. The default value is ### | ### resulting in the markers to be presented as ###[marker_key]###.<br \/>\nAny whitespace around the wrap-items is stripped before they are set around the marker_key."},"marks":{"type":"array","defaultValue":"\n","description":"This is an array of marks-markers (case-sensitive).<br \/>\nA mark is defined by one markers in the template. The marker must be wrapped by \"###\" on both sides. Opposite to subparts, you may NOT insert the subpart-markers inside HTML-comment-tags! (They will not be removed).<br \/>\nMarks are substituted bya str_replace-function. The subparts loaded in the register is available also to the cObjects of markers (only if .nonCachedSubst is not set!)."},"nonCachedSubst":{"type":"boolean","defaultValue":"\n","description":"If set, then the substitution mode of this cObject is totally different. Normally the raw template is read and divided into the sections denoted by the marks, subparts and wraps keys. The good thing is high speed, because this \"pre-parsed\" template is cached. The bad thing is that templates that depends on incremental substition (where the order of substition is important) will not work so well.<br \/>\nBy setting this flag, markers are first substituted by str_replace in the template - one by one. Then the subparts are substituted one by one. And finally the wraps one by one.<br \/>\nObviously you loose the ability to refer to other parts in the template with the register-keys as described above. "},"relPathPrefix":{"type":"string","defaultValue":"\n","description":"Finds all relative references (eg. to images or stylesheets) and prefixes this value.<br \/>\nIf you specify properties (uppercase) these will match HTML tags and specify alternative paths for them. See example below.<br \/>\nIf the property is named \"style\" it will set alternative path for the \"url()\" wrapper that may be in <style> sections.<br \/>\n<br \/>\nExample:<br \/>\npage.10 = TEMPLATEpage.10 {  template = FILE  template.file = fileadmin\/template.html  relPathPrefix = fileadmin\/<br \/>\n  relPathPrefix.IMG = fileadmin\/img\/}<br \/>\n<br \/>\nInthis example all relative paths found are prefixed \"fileadmin\/\" unless it was the src attribute of an img tag in which case the path prefixed is \"fileadmin\/img\/\""},"subparts":{"type":"array","defaultValue":"\n","description":"This is an array of subpart-markers (case-sensitive).<br \/>\nA subpart is defined by two markers in the template. The markers must be wrapped by \"###\" on both sides. You may insert the subpart-markers inside HTML-comment-tags!!<br \/>\n<br \/>\nExample:<br \/>\nsubparts {<br \/>\n  HELLO = TEXT<br \/>\n  HELLO.value = En subpart er blevet erstattet!!<br \/>\n}<br \/>\n<br \/>\nIn the templates:<br \/>\n<!--  start of subpart: ###HELLO### --><br \/>\nThis is the HTML.code, that will be loaded in the register and replaced with the result...<br \/>\n<!-- end ###HELLO### --><br \/>\n<br \/>\nNOTE:<br \/>\nBefore the content-objects of each subpart is generated, all subparts in the array are extracted and loaded into the register so that you can load them from there later on.<br \/>\nThe register-key for each subparts code is \"SUBPART_[theSubpartkey]\".<br \/>\nIn addition the current-value is loaded with the content of each subpart just before the cObject for the subpart is parsed. That makes it quite easy to load the subpart of the cObject (eg: \".current=1\")<br \/>\nEg. this subpart above has the register-key \"SUBPART_HELLO\".<br \/>\nThis is valid ONLY if the property .nonCachedSubst is not set! (see below)"},"substMarksSeparately":{"type":"boolean","defaultValue":"\n","description":"If set, then marks are substituted in the content AFTER the substitution of subparts and wraps.<br \/>\nNormally marks are not substituted inside of subparts and wraps when you are using the default cached mode of the TEMPLATE cObject. That is a problem if you have marks inside of subparts! But setting this flag will make the marker-substitution a non-cached, subsequent process.<br \/>\nAnother solution is to turn of caching, see below."},"template":{"type":"cObj","defaultValue":"\n","description":"This must be loaded with the template-code. If not the object returns nothing."},"workOnSubpart":{"type":"string","defaultValue":"\n","description":"This is an optional definition of a subpart, that we decide to work on. In other words; if you define this value that subpart is extracted from the template and is the basis for this whole templateobject."},"wraps":{"type":"array","defaultValue":"\n","description":"This is an array of wraps-markers (case-sensitive).<br \/>\nThis is shown best by an example:<br \/>\nExample:<br \/>\nsubparts {<br \/>\n  MYLINK = TEXT<br \/>\n  MYLINK.value = <A href=\"#\"> | <\/A><br \/>\n}<br \/>\n<br \/>\nIn the template:<br \/>\nThis is <!--###MYLINK###-->a link to my<!--###MYLINK###--> page!<br \/>\n<br \/>\nIn this example the MYLINK subpart will be substituted by the wrap which is the content returned by the MYLINK cObject."}}},"TEXT":{"extendsType":"stdWrap","properties":{"value":{"type":"value","defaultValue":"\n","description":"text, wrap with stdWrap properties"}}},"USER":{"extendsType":"","properties":{"includeLibs":{"type":"stringList","defaultValue":"\n","description":"(This property applies only if the object is created as USER_INT)<br \/>\nThis is a comma-separated list of resources that are included as PHP-scripts (with include_once() function) if this script is included.<br \/>\nThis is possible to do because any include-files will be known before the scripts are included. That's not the case with the regular PHP_SCRIPT cObject."},"userFunc":{"type":"string","defaultValue":"\n","description":"The name of the function. If you specify the name with a '->' in, it's intepreted as a call to a method in a class.<br \/>\nTwo parameters are sent: A content variable (which is empty in this case, but not when used from stdWrap function .postUserFunc and .preUserFunc) and the second parameter is an array with the properties of this cObject if any.<br \/>\n<br \/>\nExample:<br \/>\nThis TypoScript will display all content element headers of a page in reversed order. Please take a look in media\/scripts\/example_callfunction.php!!<br \/>\n(Also demonstrated on the testsite, page<br \/>\n<br \/>\npage = PAGE<br \/>\npage.typeNum=0<br \/>\nincludeLibs.something = media\/scripts\/example_callfunction.php<br \/>\n<br \/>\npage.30 = USER<br \/>\npage.30 {<br \/>\n  userFunc = user_various->listContentRecordsOnPage<br \/>\n  reverseOrder = 1<br \/>\n}"}}},"USER_INT":{"extendsType":"","properties":{"includeLibs":{"type":"stringList","defaultValue":"\n","description":"(This property applies only if the object is created as USER_INT)<br \/>\nThis is a comma-separated list of resources that are included as PHP-scripts (with include_once() function) if this script is included.<br \/>\nThis is possible to do because any include-files will be known before the scripts are included. That's not the case with the regular PHP_SCRIPT cObject."},"userFunc":{"type":"string","defaultValue":"\n","description":"The name of the function. If you specify the name with a '->' in, it's intepreted as a call to a method in a class.<br \/>\nTwo parameters are sent: A content variable (which is empty in this case, but not when used from stdWrap function .postUserFunc and .preUserFunc) and the second parameter is an array with the properties of this cObject if any.<br \/>\n<br \/>\nExample:<br \/>\nThis TypoScript will display all content element headers of a page in reversed order. Please take a look in media\/scripts\/example_callfunction.php!!<br \/>\n(Also demonstrated on the testsite, page<br \/>\n<br \/>\npage = PAGE<br \/>\npage.typeNum=0<br \/>\nincludeLibs.something = media\/scripts\/example_callfunction.php<br \/>\n<br \/>\npage.30 = USER<br \/>\npage.30 {<br \/>\n  userFunc = user_various->listContentRecordsOnPage<br \/>\n  reverseOrder = 1<br \/>\n}"}}},"TLO":{"extendsType":"","properties":{"FEData":{"type":"array","defaultValue":"\n","description":"Array of tablenames.<br \/>\nHere you can configure how data submitted from the front-end should be processed, which script and so on."},"config":{"type":"CONFIG","defaultValue":"\n","description":"Global configuration.<br \/>\nThese values are stored with cached pages which means they are also accessible when retrieving a cached page."},"constants":{"type":"CONSTANTS","defaultValue":"\n","description":"Site-specific constants, eg. a general email-adresse. These constants may be substituted in the text throughout the pages. The substitution is done by parseFunc. (Option: constants=1)"},"includeLibs":{"type":"array","defaultValue":"\n","description":"With this you can include php-files with function libraries for use in your includescript in TYPO3.<br \/>\nPlease see the PAGE-object, which has the same property."},"resources":{"type":"array","defaultValue":"\n","description":"Resources in list (internal)"},"sitetitle":{"type":"array","defaultValue":"\n","description":"SiteTitle (internal)"},"types":{"type":"array","defaultValue":"\n","description":"Types (internal)<br \/>\ntype=99 reserved for plaintext display "},"_GIFBUILDER":{"type":"TLO_GIFBUILDER","defaultValue":"","description":""}}},"PAGE":{"extendsType":"cObjArray","properties":{"10":{"type":"cObj","defaultValue":"\n","description":"the object which should be rendered in the page. You have to set this to a contenttype (IMAGE, TEXT, HTML...)<br \/>\nYou can specify as much elements in this array as you want.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.10 = TEXT<br \/>\npage.10.value = Here goes the header<br \/>\npage.20 = TEXT<br \/>\npage.20.value = Hello World!<br \/>\npage.30 = TEXT<br \/>\npage.30.value = Here goes the footer"},"20":{"type":"cObj","defaultValue":"\n","description":"the object which should be rendered in the page. You have to set this to a contenttype (IMAGE, TEXT, HTML...)<br \/>\nYou can specify as much elements in this array as you want.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.10 = TEXT<br \/>\npage.10.value = Here goes the header<br \/>\npage.20 = TEXT<br \/>\npage.20.value = Hello World!<br \/>\npage.30 = TEXT<br \/>\npage.30.value = Here goes the footer"},"30":{"type":"cObj","defaultValue":"\n","description":"the object which should be rendered in the page. You have to set this to a contenttype (IMAGE, TEXT, HTML...)<br \/>\nYou can specify as much elements in this array as you want.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.10 = TEXT<br \/>\npage.10.value = Here goes the header<br \/>\npage.20 = TEXT<br \/>\npage.20.value = Hello World!<br \/>\npage.30 = TEXT<br \/>\npage.30.value = Here goes the footer"},"CSS_inlineStyle":{"type":"string","defaultValue":"\n","description":"This value is just passed on as inline css (in-document css encapsulated in <style>-tags)"},"adminPanelStyles":{"type":"boolean","defaultValue":"\n","description":"Will include CSS styles for the Admin Panel."},"bgImg":{"type":"imgResource","defaultValue":"\n","description":"Background image on the page. This is automatically added to the body-tag."},"bodyTag":{"type":"string","defaultValue":"<body bgcolor=\"#FFFFFF\">","description":"Bodytag on the page<br \/>\n<br \/>\nExample:<br \/>\npage.bodyTag = <body bgcolor=\"{$bgCol}\">"},"bodyTagAdd":{"type":"string","defaultValue":"\n","description":"This content is added to the end of the bodyTag."},"bodyTagCObject":{"type":"cObj","defaultValue":"\n","description":"This is default bodytag overridden by \".bodyTag\" if that is set."},"bodyTagMargins":{"type":"int","defaultValue":"\n","description":"margins in the bodytag.<br \/>\n<br \/>\nProperty:<br \/>\n.useCSS = 1 (boolean) - will set a \"BODY {margin: ...}\" line in the in-document style declaration - for XHTML compliance.<br \/>\n<br \/>\nExample:<br \/>\nvalue 4<br \/>\nadds leftmargin=\"4\" topmargin=\"4\" marginwidth=\"4\" marginheight=\"4\"  to the bodyTag."},"cssInline":{"type":"CARRAY","defaultValue":"\n","description":"Use cObjects for creating inline CSS<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\ncssInline {<br \/>\n    10 = TEXT<br \/>\n    10.value = h1 {margin:15px;}<br \/>\n<br \/>\n    20 = TEXT<br \/>\n    20.value = h1 span {color: blue;}<br \/>\n}<br \/>\n\t\t\t"},"config":{"type":"CONFIG","defaultValue":"\n","description":"configuration for the page. Any entries override the same entries in the toplevel-object \"config\"."},"extOnReady":{"type":"CARRAY","defaultValue":"\n","description":"ExtJS specific, adds inline javascript, wrapped in Ext.onReady.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.extOnReady {<br \/>\n<br \/>\n   10 = TEXT<br \/>\n<br \/>\n   10.value = Ext.Msg.alert(\"Typoscript Message\",\"Hello World!\");<br \/>\n<br \/>\n}<br \/>\n<br \/>\nwill produce following source:<br \/>\n<br \/>\nExt.onReady(function() {Ext.Msg.alert(\"Typoscript Message\",\"Hello World!\"); });<br \/>\n"},"footerData":{"type":"CARRAY","defaultValue":"\n","description":"Same as headerData above, except that this block gets included at the bottom of the page (just before the closing body tag).<br \/>\n\t\t\t"},"frameSet":{"type":"FRAMESET","defaultValue":"\n","description":"if any properties is set to this property, the page is made into a frameset."},"headTag":{"type":"string","defaultValue":"<head>","description":"Head-tag if alternatives are wanted"},"headerData":{"type":"cObjArray","defaultValue":"\n","description":"Inserts content in the header-section. Could be JavaScripts, meta-tags, other stylesheet references.<br \/>\nIs inserted after all the style-definitions."},"hover":{"type":"string","defaultValue":"\n","description":"The color of a link when the mouse moves over it! (only MSIE). Uses in-document stylesheet.<br \/>\n<br \/>\nDeprecated. Use stylesheet instead."},"hoverStyle":{"type":"string","defaultValue":"\n","description":"Additional style information to the hover-color.<br \/>\n<br \/>\nExample:<br \/>\npage.hoverStyle = font: bold; text-decoration: none;<br \/>\n<br \/>\nDeprecated. Use stylesheet instead."},"includeCSS":{"type":"array","defaultValue":"\n","description":"Inserts a stylesheet (just like the .stylesheet property) by allows to setting up more than a single stylesheet, because you can enter files in an array.<br \/>\n<br \/>\nThe file definition must be a valid \"resource\" datatype, otherwise nothing is inserted.<br \/>\n<br \/>\nEach file has optional properties:<br \/>\n<br \/>\n.media - setting the media attribute of the <style> tag.<br \/>\n<br \/>\n.title - setting the title of the <style> tag.<br \/>\n<br \/>\n.alternate - If set (boolean) then the rel-attribute will be \"alternate stylesheet\"<br \/>\n<br \/>\n.import - If set (boolean) then the @import way of including a stylesheet is used instead of <link><br \/>\n<br \/>\n.allWrap - wraps the complete tag, useful for conditional comments.<br \/>\n<br \/>\n.external - If set, there is no file existence check. Useful for inclusion of external files.<br \/>\n<br \/>\n.disableCompression - If config.minifyCSS is enabled, this disables the compression of this file.<br \/>\n<br \/>\n.excludeFromConcatenation - If config.concatenateCss is enabled, this prevents the file from being concatenated.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nincludeCSS {<br \/>\n  file1 = fileadmin\/mystylesheet1.css<br \/>\n<br \/>\n  file2 = stylesheet_uploaded_to_template*.css<br \/>\n  file2.title = High contrast<br \/>\n  file2.media = print<br \/>\n<br \/>\n  ie6Style = fileadmin\/css\/style3.css<br \/>\n  ie6Style.allWrap = <!--[if lte IE 7]>|<![endif]--><br \/>\n<br \/>\n  cooliris = http:\/\/www.cooliris.com\/shared\/resources\/css\/global.css<br \/>\n  cooliris.external = 1<br \/>\n}<br \/>\n"},"includeJS":{"type":"array","defaultValue":"\n","description":"Inserts one or more (Java)Scripts in <script> tags.<br \/>\n<br \/>\nThe file definition must be a valid \"resource\" datatype, otherwise nothing is inserted. This means that remote files cannot be referenced (i.e. using \"http:\/\/...\"), except by using the \".external\" property.<br \/>\n<br \/>\nEach file has optional properties:<br \/>\n<br \/>\n.type - setting the MIME type of the script (default: text\/javascript)<br \/>\n<br \/>\n.forceOnTop - boolean flag. If set, this file will be added on top of all other files.<br \/>\n<br \/>\n.allWrap - wraps the complete tag, useful for conditional comments.<br \/>\n<br \/>\n.external - If set, there is no file existence check. Useful for inclusion of external files.<br \/>\n<br \/>\n.disableCompression - If config.minifyJS is enabled, this disables the compression of this file.<br \/>\n<br \/>\n.excludeFromConcatenation - If config.concatenateJs is enabled, this prevents the file from being concatenated.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nincludeJS {<br \/>\n  file1 = fileadmin\/helloworld.js<br \/>\n  file1.type = application\/x-javascript<br \/>\n  file2 = javascript_uploaded_to_template*.js<br \/>\n}"},"includeJSlibs":{"type":"array","defaultValue":"\n","description":"Adds JS library files to head of page.<br \/>\n<br \/>\nThe file definition must be a valid \"resource\" datatype, otherwise nothing is inserted. This means that remote files cannot be referenced (i.e. using \"http:\/\/...\"), except by using the \".external\" property.<br \/>\n<br \/>\nEach file has optional properties:<br \/>\n<br \/>\n.allWrap - wraps the complete tag, useful for conditional comments.<br \/>\n<br \/>\n.external - If set, there is no file existence check. Useful for inclusion of external files.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\nincludeJSlibs.twitter = http:\/\/twitter.com\/javascripts\/blogger.js<br \/>\n<br \/>\nincludeJSlibs.twitter.external = 1<br \/>\n"},"includeJSFooter":{"type":"array","defaultValue":"\n","description":"resource<br \/>\n\t\t\tSame as includeJS above, except that this block gets included at the bottom of the page (just before the closing body tag).<br \/>\n"},"includeJSFooterlibs":{"type":"array","defaultValue":"\n","description":"\tSame as includeJSlibs above, except that this block gets included at the bottom of the page (just before the closing body tag).<br \/>\n"},"includeLibs":{"type":"array","defaultValue":"\n","description":"With this you may include php-files. This does the same as \"includeLibrary\" in ->CONFIG but this can include more than one file. These files are included after the file of includeLibrary.<br \/>\n<br \/>\nNOTE:<br \/>\nThe toplevel object \"includeLibs\" and the scripts defined with this property is added to each other. Script-keys (that is the \"array of strings\"-value, like below \"ts_address\") from this property of the page overrides any scripts-keys from the toplevel \"includeLibs\" property!<br \/>\nThe script-filenames are of the datatype \"resource\".<br \/>\n<br \/>\nExample:<br \/>\nincludeLibs.ts_address = lib_filename.php<br \/>\nincludeLibs.ts_shop = lib_filename.php<br \/>\n<br \/>\nPlease do not use the prefix shown above (\"ts_\") as this will probably be used by the standard TYPO3 libraries that will appear in the future. "},"inlineLanguageLabel":{"type":"array","defaultValue":"\n","description":"array of strings<br \/>\n\t\t\tExtJS specific, adds language labels to the page.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\ninlineLanguageLabel {<br \/>\n   label1 = 123<br \/>\n   label2 = 456<br \/>\n}<br \/>\n<br \/>\nwill produce following source:<br \/>\n<br \/>\nTYPO3.lang = {\"label1\":\"123\",\"label2\":\"456\"};<br \/>\n"},"inlineSettings":{"type":"array","defaultValue":"\n","description":"array of strings<br \/>\nExtJS specific, adds settings to the page.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.inlineSettings {<br \/>\n   setting1 = Hello<br \/>\n   setting2 = GoOnTop<br \/>\n}<br \/>\n<br \/>\nwill produce following source:<br \/>\n<br \/>\nTYPO3.settings = {\"TS\":{\"setting1\":\"Hello\",\"setting2\":\"GoOnTop\"}};<br \/>\n"},"insertClassesFromRTE":{"type":"boolean","defaultValue":"\n","description":"If set, the classes for the Rich Text Editor configured in Page TSconfig is inserted in as the first thing in the Style-section right after the setting of the stylesheet.<br \/>\n<br \/>\n.add_mainStyleOverrideDefs = [* \/ list of tags ] - will add all the \"RTE.default. mainStyleOverride_add\" - tags configured as well.<br \/>\n<br \/>\nMight be deprecated soon. Most likely the RTE should be configured by the stylesheet instead. Stay tuned..."},"javascriptLibs":{"type":"array","defaultValue":"\n","description":"array of Strings<br \/>\n\tThis allows to include the JavaScript libraries that are shipped with the TYPO3 Core.<br \/>\n<br \/>\njavascriptLibs {<br \/>\n<br \/>\n     # include prototype<br \/>\n   Prototype = 1<br \/>\n<br \/>\n     # include Scriptaculous<br \/>\n   Scriptaculous = 1<br \/>\n<br \/>\n     # adds modules dragdrop and controls to Scriptaculous<br \/>\n   Scriptaculous.modules = dragdrop,controls<br \/>\n<br \/>\n     # include ExtCore<br \/>\n   ExtCore = 1<br \/>\n<br \/>\n     # include ExtCore debug file (uncompressed)<br \/>\n   ExtCore.debug = 1<br \/>\n<br \/>\n     # includes ExtJS<br \/>\n   ExtJs = 1<br \/>\n<br \/>\n     # include ext-all.css<br \/>\n   ExtJs.css = 1<br \/>\n<br \/>\n     # include default theme<br \/>\n   ExtJs.theme = 1<br \/>\n<br \/>\n    # load specific adapter (jquery|prototype|yui)<br \/>\n   ExtJs.adapter = ...<br \/>\n<br \/>\n     # initialize QuickTips<br \/>\n   ExtJs.quickTips = 1<br \/>\n<br \/>\n     # includes ExtJS debug file (uncompressed)<br \/>\n   ExtJs.debug = 1<br \/>\n<br \/>\n\t\t#load SVG library<br \/>\n\t\tSVG = 1<br \/>\n<br \/>\n\t\t#add SVG debug<br \/>\n\t\tSVG.debug = 1<br \/>\n<br \/>\n\t\t#force render with flash<br \/>\n\t\tSVG.forceFlash = 1<br \/>\n}<br \/>\n"},"jsInline":{"type":"CARRAY","defaultValue":"\n","description":"Use cObjects for creating inline JavaScript<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.jsInline {<br \/>\n10 = TEXT<br \/>\n10.dataWrap = var pageId = {TSFE:id};<br \/>\n}<br \/>\n<br \/>\nNote:<br \/>\n<br \/>\nwith config.removeDefaultJS = external, the inlineJS is moved to external file.<br \/>\nwith config.compressJs = 1, the jsInline will be minified as well.<br \/>\n"},"jsFooterInline":{"type":"CARRAY","defaultValue":"\n","description":"Same jsInline above, except that the JavaScript gets inserted at the bottom of the page (just before the closing body tag).<br \/>\n"},"meta":{"type":"META","defaultValue":"\n","description":"<br \/>\n"},"noLinkUnderline":{"type":"boolean","defaultValue":"\n","description":"Disables link-underlining. Uses in-document stylesheet.<br \/>\n<br \/>\nDeprecated. Use stylesheet instead."},"shortcutIcon":{"type":"string","defaultValue":"\n","description":"Favicon of the page. Create a reference to an icon here!<br \/>\nBrowsers that support favicons display them in the browser's address bar, next to the site's name in lists of bookmarks, and next to the page's title in a Tabbed Document Interface.<br \/>\n<br \/>\nNote:<br \/>\nThis must be a valid \".ico\"-file (iconfile)"},"smallFormFields":{"type":"boolean","defaultValue":"\n","description":"Renders formfields like textarea, input and select-boxes small with \"verdana size 1\" font.<br \/>\nUses in-document stylesheet.<br \/>\n<br \/>\nTip:<br \/>\nUse this together with the config-option \"compensateFieldWidth\" set to \"0.6\" for netscape-browsers in order to render the small form fields in the same width!<br \/>\n<br \/>\nDeprecated. Use stylesheet instead."},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the content of the the cObject array with stdWrap options"},"stylesheet":{"type":"string","defaultValue":"\n","description":"Inserts a stylesheet in the <HEAD>-section of the page;<br \/>\npage.stylesheet = myStyleSheet.css<br \/>\nleads to<br \/>\n<link rel=\"stylesheet\" href=\"myStyleSheet.css\">"},"typeNum":{"type":"int","defaultValue":"0","description":"This decides the the typeId of the page. The value defaults to 0 for the first<br \/>\nfound PAGE object, but it MUST be set and be unique as soon you use more than one such object (watch this if you use frames on your page)!"},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wraps the content of the the cObject array"}}},"TLO_GIFBUILDER":{"extendsType":"array","properties":{"charRangeMap":{"type":"charRangeMap","defaultValue":"\n","description":"You can configure some global settings for GIFBUILDER by a top level object named \"_GIFBUILDER\". One of the available properties of the global GIFBUILDER configuration is \"charRangeMap\".<br \/>\n<br \/>\n.charRangeMap<br \/>\n<br \/>\nBy this property you can globally configure mapping of font files for certain character ranges. For instance you might need GIFBUILDER to produce gif files with a certain font for latin characters while you need to use another true type font for Japanese glyphs. So what you need is to specify the usage of another font file when characters fall into another range of Unicode values.<br \/>\n<br \/>\nIn the GIFBUILDER object this is possible with the \"splitRendering\" option but if you have hundreds of GIFBUILDER objects around your site it is not very efficient to add 5-10 lines of configuration for each time you render text. Therefore this global setting allows you to match the basename of the main font face with an alternative font."}}},"addParams":{"extendsType":"array","properties":{"[myTagProperty]":{"type":"stdWrap","defaultValue":"\n","description":"This defines the content of each added property to the tag.<br \/>\nIf there is a tag-property with this name already (case-sensitive!) that property will be overridden!<br \/>\nIf the returned value is a blank string (but not zero!) then the existing (if any) property will not be overridden.<br \/>\nExample:<br \/>\nimg.addParams.border = 0"},"_offset":{"type":"int","defaultValue":"1","description":"Use this to define which tag you want to manipulate.<br \/>\n1 is the first tag in the input, 2 is the second, -1 is the last, -2 is the second last"}}},"CONSTANTS":{"extendsType":"","properties":{"[myConstant]":{"type":"string","defaultValue":"\n","description":"Constants.<br \/>\n<br \/>\nExamples:<br \/>\n.EMAIL =  email@email.com<br \/>\nNow if parseFunc anywhere is configured with constants=1 then all cases of the string ###EMAIL### will be substituted in the text.<br \/>\nsee ->parseFunc"}}},"encapsLines":{"extendsType":"","properties":{"addAttributes":{"type":"array","defaultValue":"\n","description":"Attributes to set in the encapsulation tag.<br \/>\n<br \/>\nExample:<br \/>\naddAttributes.P {<br \/>\n  style=padding-bottom:0px; margin-top:1px; margin-bottom:1px;<br \/>\n  align=center<br \/>\n}<br \/>\n<br \/>\n([tagname] is in uppercase.)<br \/>\n<br \/>\n.setOnly =<br \/>\nexists : This will set the value ONLY if the property does not already exist<br \/>\nblank : This will set the value ONLY if the property does not already exist OR is blank (\"\")<br \/>\n<br \/>\nDefault is to always override\/set the attributes value."},"defaultAlign":{"type":"stdWrap","defaultValue":"\n","description":"If set, this value is set as the default \"align\" value of the wrapping tags, both from .encapsTagList, .bypassEncapsTagList and .nonWrappedTag"},"encapsLinesStdWrap.[tagname]":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the content inside all encapsulated lines.<br \/>\n([tagname] is in uppercase.)"},"encapsTagList":{"type":"stringList","defaultValue":"\n","description":"List of tags which qualify as encapsulating tags. Must be lowercase.<br \/>\n<br \/>\nExample:<br \/>\nencapsTagList = div, p<br \/>\n<br \/>\nThis setting will recognize the red line below as encapsulated lines:<br \/>\n<br \/>\nFirst line of text<br \/>\nSome <div>text<\/div><br \/>\n<p>Some text<\/p><br \/>\n<div>Some text<\/div><br \/>\n<B>Some text<\/B>"},"innerStdWrap_all":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the content inside all lines, whether they are encapsulated or not."},"nonWrappedTag":{"type":"string","defaultValue":"\n","description":"For all non-wrapped lines, you can set here which tag it should be wrapped in. Example would be \"P\". This is an alternative to .wrapNonWrappedLines and has the advantage that it's attributes are set by .addAttributes as well as defaultAlign. Thus you can easier match the wrapping tags used for nonwrapped and wrapped lines."},"remapTag.[tagname]":{"type":"string","defaultValue":"\n","description":"Enter a new tag name here if you wish the tagname of any encapsulation to be unified to a single tag name.<br \/>\n<br \/>\nFor instance, setting this value to \"remapTags.P=DIV\" would convert:<br \/>\n<br \/>\n<p>Some text<\/p><br \/>\n<div>Some text<\/div><br \/>\n<br \/>\nto<br \/>\n<br \/>\n<div>Some text<\/div><br \/>\n<div>Some text<\/div><br \/>\n<br \/>\n([tagname] is in uppercase.)"},"removeWrapping":{"type":"boolen","defaultValue":"\n","description":"If set, then all existing wrapping will be removed.<br \/>\n<br \/>\nThis:<br \/>\n<br \/>\nFirst line of text<br \/>\nSome <div>text<\/div><br \/>\n<p>Some text<\/p><br \/>\n<div>Some text<\/div><br \/>\n<B>Some text<\/B><br \/>\n<br \/>\nbecomes this:<br \/>\n<br \/>\nFirst line of text<br \/>\nSome <div>text<\/div><br \/>\nSome text<br \/>\nSome text<br \/>\n<B>Some text<\/B>"},"wrapNonWrappedLines":{"type":"wrap","defaultValue":"\n","description":"Wrapping for non-encapsulated lines<br \/>\n<br \/>\nExample:<br \/>\n.wrapNonWrappedLines = <P>|<\/P><br \/>\n<br \/>\nThis:<br \/>\n<br \/>\nFirst line of text<br \/>\n<p>Some text<\/p><br \/>\n<br \/>\nbecomes this:<br \/>\n<br \/>\n<P>First line of text<\/P><br \/>\n<p>Some text<\/p>"}}},"filelink":{"extendsType":"","properties":{"ATagBeforeWrap":{"type":"boolean","defaultValue":"\n","description":"If set, the link is first wrapped with \".wrap\" and then the <A>-tag."},"ATagParams":{"type":"stdWrap","defaultValue":"\n","description":"Additional parameters<br \/>\n<br \/>\nExample:<br \/>\nclass=\"board\""},"altText":{"type":"stdWrap","defaultValue":"\n","description":"For icons (image made with \"iconCObject\" must have their own properties)<br \/>\n<br \/>\nIf no alttext is specified, it will use an empty alttext"},"emptyTitleHandling":{"type":"string","defaultValue":"useAlt\n","description":"Value can be \"keepEmpty\" to preserve an empty title attribute, or \"useAlt\" to use the alt attribute instead.<br \/>\n"},"file":{"type":"stdWrap","defaultValue":"\n","description":"stdWrap of the label (by default the label is the filename) after having been wrapped with A-tag!"},"icon":{"type":"stdWrap","defaultValue":"\n","description":"Set if icon should be shown"},"iconCObject":{"type":"cObj","defaultValue":"\n","description":"Enter a cObject to use alternatively for the icons, eg. IMAGE type.<br \/>\nIf this is set, it'll substitute the use of the thumbs-script for display of thumbnails."},"icon_image_ext_list":{"type":"stringList","defaultValue":"\n","description":"This is the extensions that should render as thumbsnails instead of icons."},"icon_link":{"type":"boolean","defaultValue":"\n","description":"If the icon should be linked also"},"jumpurl":{"type":"filelink.jumpurl","defaultValue":"\n","description":"boolean<br \/>\n\t\t\tDecides if the link should call the script with the jumpurl paramter in order to register any clicks in the stat.<br \/>\nThis has the advantage that any clicks on the file will register in the stat.<br \/>\nThe disadvantage is, that users cant right-click and select \"Save Target As\" in the browser.<br \/>\n<br \/>\nExtra properties:<br \/>\n.secure (boolean)If set, then the file pointed to by jumpurl is NOT redirected to, but rather it's read from the file and returned with a correct header. This option adds a hash and locationData to the url and there MUST be access to the record in order to download the file. If the fileposition on the server is furthermore secured by a .htaccess file preventing ANY access, you've got secure download here!<br \/>\n<br \/>\n.secure.mimeTypes (list of mimetypes, syntax [ext] = [mimetype]<br \/>\n<br \/>\nExample:<br \/>\n.secure = 1<br \/>\n.secure.mimeTypes = pdf=application\/pdf, doc=application\/msword<br \/>\n<br \/>\n.parameter = [string\/stdWrap]; By default the jumpurl link will use the current pid and typeNum.<br \/>\nIf you need alternative values (e.g. for logging) you can specify them here.<br \/>\nFor options see typolink.parameter"},"labelStdWrap":{"type":"stdWrap","defaultValue":"\n","description":"stdWrap options for the label (by default the label is the filename) before being wrapped with the A-tags.<br \/>\nUse this to eg. import another label from a database field or such."},"longdescURL":{"type":"stdWrap","defaultValue":"\n","description":"For icons (image made with \"iconCObject\" must have their own properties)<br \/>\n<br \/>\n\"longdesc\" attribute (URL pointing to document with extensive details about image)."},"path":{"type":"stdWrap","defaultValue":"\n","description":"Example:<br \/>\n\"uploads\/media\/\""},"removePrependedNumbers":{"type":"boolean","defaultValue":"\n","description":"if set, any 2-digit prepended numbers (\"eg _23\") in the filename is removed."},"size":{"type":"stdWrap","defaultValue":"\n","description":"Set if size should be shown"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"target":{"type":"string","defaultValue":"\n","description":"_self \/ _top \/ _blank \/ ...<br \/>\n"},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wraps the links."}}},"filelink.jumpurl":{"extendsType":"","properties":{"secure":{"type":"boolean","defaultValue":"\n","description":"If set, then the file pointed to by jumpurl is NOT redirected to, but rather it's read from the file and returned with a correct header. This option adds a hash and locationData to the url and there MUST be access to the record in order to download the file. If the fileposition on the server is furthermore secured by a .htaccess file preventing ANY access, you've got secure download here!<br \/>\n<br \/>\n  .secure.mimeTypes = list of mimetypes, syntax [ext] = [mimetype]<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\njumpurl.secure = 1<br \/>\n<br \/>\njumpurl.secure.mimeTypes = pdf=application\/pdf, doc=application\/msword"},"secure.mimetypes":{"type":"string","defaultValue":"\n","description":".secure.mimeTypes = list of mimetypes, syntax [ext] = [mimetype]<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\njumpurl.secure = 1<br \/>\n<br \/>\njumpurl.secure.mimeTypes = pdf=application\/pdf, doc=application\/msword"},"parameter":{"type":"stdWrap","defaultValue":"\n","description":"string\/stdWrap<br \/>\n\t\t\tBy default the jumpurl link will use the current pid and typeNum.<br \/>\nIf you need alternative values (e.g. for logging) you can specify them here.<br \/>\nFor options see typolink.parameter<br \/>\n\t\t\t"}}},"if":{"extendsType":"","properties":{"directReturn":{"type":"boolean","defaultValue":"\n","description":"If this property exists the true\/false of this value is returned. Could be used to set true\/false by TypoScript constant"},"equals":{"type":"stdWrap","defaultValue":"\n","description":"returns false if content does not equal \".value\""},"isFalse":{"type":"stdWrap","defaultValue":"\n","description":"If the content is \"false\"... (empty or zero)"},"isGreaterThan":{"type":"stdWrap","defaultValue":"\n","description":"returns false if content is not greater than \".value\""},"isInList":{"type":"stdWrap","defaultValue":"\n","description":"returns false if content is not in the comma-separated list \".value\".<br \/>\nThe list in \".value\" may not have spaces between elements!!"},"isLessThan":{"type":"stdWrap","defaultValue":"\n","description":"returns false if content is not less than \".value\""},"isPositive":{"type":"stdWrap","defaultValue":"\n","description":"returns false if content is not positive"},"isTrue":{"type":"stdWrap","defaultValue":"\n","description":"If the content is \"true\".... (not empty string and not zero)"},"negate":{"type":"boolean","defaultValue":"\n","description":"This negates the result just before it exits. So if anything above returns true the overall returns ends up returning false!!"},"value":{"type":"stdWrap","defaultValue":"\n","description":"\"value\" (the comparison value mentioned above)"}}},"imageLinkWrap":{"extendsType":"","properties":{"JSwindow":{"type":"stdWrap","defaultValue":"\n","description":"boolean\/stdWrap<br \/>\n\t\t\tThe image will be opened in a new window which is fitted to the dimensions of the image!"},"JSwindow.altUrl":{"type":"stdWrap","defaultValue":"\n","description":"If this returns anything, the URL shown in the JS-window is NOT showpic.php but the url given here!"},"JSwindow.altUrl_noDefaultParams":{"type":"boolean","defaultValue":"\n","description":"If this is set, the image parameters are not appended to the altUrl<br \/>\nautomatically. This is useful if you want to create them with a userfunction<br \/>\ninstead."},"JSwindow.expand":{"type":"intList","defaultValue":"\n","description":"x and y is added to the window dimensions."},"JSwindow.newWindow":{"type":"boolean","defaultValue":"\n","description":"Each picture will open in a new window!"},"alternativeTempPath":{"type":"string","defaultValue":"\n","description":"Enter an alternative path to use for temp images. Must be found in the list in TYPO3_CONF_VARS[FE][allowedTempPaths]"},"bodyTag":{"type":"string","defaultValue":"\n","description":"Body tag of the new window"},"directImageLink":{"type":"boolean","defaultValue":"\n","description":"If true, a link to the generated image file will be returned directly (showpic.php is not used)"},"linkParams":{"type":"typolink","defaultValue":"\n","description":"Allows the manipulation of the generated typolink if JSwindow is not used.<br \/>\n<br \/>\n\t\t\tExample:<br \/>\n\t\t\tlinkParams.ATagParams.dataWrap =  class=\"{$styles.content.imgtext.linkWrap.lightboxCssClass}\" rel=\"{$styles.content.imgtext.linkWrap.lightboxRelAttribute}\"<br \/>\n"},"effects":{"type":"string","defaultValue":"\n","description":"Example:<br \/>\ngamma=1,3 | sharpen=80 | solarize=70"},"enable":{"type":"stdWrap","defaultValue":"0","description":"The image is linked ONLY if this is true!!"},"file":{"type":"stdWrap","defaultValue":"\n\t\t\t","description":"Override the path of the image which is displayed"},"height":{"type":"int","defaultValue":"\n","description":"Range:  1-1000<br \/>\nIf you add \"m\" to either the width or height, the image will be held in proportions and width\/height works as max-dimensions"},"sample":{"type":"boolean","defaultValue":"\n","description":"If set, -sample is used to scale images instead of -geometry. Sample does not use antialiasing and is therefore much faster."},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"->stdWrap<br \/>\n\t\t\tEnable stdWrap for the image."},"target":{"type":"string","defaultValue":"\n","description":"NOTE: Only if \".JSwindow\" is set"},"title":{"type":"string","defaultValue":"\n","description":"page title of the new window (HTML)"},"typolink":{"type":"typolink","defaultValue":"\n","description":"NOTE: This overrides the imageLinkWrap if it returns anything!!"},"width":{"type":"int","defaultValue":"\n","description":"Range: 1-1000<br \/>\nIf you add \"m\" to either the width or height, the image will be held in proportions and width\/height works as max-dimensions"},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wrap of the image, which is output between the body-tags"}}},"imgResource":{"extendsType":"","properties":{"alternativeTempPath":{"type":"string","defaultValue":"\n","description":"Enter an alternative path to use for temp images. Must be found in the list in TYPO3_CONF_VARS[FE][allowedTempPaths]"},"ext":{"type":"stdWrap","defaultValue":"web","description":"<br \/>\n"},"frame":{"type":"int","defaultValue":"\n","description":"Chooses which frame in an gif-animation or pdf-file.<br \/>\n\"\" = first frame (zero)"},"height":{"type":"stdWrap","defaultValue":"\n","description":"see \".width\""},"import":{"type":"stdWrap","defaultValue":"\n","description":"value should be set to the path of the file<br \/>\nwith stdWrap you get the filename from the data-array<br \/>\n<br \/>\nExample:<br \/>\nThis returns the first image in the field \"image\" from the data-array:<br \/>\n.import = uploads\/pics\/<br \/>\n.import.field = image<br \/>\n.import.listNum = 0"},"m":{"type":"mask","defaultValue":"\n","description":"NOTE: Mask for the image."},"maxH":{"type":"stdWrap","defaultValue":"\n","description":"Max height"},"maxW":{"type":"stdWrap","defaultValue":"\n","description":"Max width"},"minH":{"type":"int","defaultValue":"\n","description":"Min height (overrules maxW\/maxH)"},"minW":{"type":"int","defaultValue":"\n","description":"Min width (overrules maxW\/maxH)"},"params":{"type":"string","defaultValue":"\n","description":"ImageMagick command-line:<br \/>\nfx. \"-rotate 90\" or \"-negate\""},"sample":{"type":"boolean","defaultValue":"\n","description":"If set, -sample is used to scale images instead of -geometry. Sample does not use antialiasing and is therefore much faster."},"stripProfile":{"type":"boolean","defaultValue":"\n","description":"If set, IM-command will use a stripProfile-command which shrinks the generated thumbnails. See Install Tool for options and details.<br \/>\n<br \/>\nIf im_useStripProfileByDefault is set in the install tool, you can deactivate it by setting stripProfile=0.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n10 = IMAGE<br \/>\n10.file = fileadmin\/images\/image1.jpg<br \/>\n10.file.stripProfile = 1<br \/>\n\t\t\t"},"width":{"type":"stdWrap","defaultValue":"\n","description":"If both the width and the heigth are set and one of the numbers is appended by an \"m\", the proportions will be preserved and thus width\/height are treated as maximum dimensions for the image. The image will be scaled to fit into width\/height rectangle.<br \/>\n<br \/>\nIf both the width and the heigth are set and at least one of the numbers is appended by a \"c\", cropscaling will be enabled. This means that the proportions will be preserved and the image will be scaled to fit around a rectangle with width\/height dimensions. Then, a centered portion from inside of the image (size defined by width\/height) will be cut out.<br \/>\nThe \"c\" can have a percentage value (-100 ... +100) after it, which defines how much the cropping will be moved off the center to the border.<br \/>\n<br \/>\nNotice that you can only use \"m\" or \"c\" at the same time!<br \/>\n<br \/>\nExamples:<br \/>\nThis crops 120x80px from the center of the scaled image:<br \/>\n.width = 120c.height = 80c<br \/>\n<br \/>\nThis crops 100x100px; from landscape-images at the left and portrait-images centered:<br \/>\n.width = 100c-100.height = 100c<br \/>\n<br \/>\nThis crops 100x100px; from landscape-images a bit right of the center and portrait-images a bit upper than centered:<br \/>\n.width = 100c+30<br \/>\n.height = 100c-25"},"noScale":{"type":"boolean","defaultValue":"\n","description":"If set, image will never be scaled. Only width and height are calculated according to the other properties, so that image is _displayed_ resized, but original files is used. Example:<br \/>\n<br \/>\n file = test.jpg \/\/ has 1600 x 1200 pixels)<br \/>\n file.width = 240m<br \/>\n file.height = 240m<br \/>\n file.noScale = 1<br \/>\n<br \/>\nresults in<br \/>\n<br \/>\n <img src=\"test.jpg\" width=\"240\" height=\"180\" \/><br \/>\n \/\/ note src=\"test.jpg\" is the _original_ file.<br \/>\n<br \/>\nUsage:<br \/>\n<br \/>\n For creating PDFs or printing of pages the original file could provide much better quality as a recaled one<br \/>\n\t\t\t"}}},"mask":{"extendsType":"","properties":{"bgImg":{"type":"imgResource","defaultValue":"\n","description":"NOTE: Both \"m.mask\" and \"m.bgImg\" must be valid images."},"bottomImg":{"type":"imgResource","defaultValue":"\n","description":"An image masked by \"m.bottomImg_mask\" onto \"m.bgImg\" before the imgResources is masked by \"m.mask\".<br \/>\nBoth \"m.bottomImg\" and \"m.bottomImg_mask\" is scaled to fit the size of the imgResource image!<br \/>\nThis is most often used to create an underlay for the imgResource.<br \/>\nNOTE: Both \"m.bottomImg\" and \"m.bottomImg_mask\" must be valid images."},"bottomImg_mask":{"type":"imgResource","defaultValue":"\n","description":"(optional)<br \/>\nNOTE: Both \"m.bottomImg\" and \"m.bottomImg_mask\" must be valid images."},"mask":{"type":"imgResource","defaultValue":"\n","description":"The mask by which the image is masked onto \"m.bgImg\". Both \"m.mask\" and \"m.bgImg\" is scaled to fit the size of the imgResource image!<br \/>\nNOTE: Both \"m.mask\" and \"m.bgImg\" must be valid images."}}},"makelinks":{"extendsType":"","properties":{"http":{"type":"makelinksHttp","defaultValue":"","description":""},"mailto":{"type":"makelinksMailto","defaultValue":"","description":""}}},"makelinksHttp":{"extendsType":"","properties":{"ATagBeforeWrap":{"type":"boolean","defaultValue":"\n","description":"If set, the link is first wrapped with http.wrap and then the <A>-tag."},"ATagParams":{"type":"stdWrap","defaultValue":"\n","description":"Additional parameters<br \/>\n<br \/>\nExample:<br \/>\nclass=\"board\""},"extTarget":{"type":"string","defaultValue":"_top","description":"The target of the link"},"keep":{"type":"stringList","defaultValue":"\n","description":"list: \"scheme\",\"path\",\"query\"<br \/>\nAs default the link-text will be the full domain-name of the link.<br \/>\n<br \/>\nExamples:<br \/>\nhttp:\/\/www.webaddress.rld\/test\/doc.php?id=3<br \/>\n\"\": www.webaddress.rld<br \/>\n\"scheme\": http:\/\/www.webaddress.rld<br \/>\n\"scheme,path\": http:\/\/www.webaddress.rld\/test\/doc.php<br \/>\n\"scheme,path,query\": http:\/\/www.webaddress.rld\/test\/doc.php?id=3"},"wrap":{"type":"wrap","defaultValue":"\n","description":"wrap around the link"}}},"makelinksMailto":{"extendsType":"","properties":{"ATagBeforeWrap":{"type":"boolean","defaultValue":"\n","description":"If set, the link is first wrapped with mailto.wrap and then the <A>-tag."},"ATagParams":{"type":"stdWrap","defaultValue":"\n","description":"Additional parameters<br \/>\n<br \/>\nExample:<br \/>\nclass=\"board\""},"wrap":{"type":"wrap","defaultValue":"\n","description":"wrap around the link"}}},"numRows":{"extendsType":"","properties":{"select":{"type":"select","defaultValue":"\n","description":"Select query for the operation.<br \/>\n<br \/>\nThe property \"selectFields\" is overridden internally with \"count(*)\"."},"table":{"type":"string","defaultValue":"\n","description":"The name of the database table<br \/>\n"}}},"numberFormat":{"extendsType":"","properties":{"decimals":{"type":"stdWrap","defaultValue":"\n","description":"integer \/ stdWrap<br \/>\nNumber of decimals the formated number will have. Defaults to 0, so that your input will be rounded off in that case.<br \/>\n"},"dec_point":{"type":"stdWrap","defaultValue":".","description":"string \/ stdWrap<br \/>\nCharacter that devides the decimals from the rest. Defaults to \".\"<br \/>\n"},"thousand_sep":{"type":"stdWrap","defaultValue":",","description":"string \/ stdWrap<br \/>\nCharacter that devides the thousands of the number. Defaults to \",\", set an empty value to have no thousands separator.<br \/>\n"}}},"parseFunc":{"extendsType":"","properties":{"allowTags":{"type":"stringList","defaultValue":"\n","description":"List of tags, which are allowed to exist in code!<br \/>\nHighest priority: If a tag is found in allowTags, denyTags is ignored!!"},"constants":{"type":"boolean","defaultValue":"\n","description":"The toplevel-defined constants will be substituted in the text. The constant-name is wrapped in \"###\".<br \/>\n<br \/>\nExample:<br \/>\nconstants.EMAIL =  email@email.com<br \/>\n(NOTE: This is toplevel TypoScript!)<br \/>\nAll cases of the string ###EMAIL### will be substituted in the text. The constants are defined as a toplevel object. "},"denyTags":{"type":"stringList","defaultValue":"\n","description":"List of tags, which may NOT exist in code! (use \"*\" for all.)<br \/>\nLowest priority: If a tag is NOT found in allowTags, denyTags is checked. If denyTags is not \"*\" and the tag is not found in the list, the tag may exist!<br \/>\n<br \/>\nExample:<br \/>\nThis allows <B>, <I>, <A> and <IMG> -tags to exist<br \/>\n.allowTags = b,i,a,img<br \/>\n.denyTags = *"},"externalBlocks ":{"type":"stringList","defaultValue":"\n","description":"This allows you to pre-split the content passed to parseFunc so that only content outside the blocks with the given tags is parsed.<br \/>\nExtra properties:<br \/>\n.[tagname] {<br \/>\n  callRecursive = [boolean]; If set, the content of the block is directed into parseFunc again. Otherwise the content is just passed through with no other processing than stdWrap (see below)<br \/>\n  callRecursive.dontWrapSelf = [boolean]; If set, the tags of the block is not wrapped around the content returned from parseFunc.<br \/>\n  callRecursive.alternativeWrap = Alternative wrapping instead of the original tags.<br \/>\n  callRecursive.tagStdWrap = ->stdWrap processing of the block-tags.<br \/>\n  stdWrap = ->stdWrap processing of the whole block (regardless of whether callRecursive was set.)<br \/>\n  stripNLprev = [boolean]; Strips off last linebreak of the previous outside block<br \/>\n  stripNLnext = [boolean]; Strips off first linebreak of the next outside block<br \/>\n  stripNL = [boolean]: Does both of the above.<br \/>\n<br \/>\n   HTMLtableCells = [boolean]; If set, then the content is expected to be a table and every table-cell is traversed.<br \/>\n   # Below, default is all cells and 1,2,3... overrides for specific cols.<br \/>\n   HTMLtableCells.[default\/1\/2\/3\/...] {<br \/>\n     callRecursive = [boolean]; The content is parsed through current parseFunc<br \/>\n      stdWrap = ->stdWrap processing of the content in the cell<br \/>\n      tagStdWrap = -> The <TD> tag is processed by ->stdWrap<br \/>\n   }<br \/>\n   HTMLtableCells.addChr10BetweenParagraphs = [boolean]; If set, then all <\/P><P> appearances will have a chr(10) inserted between them<br \/>\n}<br \/>\n<br \/>\nExample:<br \/>\nThis example is used to split regular bodytext content so that tables and blockquotes in the bodytext are processed correctly. The blockquotes are passed into parseFunc again (recursively) and further their top\/bottom margins are set to 0 (so no apparent linebreaks are seen)<br \/>\nThe tables are also displayed with a number of properties of the cells overridden.<br \/>\ntt_content.text.20.parseFunc.externalBlocks {<br \/>\n  blockquote.callRecursive=1<br \/>\n  blockquote.callRecursive.tagStdWrap.HTMLparser = 1<br \/>\n  blockquote.callRecursive.tagStdWrap.HTMLparser {<br \/>\n    tags.blockquote.fixAttrib.style.list = margin-bottom:0;margin-top:0;<br \/>\n    tags.blockquote.fixAttrib.style.always=1<br \/>\n  }<br \/>\n  blockquote.stripNLprev=1<br \/>\n  blockquote.stripNLnext=1<br \/>\n<br \/>\n  table.stripNL=1<br \/>\n  table.stdWrap.HTMLparser = 1<br \/>\n  table.stdWrap.HTMLparser {<br \/>\n    tags.table.overrideAttribs = border=0 cellpadding=2 cellspacing=1 style=\"margin-top:10px; margin-bottom:10px;\"<br \/>\n    tags.tr.allowedAttribs=0<br \/>\n    tags.td.overrideAttribs = valign=top bgcolor=\"#eeeeee\" style=\"font-family : Verdana, Geneva, Arial, Helvetica, sans-serif;font-size : 10px;\"<br \/>\n  }<br \/>\n}"},"if":{"type":"if","defaultValue":"\n","description":"if \"if\" returns false the input value is not parsed, but returned directly."},"makelinks":{"type":"makelinks","defaultValue":"\n","description":"Set it to 1 for conversion<br \/>\nConvert webadresses prefixed with \"http:\/\/\" and mail-adresses prefixed with \"mailto:\"<br \/>\nto links.<br \/>\nExample:<br \/>\nmakelinks = 1<br \/>\nmakelinks.http.keep = path<br \/>\nmakelinks.http.extTarget = _blank<br \/>\nmakelinks.mailto.keep = path"},"nonTypoTagStdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Like .plainTextStdWrap. Difference:<br \/>\n.plainTextStdWrap works an ALL non-tag pieces in the text. .nonTypoTagStdWrap is post processing of all text (including tags) between special TypoTags (unless .breakoutTypoTagContent is not set for the TypoTag)"},"nonTypoTagUserFunc":{"type":"string","defaultValue":"\n","description":"Like .userFunc. Differences is (like nonTypoTagStdWrap) that this is post processing of all content pieces around TypoTags while .userFunc processes all non-tag content. (Notice: .breakoutTypoTagContent must be set for the TypoTag if it's excluded from nonTypoTagContent)"},"plainTextStdWrap":{"type":"stdWrap","defaultValue":"\n","description":"This is stdWrap properties for all non-tag content. "},"short":{"type":"array","defaultValue":"\n","description":"Like constants above, but local.<br \/>\n<br \/>\nExample:<br \/>\nThis substitutes all occurencies of \"T3\" with \"TYPO3 CMS\" and \"T3web\" with a link to typo3.org.<br \/>\nshort {<br \/>\n  T3 = TYPO3 CMS<br \/>\n  T3web = <a href=\"http:\/\/typo3.org\">typo3<\/a><br \/>\n}"},"sword":{"type":"wrap","defaultValue":"<font color=\"red\">|<\/font>","description":"Marks up any words from the GET-method send array sword_list[] in the text. The word MUST be at least two characters long!<br \/>\nNOTE: works only with $GLOBALS[\"TSFE\"]->no_cache==1"},"tags":{"type":"tags","defaultValue":"\n","description":"Here you can define custom tags that will parse the content to something."},"userFunc":{"type":"string","defaultValue":"\n","description":"This passes the non-tag content to a function of your own choice. Similar to eg. .postUserFunc in stdWrap.<br \/>\nRemember the function name must possibly be prepended \"user_\""}}},"plugin":{"extendsType":"","properties":{"_CSS_DEFAULT_STYLE":{"type":"string","defaultValue":"\n","description":"Use this to have some default CSS styles inserted in the header section of the document. Most likely this will provide a default acceptable display from the plugin, but should ideally be cleared and moved to an external stylesheet.<br \/>\nThis value is for all plugins read by the pagegen script when making the header of the document."},"_DEFAULT_PI_VARS.[piVar-key]":{"type":"string","defaultValue":"\n","description":"Allows you to set default values of the piVars array which most plugins are using (and should use) for data exchange with themselves.<br \/>\nThis works only if the plugin calls $this->pi_setPiVarDefaults()."},"_LOCAL_LANG.[lang-key].[label-key]":{"type":"string","defaultValue":"\n","description":"Can be used to override the default locallang labels for the plugin."},"includeLibs":{"type":"stringList","defaultValue":"\n","description":"Property setting up the USER \/ USER_INT object of the plugin"},"userFunc":{"type":"string","defaultValue":"\n","description":"Property setting up the USER \/ USER_INT object of the plugin"}}},"select":{"extendsType":"","properties":{"andWhere":{"type":"stdWrap","defaultValue":"\n","description":"SQL-where without \"AND\"!,<br \/>\nExample:<br \/>\nandWhere = doktype = 1"},"begin":{"type":"int ","defaultValue":"\n","description":"begin with record number value<br \/>\n<br \/>\nSpecial keyword: \"total\" is substituted with count(*)"},"groupBy":{"type":"string","defaultValue":"\n","description":"SQL-groupBy without \"group by\"! Eg. \"CType\""},"join":{"type":"string","defaultValue":"\n","description":"Enter tablename for JOIN , LEFT OUTER JOIN and RIGHT OUTER JOIN respectively."},"languageField":{"type":"string","defaultValue":"\n","description":"If set, this points to the field in the record which holds a reference to a record in sys_language table. And if set, the records returned by the select-function will be selected only if the value of this field matches the $GLOBALS[\"TSFE\"]->sys_language_uid (which is set by the config.sys_language_uid option)"},"max":{"type":"int ","defaultValue":"\n","description":"max records<br \/>\n<br \/>\nSpecial keyword: \"total\" is substituted with count(*)"},"markers":{"type":"array","defaultValue":"\n","description":"array of markers<br \/>\n\t\t\tThe markers defined in this section can be used, wrapped in the usual ###markername### way, in any other property of select.<br \/>\nEach value is properly escaped and quoted to prevent SQL injection problems. This provides a way to safely use external data<br \/>\n(e.g. database fields, GET\/POST parameters) in a query.<br \/>\n<markername>.value (value) sets the value directly<br \/>\n<markername>.commaSeparatedList (bool) If set the value is interpreted as a comma separated list of values. Each value in<br \/>\nthe list is individually escaped and quoted.<br \/>\n(stdWrap properties ...) All stdWrap properties can be used for each markername<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.60 = CONTENT<br \/>\npage.60 {<br \/>\n  table = tt_content<br \/>\n  select {<br \/>\n      pidInList = 73<br \/>\n      where = header != ###whatever###<br \/>\n      orderBy = ###sortfield###<br \/>\n      markers {<br \/>\n        whatever.data = GP:first<br \/>\n        sortfield.value = sor<br \/>\n        sortfield.wrap = |ting<br \/>\n      }<br \/>\n  }<br \/>\n}<br \/>\n"},"orderBy":{"type":"string","defaultValue":"\n","description":"without \"order by\"! Eg. \"sorting, title\""},"pidInList":{"type":"stdWrap","defaultValue":"this","description":"<br \/>\nlist of page_id"},"selectFields":{"type":"string","defaultValue":"*","description":"List of fields to select, or \"count(*)\"."},"uidInList":{"type":"intList","defaultValue":"\n","description":"list of page_id<br \/>\n"},"where":{"type":"string","defaultValue":"\n","description":"SQL-where without \"where\"!, Eg. \" (title LIKE '%SOMETHING%' AND NOT doktype) \""}}},"split":{"extendsType":"cObjArray","properties":{"1":{"type":"stdWrap","defaultValue":"\n","description":"The object that should treat the value.<br \/>\nNOTE: The \"current\"-value is set to the value of current item, when the objects are called. See \"stdWrap\" \/ current.<br \/>\n<br \/>\nExample (stdWrap used):<br \/>\n1.current = 1<br \/>\n1.wrap = <B> | <\/B><br \/>\n<br \/>\nExample (CARRAY used):<br \/>\n1 {<br \/>\n  10 = TEXT<br \/>\n  10.current = 1<br \/>\n  10.wrap = <B> | <\/B><br \/>\n  20 = CLEARGIF<br \/>\n  20.height = 20<br \/>\n}"},"2":{"type":"stdWrap","defaultValue":"\n","description":""},"3":{"type":"stdWrap","defaultValue":"\n","description":""},"cObjNum":{"type":"int","defaultValue":"\n","description":"+optionSplit<br \/>\nThis is a pointer the array of this object (\"1,2,3,4\"), that should treat the items, resulting from the split."},"max":{"type":"stdWrap","defaultValue":"\n","description":"max number of splits"},"min":{"type":"stdWrap","defaultValue":"\n","description":"min number of splits."},"returnKey":{"type":"stdWrap","defaultValue":"\n","description":"Instead of parsing the split result, just return this element of the index immediately."},"token":{"type":"stdWrap","defaultValue":"\n","description":"string or character (token) used to split the value"},"wrap":{"type":"wrap ","defaultValue":"\n","description":"Defines a wrap for each item."}}},"stdWrap":{"extendsType":"","properties":{"HTMLparser":{"type":"HTMLparser","defaultValue":"\n","description":"boolean \/ HTMLparser<br \/>\nThis object allows you to parse the HTML-content and make all kinds of advanced filterings on the content.<br \/>\nValue must be set and properties are those of ->HTMLparser.<br \/>\n(See adminguide for ->HTMLparser options)"},"TCAselectItem":{"type":"array","defaultValue":"\n","description":"Resolves a comma seperated list of values into the TCA item representation.<br \/>\n<br \/>\n.table (string): The Table to look up<br \/>\n.field (string): The field to resolve<br \/>\n.delimiter (string): Delimiter for concatenating multiple elements.<br \/>\n<br \/>\nNotice: Currently this works only with TCA fields of type \"select\" which are not database relations."},"addParams":{"type":"addParams","defaultValue":"\n","description":"Lets you add tag-parameters to the content if the content is a tag!"},"age":{"type":"string","defaultValue":"\n","description":"If enabled with a \"1\" (number, integer) the content is seen as a date (UNIX-time) and the difference from present time and the content-time is returned as one of these four variations:<br \/>\n\"xx min\" or \"xx hrs\" or \"xx days\" or \"xx yrs\"<br \/>\nThe limits between which layout is used are 60 minutes, 24 hours, 365 days,<br \/>\n<br \/>\nNOTE:<br \/>\nIf you set this property with a non-integer, it's used to format the four units. Use eight values to format both singular and plural values, where the first four values are the plural values and the last four are singular. This is the default string:<br \/>\n<br \/>\n\" min| hrs| days| yrs| min| hour| day| year\"<br \/>\n<br \/>\nSet another string if you want to change the units. You may include the \"-signs. They are removed anyway."},"append":{"type":"cObj","defaultValue":"\n","description":"cObject appended to content (after)"},"br":{"type":"boolean","defaultValue":"\n","description":"PHP function nl2br(); Converts linebreaks to <br \/>-tags"},"brTag":{"type":"string","defaultValue":"\n","description":"All ASCII-codes of \"10\" (CR) is substituted with value"},"bytes":{"type":"boolean","defaultValue":"\n","description":"Will format the input (an integer) as bytes: bytes, kb, mb<br \/>\n<br \/>\nIf you add a value for the property \"labels\" you can alter the default suffixes. Labels for bytes, kilo, mega and giga are separated by vertical bar (|) and possibly encapsulated in \"\". Eg: \" | K| M| G\" (which is the default value)<br \/>\nThus:<br \/>\n<br \/>\nbytes.labels = \" | K| M| G\""},"cObject":{"type":"cObj","defaultValue":"\n","description":"Loads content from a content-object"},"case":{"type":"case","defaultValue":"\n","description":"Converts case<br \/>\n<br \/>\n- upper: Converts to upper case (default)<br \/>\n- lower: Converts to lower case<br \/>\n- capitalize: Capitalize words<br \/>\n<br \/>\nUses \"renderCharset\" for the operation."},"char":{"type":"int","defaultValue":"\n","description":"Content is set to the chr(value).<br \/>\nPHP: $content=chr(intval($conf[\"char\"]);"},"crop":{"type":"string","defaultValue":"\n","description":"Crops the content to a certain length<br \/>\nSyntax: +\/- (chars) = from left \/ from right | [string] | [boolean: keep whole words]<br \/>\n<br \/>\nExamples:<br \/>\n20 | ...    => max 20 characters. If more, the value will be truncated to first 20 chars and prepended with \"...\"<br \/>\n-20 | ... => max 20 characters. If more, the value will be truncated to last 20 chars and appended with \"...\"<br \/>\n20 | ... | 1 => max 20 characters. If more, the value will be truncated to last 20 chars and appended with \"...\". If the division is in the middle of a word, the remains of that word is removed.<br \/>\n<br \/>\nUses \"renderCharset\" for the operation."},"cropHTML":{"type":"string","defaultValue":"\n","description":"Crops the content to a certain length. In contrast to stdWrap.crop it respects HTML tags. It does not crop inside tags and closes open tags. Entities (like \">\") are counted as one char. See stdWrap.crop below for a syntax description and examples.<br \/>\n<br \/>\nNote that stdWrap.crop should not be used if stdWrap.cropHTML is already used."},"csConv":{"type":"string","defaultValue":"\n","description":"Convert the charset of the string from the charset given as value to the current rendering charset of the frontend (renderCharset)."},"current":{"type":"boolean","defaultValue":"\n","description":"Sets the content to the \"current\"-value (see ->split)"},"data":{"type":"getText","defaultValue":"\n","description":"<br \/>\n"},"dataWrap":{"type":"string","defaultValue":"\n","description":"The content is parsed for sections of {...} and the content of {...} is of the type getText and substituted with the result of getText.<br \/>\n<br \/>\nExample:<br \/>\nThis should result in a font-tag where the fontsize is decided by the global variable \"size\":<br \/>\n<font size=\"{global : size}\"> | <\/font>"},"date":{"type":"string","defaultValue":"\n","description":"The content should be data-type \"UNIX-time\". Returns the content formatted as a date.<br \/>\n$content=Date($conf[\"date\"], $content);<br \/>\n<br \/>\nExample where a timestamp is imported:<br \/>\n.value.field = tstamp<br \/>\n.value.date = "},"debug":{"type":"boolean","defaultValue":"\n","description":"Prints content with HTMLSpecialChars() and <PRE><\/PRE>: Usefull for debugging which value stdWrap actually ends up with, if you're constructing a website with TypoScript.<br \/>\nShould be used under construction only."},"debugData":{"type":"boolean","defaultValue":"\n","description":"Prints the current data-array, $cObj->data, directly to browser. This is where \".field\" gets data from.<br \/>\nShould be used under construction only. "},"debugFunc":{"type":"boolean","defaultValue":"\n","description":"Prints the content directly to browser with the debug() function.<br \/>\nShould be used under construction only.<br \/>\nSet to value \"2\" the content will be printed in a table - looks nicer."},"doubleBrTag":{"type":"string","defaultValue":"\n","description":"All double-line-breaks are substituted with this value."},"editIcons":{"type":"string","defaultValue":"\n","description":"If not empty, then insert an icon linking to the typo3\/alt_doc.php with some parameters to build and backend user edit form for certain fields.<br \/>\nThe value of this property is a list of fields from a table to edit. It's assumed that the current record of the cObj is the record to be edited.<br \/>\nSyntax: optional tablename : comma list of fieldnames[list of pallette-field names separated by | ]<br \/>\n<br \/>\n.beforeLastTag (1,0,-1): If set (1), the icon will be inserted before the last HTML tag in the content. If -1 the icon will be prepended to the content. If zero (0) the icon is appended in the end of the content.<br \/>\n<br \/>\n.styleAttribute (string): Adds a style-attribute to the icon image with this value. For instance you can set \"position:absolute\" if you want a non-destructive insertion of the icon. Notice: For general styling all edit icons has the class \"frontEndEditIcons\" which can be addressed from the stylesheet of the site.<br \/>\n<br \/>\n.iconTitle (string): The title attribute of the image tag.<br \/>\n<br \/>\n.iconImg (HTML): Alternative HTML code instead of the default icon shown. Can be used to set another icon for editing (for instance a red dot or otherwise... :-)<br \/>\n<br \/>\nExample:<br \/>\nThis will insert an edit icon which links to a form where the header and bodytext fields are displayed and made available for editing (provided the user has access!).<br \/>\neditIcons = tt_content : header, bodytext<br \/>\n<br \/>\nOr this line that puts the header_align and date field into a \"palette\" which means they are displayed on a single line below the header field. This saves some space.<br \/>\neditIcons = header[header_align|date], bodytext<br \/>\n"},"editPanel":{"type":"EDITPANEL","defaultValue":"\n","description":"boolean \/ editPanel"},"encapsLines":{"type":"encapsLines","defaultValue":"\n","description":"Lets you split the content by chr(10) and proces each line independently. Used to format content made with the RTE."},"field":{"type":"string","defaultValue":"\n","description":"Sets the content to the value $cObj->data[field]<br \/>\n<br \/>\nExample: Set content to the value of field \"title\": \".field = title\"<br \/>\n$cObj->data changes. See the description for the data type \"getText\"\/field!<br \/>\n<br \/>\nNote: You can also divide fieldnames by \"\/\/\". Say, you set \"nav_title \/\/ title\" as the value, then the content from the field nav_title will be returned unless it is a blank string, in which case the title-field's value is returned."},"fieldRequired":{"type":"string","defaultValue":"\n","description":"value in this field MUST be set"},"filelink":{"type":"filelink","defaultValue":"\n","description":"Used to make lists of links to files."},"filelist":{"type":"stdWrap","defaultValue":"\n","description":"Reads a directory and returns a list of files.<br \/>\nThe value is exploded by \"|\" into parameters:<br \/>\n1: The path<br \/>\n2: comma-list of allowed extensions (no spaces between); if empty all extensions goes.<br \/>\n3: sorting: name, size, ext, date, mdate (modification date)<br \/>\n4: reverse: Set to \"r\" if you want a reversed sorting<br \/>\n5: fullpath_flag: If set, the filelist is returned with complete paths, and not just the filename"},"fontTag":{"type":"wrap","defaultValue":"\n","description":"<br \/>\n"},"hash":{"type":"stdWrap","defaultValue":"","description":"Returns a hashed value of the current content. Use one of the alogrithms which are available in PHP. For a list of supported algorithms see http:\/\/www.php.net\/manual\/en\/function.hash-algos.php<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\npage.10 = TEXT<br \/>\npage.10 {<br \/>\n    value = test@example.com<br \/>\n    hash = md5<br \/>\n    wrap = <img src=\"http:\/\/www.gravatar.com\/avatar\/|\" \/><br \/>\n}"},"htmlSpecialChars":{"type":"boolean","defaultValue":"\n","description":"Passes the content through htmlspecialchars()-PHP-function<br \/>\nAdditional property \".preserveEntities\" will preserve entities so only non-entity chars are affected."},"if":{"type":"if","defaultValue":"\n","description":"If the if-object returns false, stdWrap returns \"\" immediately"},"ifBlank":{"type":"stdWrap","defaultValue":"\n","description":"Same as \"ifEmpty\" but the check is done using strlen()."},"ifEmpty":{"type":"stdWrap","defaultValue":"\n","description":"if the content is empty (trimmed) at this point, the content is loaded with \"ifEmpty\". Zeros are treated as empty values!"},"innerWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the content"},"innerWrap2":{"type":"stdWrap","defaultValue":"\n","description":"same as .innerWrap (but watch the order in which they are executed)"},"insertData":{"type":"boolean","defaultValue":"\n","description":"If set, then the content string is parsed like .dataWrap above.<br \/>\n<br \/>\nExample:<br \/>\nDisplays the page title:<br \/>\n10 = TEXT<br \/>\n10.value = This is the page title: {page:title}<br \/>\n10.insertData = 1"},"intval":{"type":"boolean","defaultValue":"\n","description":"PHP function intval(); Returns an integer.<br \/>\nPHP: $content=intval($content);"},"keywords":{"type":"boolean","defaultValue":"\n","description":"splits the content by characters \",\" \";\" and chr(10) (return), trims each value and returns a comma-separated list of the values."},"lang":{"type":"ARR_languages_strings","defaultValue":"\n","description":"This is used to define optional language specific values.<br \/>\nIf the global language key set by the ->config property .language is found in this array, then this value is used instead of the default input value to stdWrap.<br \/>\n<br \/>\nExample:<br \/>\nconfig.language = de<br \/>\npage.10 = TEXT<br \/>\npage.10.value = I am a Berliner!<br \/>\npage.10.lang.de = Ich bin ein Berliner!<br \/>\n<br \/>\nOutput will be \"Ich bin...\" instead of \"I am...\""},"listNum":{"type":"string","defaultValue":"\n","description":"Explodes the content with \",\" (comma) and the content is set to the item[value].<br \/>\n<br \/>\nSpecial keyword: \"last\" is set to the last element of the array!<br \/>\n<br \/>\n.splitChar (string):<br \/>\nDefines the string used to explode the value. If splitChar is an integer, the character with that number is used (eg. \"10\" to split lines...).<br \/>\nDefault: \",\" (comma)<br \/>\n<br \/>\n.listNum = rand:<br \/>\nReturns a random item out of th elist<br \/>\n<br \/>\n.stdWrap (stdWrap properties):<br \/>\nstdWrap properties of the listNum...<br \/>\n<br \/>\nExamples:<br \/>\n<br \/>\nWe have a value of \"item 1, item 2, item 3, item 4\":<br \/>\nThis would return \"item 3\":<br \/>\n.listNum = last - 1<br \/>\n<br \/>\n<br \/>\nThis way, the subtitle field changes on every reload:<br \/>\npage.5 = COA_INT<br \/>\npage.5 {<br \/>\n  10 = TEXT<br \/>\n  10 {<br \/>\n    field = subtitle<br \/>\n    stdWrap.listNum = rand<br \/>\n  }<br \/>\n}<br \/>\n"},"noTrimWrap":{"type":"wrap","defaultValue":"\n","description":"This wraps the content with the values val1 and val2 in the example below - including surrounding whitespace! - without trimming the values. Note that this kind of wrap requires a \"|\"  character to begin and end the wrap.<br \/>\n<br \/>\nExample:<br \/>\n| val1 | val2 |"},"numRows":{"type":"numRows","defaultValue":"\n","description":"Returns the number of rows resulting from the select"},"numberFormat":{"type":"numberFormat","defaultValue":"\n","description":"Formats a float value to any number format you need (e.g. prices)<br \/>\n<br \/>\nWith this property you can format a float value and display it like you want, for example as a price. It's a wrapper for PHP's number_format() function.<br \/>\nYou can define how many decimals you want and which separators you want for decimals and thousands.<br \/>\n<br \/>\nExamples:<br \/>\n<br \/>\nlib.myPrice = TEXT<br \/>\nlib.myPrice {<br \/>\n  value = 0.8<br \/>\n  numberFormat {<br \/>\n    decimals = 2<br \/>\n    dec_point = ,<br \/>\n  }<br \/>\n  noTrimWrap = || \u20ac|<br \/>\n}<br \/>\n# Will result in \"0,80 \u20ac\"<br \/>\n<br \/>\n<br \/>\nlib.carViews = CONTENT<br \/>\nlib.carViews {<br \/>\n  table = tx_mycarext_car<br \/>\n  select.pidInList = 42<br \/>\n  renderObj = TEXT<br \/>\n  renderObj {<br \/>\n    field = views<br \/>\n    numberFormat.thousands_sep = .<br \/>\n  }<br \/>\n}<br \/>\n# Will result in something like \"2.055\"<br \/>\n"},"offsetWrap":{"type":"intList","defaultValue":"\n","description":"This wraps the input in a table with columns to the left and top that offsets the content by the values of x,y. Based on the cObject OTABLE.<br \/>\n<br \/>\n.tableParams \/ .tdParams \/stdWrap<br \/>\n- used to manipulate tableParams\/tdParams (default width=99%)  of the offset. Default: See OTABLE.<br \/>\n<br \/>\n.stdWrap<br \/>\n- stdWrap properties wrapping the offsetWrap'ed output"},"outerWrap":{"type":"stdWrap","defaultValue":"\n","description":"Wraps the complete content"},"override":{"type":"stdWrap","defaultValue":"\n","description":"if \"override\" returns something else than \"\" or zero (trimmed), the content is loaded with this! "},"parseFunc":{"type":"parseFunc","defaultValue":"\n","description":"object path reference \/ parseFunc<br \/>\nProcessing instructions for the content.<br \/>\nNotice: If you enter a string as value this will be taken as a reference to an object path globally in the TypoScript object tree. This will be the basis configuration for parseFunc merged with any properties you add here. It works exactly like references does for content elements.<br \/>\n<br \/>\nExample:<br \/>\nparseFunc = < lib.parseFunc_RTE<br \/>\nparseFunc.tags.myTag = TEXT<br \/>\nparseFunc.tags.myTag.value = This will be inserted when <myTag> is found!"},"postCObject":{"type":"cObj","defaultValue":"\n","description":"cObject appended the content"},"postUserFunc":{"type":"string","defaultValue":"\n","description":"Calling a PHP-function or method in a class, passing the current content to the function as first parameter and any properties as second parameter. Please see the description of the cObject USER for in-depth information.<br \/>\n<br \/>\nExample:<br \/>\nYou can paste this example directly into a new template record.<br \/>\n<br \/>\npage = PAGE<br \/>\npage.typeNum=0<br \/>\nincludeLibs.something = media\/scripts\/example_callfunction.php<br \/>\n<br \/>\npage.10 = TEXT<br \/>\npage.10 {<br \/>\n  value = Hello World<br \/>\n  postUserFunc = user_reverseString<br \/>\n  postUserFunc.uppercase = 1<br \/>\n}<br \/>\n<br \/>\npage.20 = TEXT<br \/>\npage.20 {<br \/>\n  value = Hello World<br \/>\n  postUserFunc = user_various->reverseString<br \/>\n  postUserFunc.uppercase = 1<br \/>\n  postUserFunc.typolink = 11<br \/>\n}"},"postUserFuncInt":{"type":"string","defaultValue":"\n","description":"Calling a PHP-function or method in a class, passing the current content to the function as first parameter and any properties as second parameter. The result will be rendered non-cached, outside the main page-rendering. Please see the description of the cObject USER_INT and PHP_SCRIPT_INT for in-depth information.<br \/>\nSupplied by Jens Ellerbrock"},"preCObject":{"type":"cObj","defaultValue":"\n","description":"cObject prepended the content "},"preIfEmptyListNum":{"type":"string","defaultValue":"\n","description":"(as \"listNum\" below)"},"preUserFunc":{"type":"string","defaultValue":"\n","description":"Calling a PHP-function or method in a class, passing the current content to the function as first parameter and any properties as second parameter.<br \/>\nSee .postUserFunc"},"prefixComment":{"type":"string","defaultValue":"\n","description":"Prefixes content with a HTML comment with the second part of input string (divided by \"|\") where first part is an integer telling how many trailing tabs to put before the comment on a new line.<br \/>\nThe content is parsed through insertData.<br \/>\n<br \/>\nExample:<br \/>\nprefixComment = 2 | CONTENT ELEMENT, uid:{field:uid}\/{field:CType}<br \/>\n<br \/>\nWill indent the comment with 1 tab (and the next line with 2+1 tabs)<br \/>\n(Added in TYPO3 >3.6.0RC1)"},"prepend":{"type":"cObj","defaultValue":"\n","description":"cObject prepended to content (before)"},"prioriCalc":{"type":"boolean","defaultValue":"\n","description":"Calculation of the value using operators -+*\/%^ plus respects priority to + and - operators and parenthesis levels ().<br \/>\n. (period) is decimal delimiter.<br \/>\nReturns a doublevalue.<br \/>\nIf .prioriCalc is set to \"intval\" an integer is returned.<br \/>\nThere is no errorchecking and division by zero or other invalid values may generate strange results. Also you use a proper syntax because future modifications to the function used may allow for more operators and features.<br \/>\n<br \/>\nExamples:<br \/>\n100%7 = 2<br \/>\n-5*-4 = 20<br \/>\n+6^2 = 36<br \/>\n6 ^(1+1) = 36<br \/>\n-5*-4+6^2-100%7  = 54<br \/>\n-5 * (-4+6) ^ 2 - 100%7 = 98<br \/>\n-5 * ((-4+6) ^ 2) - 100%7 = -22"},"rawUrlEncode":{"type":"boolean","defaultValue":"\n","description":"Passes the content through rawurlencode()-PHP-function"},"removeBadHTML":{"type":"boolean","defaultValue":"\n","description":"Removes \"bad\" HTML code based on a pattern that filters away HTML that is considered dangerous for XSS bugs."},"replacement":{"type":"boolean","defaultValue":"","description":"Allows to execute search\/replace-functionality. Optionally PCRE-regex are supported (see: http:\/\/www.php.net\/manual\/en\/function.preg-replace.php) A numeric index allows multiple replacements at once.<br \/>\n<br \/>\nExample:<br \/>\n<br \/>\n20 = TEXT<br \/>\n20 {<br \/>\n  value = There_is_a_cat,_a_dog_and_a_tiger_in_da_hood!_Yeah!<br \/>\n  stdWrap.replacement {<br \/>\n    10 {<br \/>\n      search = _<br \/>\n      replace.char = 32<br \/>\n    }<br \/>\n    20 {<br \/>\n      search = in da hood<br \/>\n      replace = around the block<br \/>\n    }<br \/>\n    30 {<br \/>\n      search = #a (Cat|Dog|Tiger)#i<br \/>\n      replace = an animal<br \/>\n      useRegExp = 1<br \/>\n    }<br \/>\n  }<br \/>\n}<br \/>\n"},"required":{"type":"boolean","defaultValue":"\n","description":"This flag requires the content to be set to some value after any content-import and treatment that might have happend now (data, field, current, listNum, trim). Zero's is NOT regarded as empty! Use \"if\" instead!<br \/>\nIf the content i empty, \"\" is returned immediately."},"round":{"type":"array","defaultValue":"","description":"Round a number.<br \/>\n<br \/>\nAdditional properties:<br \/>\n<br \/>\n.roundType = round (default) | ceil | floor<br \/>\n.decimals = 0 (default) or number of digits after decimal separator (only with roundType = round)<br \/>\n<br \/>\n<br \/>\nExample:<br \/>\ntemp.number = TEXT<br \/>\ntemp.number {<br \/>\n  value = 3.14159<br \/>\n  round.roundType = round<br \/>\n}<br \/>\n<br \/>\nor<br \/>\n<br \/>\ntemp.number = TEXT<br \/>\ntemp.number {<br \/>\n  value = 3.14159<br \/>\n  round.decimals = 2<br \/>\n}"},"setContentToCurrent":{"type":"boolean","defaultValue":"\n","description":"Sets the current value to the incoming content of the function."},"setCurrent":{"type":"stdWrap","defaultValue":"\n","description":"Sets the \"current\"-value. This is normally set from some outside routine, so be careful with this. But it might be handy to do this"},"space":{"type":"stdWrap","defaultValue":"\n","description":"[space \/stdWrap<br \/>\n\t\t\tspaceBefore]   |   [spaceAfter]<br \/>\n<br \/>\nAdditional property:<br \/>\n.useDiv = 1<br \/>\nIf set, a clear gif is not used by rather a <div> tag with a style-attribute setting the height. (Affects spaceBefore and spaceAfter as well)."},"spaceAfter":{"type":"stdWrap","defaultValue":"\n","description":"Pixels space after. Done with a clear-gif; <img ...><BR>"},"spaceBefore":{"type":"stdWrap","defaultValue":"\n","description":"Pixels space before. Done with a clear-gif; <img ...><BR>"},"split":{"type":"split","defaultValue":"\n","description":"<br \/>\n"},"stdWrap":{"type":"stdWrap","defaultValue":"\n","description":"Recursive call to stdWrap function"},"strftime":{"type":"string","defaultValue":"\n","description":"Exactly like \"date\" above. See the PHP-manual (strftime) for the codes, or datatype \"strftime-conf\".<br \/>\nThis formatting is useful if the locale is set in advance in the CONFIG-object. See this.<br \/>\n<br \/>\nProperties:<br \/>\n.charset  : Can be set to the charset of the output string if you need to convert it to renderCharset. Default is to take the intelligently guessed charset from t3lib_cs."},"stripHtml":{"type":"boolean","defaultValue":"\n","description":"Strips all html-tags."},"substring":{"type":"stringList","defaultValue":"\n","description":"Returns the substring with [p1] and [p2] send as the 2nd and 3rd parameter to the PHP substring function.<br \/>\n<br \/>\nUses \"renderCharset\" for the operation."},"tableStyle":{"type":"tableStyle","defaultValue":"\n","description":"Wraps content with table-tags"},"textStyle":{"type":"textStyle","defaultValue":"\n","description":"Wraps content in font-tags"},"trim":{"type":"boolean","defaultValue":"\n","description":"PHP-function trim(); Removes whitespace around value"},"typolink":{"type":"typolink","defaultValue":"\n","description":"Wraps the content with a link-tag"},"wrap":{"type":"wrapSplitChar","defaultValue":"\n","description":""},"wrap2":{"type":"wrapSplitChar","defaultValue":"\n","description":"same as .wrap (but watch the order in which they are executed)"},"wrap3":{"type":"wrapSplitChar","defaultValue":"\n","description":"same as .wrap (but watch the order in which they are executed)"},"wrapAlign":{"type":"stdWrap","defaultValue":"\n","description":"Wraps content with <div style=text-align:[value];\"> | <\/div> if align is set"}}},"SVG":{"extendsType":"","properties":{"width":{"type":"stdWrap","defaultValue":"600","description":"int\/stdWrap<br \/>\n\t\t\twidth of SVG<br \/>\n"},"height":{"type":"stdWrap","defaultValue":"400","description":"int\/stdWrap<br \/>\n\t\t\theight of SVG<br \/>\n"},"src":{"type":"stdWrap","defaultValue":"\n","description":"file resource\/stdWrap<br \/>\n\t\t\tSVG file resource<br \/>\n"},"value":{"type":"stdWrap","defaultValue":"\n","description":"XML\/stdWrap<br \/>\n\t\t\tSVG raw XML. When src is defined the file will be loaded and value is ignored.<br \/>\n<br \/>\nExample:<br \/>\n10 = SVG<br \/>\n10 {<br \/>\n   width = 600<br \/>\n   height = 600<br \/>\n   value (<br \/>\n\t<rect x=\"100\" y=\"100\" width=\"500\" height=\"200\" fill=\"white\" stroke=\"black\" stroke-width=\"5px\"\/><br \/>\n\t<line x1=\"0\" y1=\"200\" x2=\"700\" y2=\"200\" stroke=\"red\" stroke-width=\"20px\"\/><br \/>\n        <polygon points=\"185 0 125 25 185 100\" transform=\"rotate(135 125 25)\" \/><br \/>\n        <circle cx=\"190\" cy=\"150\" r=\"40\" stroke=\"black\" stroke-width=\"2\" fill=\"yellow\"\/><br \/>\n   )<br \/>\n   noscript.cObject = TEXT<br \/>\n   noscript.cObject.value = no svg rendering possible, use a browser<br \/>\n}<br \/>\n"},"noscript":{"type":"stdWrap","defaultValue":"\n","description":"text\/stdWrap<br \/>\n\t\t\tOutput if SVG output is not possible<br \/>\n"}}},"tableStyle":{"extendsType":"","properties":{"align":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"border":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"cellpadding":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"cellspacing":{"type":"stdWrap","defaultValue":"\n","description":"<br \/>\n"},"color.default":{"type":"string","defaultValue":"\n","description":"[default],[1],[2] = User defined<br \/>\n"},"color.field":{"type":"string","defaultValue":"\n","description":"Set to fieldname from the $cObj->data-array"},"params":{"type":"string","defaultValue":"\n","description":"HTML table parameters<br \/>\n"}}},"tags":{"extendsType":"array","properties":{"[myHtmlTag]":{"type":"cObject","defaultValue":"\n","description":"Every entry in the Array... corresponds to a tag, that will be parsed. The elements MUST be in lowercase.<br \/>\nEvery entry must be set to a content-object.<br \/>\n\"current\" is set to the content of the tag, eg <TAG>content<\/TAG>: here \"current\" is set to \"content\".<br \/>\nParameters:<br \/>\nParameters of the tag is set in $cObj->parameters (key is lowercased):<br \/>\n<TAG COLOR=\"red\">content<\/TAG><br \/>\n=> $cObj->parameters[color] = red<br \/>\nSpecial added properties to the content-object:<br \/>\n$cObj->parameters[allParams]:  this is automatically set to the whole parameter-string of the tag, eg ' color=\"red\"'<br \/>\n[cObject].stripNL: is a boolean option, which tells parseFunc that NewLines before and after content of the tag should be stripped.<br \/>\n[cObject].breakoutTypoTagContent: is a boolean option, which tells parseFunc that this block of content is breaking up the nonTypoTag content and that the content after this must be re-wrapped.<br \/>\n<br \/>\nExamples:<br \/>\ntags.bold = TEXT<br \/>\ntags.bold {<br \/>\n  current = 1<br \/>\n  wrap = <B> | <\/B><br \/>\n}<br \/>\ntags.bold.stripNL = 1"}}},"textStyle":{"extendsType":"","properties":{"align.field":{"type":"align","defaultValue":"\n","description":"Set to fieldname from the $cObj->data-array"},"altWrap":{"type":"wrap","defaultValue":"\n","description":"If this value is set, the wrapping with a font-tag based on font,size and color is NOT done. Rather the element is wrapped with this value.<br \/>\nUse it to assign a stylesheet by setting this value to eg.<br \/>\n<br \/>\n<div class=\"text\"> | <\/div>"},"color.1":{"type":"string","defaultValue":"\n","description":"[1],[2] = User defined"},"color.default":{"type":"stdWrap","defaultValue":"\n","description":"[default] = User defined"},"color.field":{"type":"string","defaultValue":"\n","description":"Set to fieldname from the $cObj->data-array<br \/>\n<br \/>\nSee \"content.php\" for the colors available"},"face.default":{"type":"stdWrap","defaultValue":"\n","description":"[default] = User defined"},"face.field":{"type":"string","defaultValue":"\n","description":"Set to fieldname from the $cObj->data-array<br \/>\n<br \/>\n[1] = \"Times New Roman\";<br \/>\n[2] = \"Verdana,Arial,Helvetica,Sans serif\";<br \/>\n[3] = \"Arial,Helvetica,Sans serif\";"},"properties.default":{"type":"stdWrap","defaultValue":"\n","description":"[default] = User defined (This value will be used whenever \".field\" is false!)"},"properties.field":{"type":"int","defaultValue":"\n","description":"Set to fieldname from the $cObj->data-array<br \/>\n<br \/>\nThe property values goes like this:<br \/>\nbit 0: <B><br \/>\nbit 1: <I><br \/>\nbit 2: <U><br \/>\nbit 3: (uppercase)<br \/>\n<br \/>\nThus a value of 5 would result in bold and underlined text"},"size.default":{"type":"stdWrap","defaultValue":"\n","description":"[default] = User defined"},"size.field":{"type":"string","defaultValue":"\n","description":"Set to fieldname from the $cObj->data-array<br \/>\n<br \/>\n[1] = 1;<br \/>\n[2] = 2;<br \/>\n[3] = 3;<br \/>\n[10] = \"+1\";<br \/>\n[11] = \"-1\";"}}},"typolink":{"extendsType":"","properties":{"ATagBeforeWrap":{"type":"boolean","defaultValue":"\n","description":"If set, the link is first wrapped with \".wrap\" and then the <A>-tag."},"ATagParams":{"type":"stdWrap","defaultValue":"\n","description":"Additional parameters<br \/>\n<br \/>\nExample:<br \/>\nclass=\"board\""},"JSwindow_params":{"type":"string","defaultValue":"\n","description":"Preset values for opening the window. This example lists almost all possible attributes:<br \/>\nstatus=1,menubar=1,scrollbars=1,resizable=1,location=1,directories=1,toolbar=1"},"jumpurl":{"type":"filelink.jumpurl","defaultValue":"\n","description":"boolean<br \/>\n\t\t\tDecides if the link should call the script with the jumpurl parameter in order to register any clicks in the stat. This works the same as \"filelink.jumpurl\", see more details there.<br \/>\nExample:<br \/>\ntypolink.jumpurl =1<br \/>\ntypolink.jumpurl.secure =1<br \/>\ntypolink.jumpurl.secure.mimeTypes = list of mimetypes, syntax [ext] = [mimetype]<br \/>\n"},"addQueryString":{"type":"boolean","defaultValue":"\n","description":"Add the QUERY_STRING to the start of the link. Notice that this does not check for any duplicate parameters! This is not a problem (only the last parameter of the same name will be applied), but enable \"config.uniqueLinkVars\" if you still don't like it.<br \/>\n<br \/>\n.method: If set to to GET or POST then then the parsed query arguments (GET or POST data) will be used. This settings are useful if you use URL processing extensions like Real URL, which translate part of the path into query arguments.<br \/>\nIt's also possible to get both, POST and GET data, on setting this to<br \/>\n\"POST,GET\" or \"GET,POST\". The last method in this sequence takes<br \/>\nprecedence and overwrites the parts that are also present for the first<br \/>\nmethod.<br \/>\n<br \/>\n.exclude: List of query arguments to exclude from the link (eg L or cHash)."},"additionalParams":{"type":"stdWrap","defaultValue":"\n","description":"This is parameters that are added to the end of the url. This must be code ready to insert after the last parameter.<br \/>\n<br \/>\nExample:<br \/>\n'&print=1'<br \/>\n'&sword_list[]=word1&sword_list[]=word2'<br \/>\n<br \/>\nApplications:<br \/>\nThis is very useful when linking to pages from a searchresult. The searchwords are stored in the register-key SWORD_PARAMS and can be insert directly like this:<br \/>\n.additionalParams.data = register:SWORD_PARAMS<br \/>\n<br \/>\nNOTE: This is only active for internal links!"},"extTarget":{"type":"stdWrap","defaultValue":"_top","description":"target used for external links"},"fileTarget":{"type":"string","defaultValue":"\n\t\t\t","description":"Default file link target. Used by typolink if no fileTarget is set. "},"no_cache":{"type":"stdWrap","defaultValue":"\n","description":"Adds a \"&no_cache=1\"-parameter to the link"},"parameter":{"type":"stdWrap","defaultValue":"\n","description":"This is the data, that ->typolink uses to create the link. The value is trimmed and if it's empty, ->typolink returns the input value untouched.<br \/>\n<br \/>\nNOTE: If used from parseFunc, this value should be imported by:<br \/>\ntypolink.parameter.data = parameters : allParams<br \/>\n<br \/>\nExamples:<br \/>\nInternal links:<br \/>\nintegers (51): creates a link to page with uid = 51<br \/>\nfilerefs (fileadmin\/somedir\/thedoc.html): creates a link to the file on the local server.<br \/>\nstrings (some_alias):  creates a link to the page with alias = \"some_alias\"<br \/>\n<br \/>\nExternal links:<br \/>\nemail-adresses (name@email.com): creates a link to the email-addr.<br \/>\ndomains (www.domain.com): creates link to http:\/\/-page<br \/>\n<br \/>\nThe input is parsed like this:<br \/>\nFirst the parameter is splitted by character-space. This provides a way to pass more parameters. See \"target\" below here.<br \/>\nIf a \"@\" is in the string, it's an email<br \/>\nIf a period (.) is in the string AND if the period (.) is found before a slash (\/) is found OR if a doubleslash is found, then it's a URL<br \/>\nIf a slash (\/) is found, it's a filereference. If the file\/directory does not exist on the server, the link is NOT made!<br \/>\n<br \/>\nNow the input can be an alias or page-id. If the input is an integer it's a page-id, if it's two comma separated integers, it's a id\/type pair, else it's an alias. For page-id's or aliases you can prepend a \"#\" mark with a number indication tt_content record number on the page to jump to! (if .section-property is present, it overrides this).<br \/>\nIf you insert only \"#234\" where \"234\" is the tt_content record number, it links to the current page-id<br \/>\nNotice: The parameter can contain a keyword that hands over link generation to an external function. See example below this table!<br \/>\n<br \/>\nTarget<br \/>\nTarget is normally defined by the \"extTarget\" and \"target\" properties of typolink. But you may override this target by adding the new target after the parameter separated by a whitespace. Thus the target becomes the second parameter.<br \/>\nIf the \"Target\" parameter is set to the \"-\" character, then it's the same as no target passed to the function. This feature enables you to still pass a class as third parameter and title as fourth parameter without setting the target also.<br \/>\n<br \/>\nOpen in windows with fixed dimensions (JavaScript)<br \/>\nIt is possible to open the link in a window opened by JavaScript (with \"window.open\"). For this, just set the target value to \"123x456\" where 123 is the window width and 456 is the window height. You can also specify additional parameters to the function by entering them separated from the width and height with a colon \":\". For instance \"230x450:resizable=0,location=1\" will disable resizing of the window and enable the location bar.<br \/>\nAlso see property \"JSwindow\".<br \/>\n<br \/>\nClass<br \/>\nIf you specify a third parameter separated by whitespace in the parameter value this becomes the class-parameter of the link. This class parameter is inserted in the link-tag before any values from .ATagParams which means this class value will override any class value set in ATagParams (at least for MSIE). If set to \"-\", then it's the same as no class passed to the function. This feature enables you to still pass a title as fourth parameter without setting the class also.<br \/>\n<br \/>\nTitle<br \/>\nThe title attribute is normally specified via .ATagParams or directly via the .title property. But you may override this value by adding the desired title as the fourth parameter (parameters separated by whitespace) to typolink.<br \/>\n<br \/>\nExamples of multiparameters:<br \/>\nConsider this .parameter value passed to this function:<br \/>\n<br \/>\n51  _blank  blueLink<br \/>\n<br \/>\nThis would result in a link approx like this:<br \/>\n<br \/>\n<A href=\"?id=51\" target=\"_blank\" class=\"blueLink\">"},"returnLast":{"type":"string","defaultValue":"\n","description":"If set to \"url\" then it will return the URL of the link ($this->lastTypoLinkUrl)<br \/>\nIf set to \"target\" it will return the target of the link.<br \/>\nSo, in these two cases you will not get the value wrapped but the url or target value returned!"},"section":{"type":"stdWrap","defaultValue":"\n","description":"If this value is present, it's prepended with a \"#\" and placed after any internal url to another page in TYPO3.<br \/>\nThis is used create a link, which jumps from one page directly the section on another page."},"target":{"type":"stdWrap","defaultValue":"\n","description":"target used for internal links"},"title":{"type":"stdWrap","defaultValue":"\n","description":"Sets the title parameter of the A-tag."},"useCacheHash":{"type":"boolean","defaultValue":"\n","description":"If set, the additionalParams list is exploded and calculated into a hashstring appended to the url, like \"&cHash=ae83fd7s87\". When the caching mechanism sees this value, it calculates the same value on the server based on incoming values in HTTP_GET_VARS, excluding id,type,no_cache,ftu,cHash,MP values. If the incoming cHash value matches the calculated value, the page may be cached based on this.<br \/>\nThe [SYS][encryptionKey] is included in the hash in order to make it unique for the server and non-predictable."},"userFunc":{"type":"string","defaultValue":"\n","description":"This passes the link-data compiled by the typolink function to a user-defined function for final manipulation.<br \/>\nThe $content variable passed to the user-function (first parameter) is an array with the keys \"TYPE\",  \"TAG\", \"url\", \"targetParams\" and \"aTagParams\".<br \/>\nTYPE is an indication of link-kind: mailto, url, file, page<br \/>\nTAG is the full <A>-tag as generated and ready from the typolink function.<br \/>\nThe latter three is combined into the 'TAG' value after this formula:<br \/>\n<br \/>\n<a href=\"'.$finalTagParts['url'].'\"'.<br \/>\n           $finalTagParts['targetParams'].<br \/>\n           $finalTagParts['aTagParams'].'><br \/>\n<br \/>\nThe userfunction must return an <A>-tag."},"wrap":{"type":"wrap","defaultValue":"\n","description":"Wraps the links."}}}}